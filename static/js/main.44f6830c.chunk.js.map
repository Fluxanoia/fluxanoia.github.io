{"version":3,"sources":["utils/colours.tsx","utils/dimensions.tsx","utils/normalise.tsx","utils/globalStyling.tsx","components/title.tsx","components/footer.tsx","utils/types.tsx","components/inlineImage.tsx","components/button.tsx","pages/pages.tsx","hooks/spotifyAuthenticator.tsx","hooks/spotifyError.tsx","components/pill.tsx","components/collapse.tsx","components/fluxify/fluxifyLoading.tsx","components/fluxify/fluxifyLogin.tsx","components/fluxify/fluxifyImages.tsx","components/fluxify/fluxifyLogout.tsx","components/fluxify/fluxifyHeader.tsx","components/fluxify/fluxifyElement.tsx","utils/misc.tsx","hooks/elementSelector.tsx","hooks/optionsSelector.tsx","components/colorPicker.tsx","hooks/playlistImageSelector.tsx","utils/spotify.tsx","hooks/spotifyPlaylists.tsx","components/fluxify/ops/fluxifyOp.tsx","components/fluxify/ops/fluxifyExcusiveLiked.tsx","components/fluxify/ops/fluxifyMergePlaylists.tsx","components/fluxify/ops/fluxifyUnfollowFluxify.tsx","components/fluxify/ops/fluxifyAutoArtistPlaylists.tsx","pages/fluxify.tsx","hooks/spotifyClient.tsx","pages/home.tsx","pages/notFound.tsx","components/divider.tsx","components/sectionTitle.tsx","pages/projects.tsx","components/cv/cvHeader.tsx","components/cv/cvLightDivider.tsx","components/cv/cvTitle.tsx","components/cv/cvLeftColumn.tsx","components/cv/cvRightColumn.tsx","pages/cv/cvTyler.tsx","pages/cv/cvPage.tsx","pages/discord.tsx","pages/specs.tsx","pages/external.tsx","pages/teelai.tsx","pages/contact.tsx","App.tsx","index.tsx"],"names":["containerColour","containerBorderColour","containerStyling","defaultBgColour","textColour","cvColour1","cvColour2","cvTextColour","mainContainerWidth","spacing1","spacing2","spacing3","spacing4","cvSpacing1","cvSpacing2","cvSpacing3","ifSuperSmall","ifSmall","ifLarge","mainContainerSizeSettings","normalise","titleFontSettings","mainFontSettings","buttonHoverStyling","buttonStyling","clearButtonStyling","GlobalStyling","createGlobalStyle","props","bgColour","Title","page","otherProps","TitleContainer","TextContainer","to","isOnNavbar","isNotFound","getName","styled","div","Link","shadows","prefixes","forEach","size","a","b","push","map","s","join","getTitleShadow","Footer","Container","Side","p","LoadingState","isLoaded","states","every","state","LOADED","InlineImage","className","ImageContainer","side","LEFT","Image","imageSizing","span","RIGHT","img","Button","children","href","newTab","forceHover","button","ButtonContainer","style","linkStyling","target","rel","display","textDecoration","cursor","Page","component","_props","this","links","isLocal","getLink","key","path","exact","link","accentColour","name","toLowerCase","local","onNavbar","home","notFound","independent","scopes","getHashToken","w","cookie","process","accessTokenName","hash","parse","location","data","Array","Cookies","remove","set","getCookieToken","get","useSpotifyAuth","useState","window","hashToken","setHashToken","cookieToken","setCookieToken","scroll_v","scroll_h","loc","history","pushState","document","title","pathname","search","body","scrollTop","scrollLeft","removeHash","getLoadingError","componentName","UnexpectedError","getErrorMessage","e","response","status","message","discernError","errors","find","discernErrorMessage","useError","error","setError","useCallback","Pill","PillContainer","radius","Collapse","open","setOpen","value","MainContainer","onClick","o","Arrow","ValueContainer","ChildContainer","HiOutlineArrowCircleRight","FluxifyLoading","LoadingContainer","LoadingIcon","stroke","TailSpin","FluxifyLogin","getRedirect","FluxifyLoginPage","SpotifyImage","images","liked","PseudoComponent","LikedImageIcon","PseudoImageIcon","length","PseudoImage","color","TrueImage","src","url","alt","FaHeart","BsMusicNoteBeamed","FluxifyLogout","logout","FluxifyLogoutPage","FluxifyHeader","client","HeaderContainer","UserImage","user","Logout","h1","imageId","titleId","largeSize","smallSize","sizing","layering","Sized","LayerContainer","Layer","ElementContainer","ImageLayer","ImageElement","TitleLayer","CheckLayer","Check","AiFillCheckCircle","selected","quantityText","amount","capacity","noun","randomString","result","chars","len","i","charAt","Math","floor","random","rgbToHex","r","g","inRange","x","toString","LikedSongsElement","id","usePlaylistSelector","playlists","options","elements","useMemo","includeLiked","uri","raw","selectorOptions","useElementSelector","elementName","setSelected","isSelected","checkId","some","components","updateSelected","newId","concat","filter","element","FluxifyElement","CollapseContainer","SelectInfoContainer","SelectTextContainer","SelectButton","ElementsContainer","BooleanOptionNextValue","v","BooleanOptionComponent","Cross","ImCheckmark","ImCross","useOptionSelector","optionInfo","def","getDefaultData","setData","updateData","otherData","OptionsContainer","Option","getNextValue","sliderRailStyle","backgroundColor","height","useColourPicker","startingColour","hex","slice","rgb","match","parseInt","hexToRgb","startR","startG","startB","setR","setG","setB","renderSlider","log","highlight","min","max","step","defaultValue","onChange","trackStyle","handleStyle","borderColor","width","marginTop","railStyle","ColourBox","SliderBox","ImageType","usePlaylistImageSelector","IMAGE","imageType","setImageType","colourComponent","colour","InnerContainer","COLOUR","ColourPickerContainer","NONE","type","resolve","createColourUri","canvas","createCanvas","ctx","getContext","fillStyle","rect","fill","toDataURL","replace","createPlaylist","throwError","desc","image","playlistOptions","description","public","collaborative","collab","create","catch","playlist","fetch","then","text","imageUri","uploadImage","load","loader","hitLimit","items","offset","total","limit","loadPlaylists","getPlaylists","loadTracks","args","getTracks","Playlist","loadLiked","loadAllTracks","tracks","addToPlaylist","uris","add","useSpotifyPlaylists","token","loadState","setLoadState","resetError","setPlaylists","reset","useEffect","LOADING","FluxifyOp","useErrorAggregator","hasError","setHasError","wrapRun","disable","finish","run","renderOp","displayRun","lastIndex","OpWrapper","removeMargin","RunButton","shuffleOption","opName","exclusiveLikedOp","throwGlobalError","loaded","playlistError","selectorComponent","optionsComponent","imageComponent","imageColour","localError","newPlaylist","likedTracks","playlistTracks","exclusives","trackUris","Set","t","track","likedUris","has","shuffle","distinctOption","mergeOp","uniqBy","unfollowFluxifyOp","startsWith","unfollow","autoArtistPlaylistsOp","rawTracks","Track","artists","directory","artist","a_id","a_name","ops","fluxifyLink","fluxifyPage","_logout","setClient","Client","info","useSpotifyClient","clientError","resetClient","currentOp","setCurrentOp","disabled","setDisabled","currentOpData","op","undefined","CurrentOpComponent","getComponent","InterfaceWrapper","SelectCollapse","getDescription","SelectWrapper","CurrentOpWrapper","enable","homePage","notFoundPage","Divider","SectionTitle","accent","SectionTitleContainer","DividerContainer","h2","helixUrl","projectsPage","oldProjectLink","renderProject","WidgetContainer","dangerouslySetInnerHTML","__html","ProjectContainer","Spacer","ChildrenContainer","createLink","icon","noLink","LinkContainer","includes","CvHeader","SubtitleContainer","LinksContainer","h3","CvLightDivider","LightDivider","CvTitle","createEntry","time","content","EntryContainer","EntryTitle","EntryIconContainer","EntryIcon","EntryTextContainer","CvLeftColumn","languages","sort","skills","createSection","SectionContainer","createIcons","icons","IconContainer","Icon","createProject","ProjectTitle","ProjectContent","CvRightColumn","ProjectsContainer","cvFilePath","cvTyler","showButtons","setShowButtons","toggleButtons","filename","y","toPdf","targetRef","show","ref","ColumnContainer","LeftContainer","RightContainer","AndMoreContainer","cvPage","bulleted","renderRecord","timeAndLocation","RecordContainer","RecordTitleContainer","RecordTitleTextContainer","TimeAndLocationContainer","RecordContentContainer","RecordTextContainer","BulletedContainer","Section","SectionOuterContainer","SectionInnerContainer","h4","discordPage","specsPage","TableContainer","renderRow","part","RowContainer","LeftTextContainer","RightTextContainer","githubPage","teelaiPage","contactMePage","AtSignWrapper","AtSign","FiAtSign","pages","getCurrentIndex","currentPageIndex","findIndex","hasLink","renderRoute","getRoute","withRouter","pageIndex","setPageIndex","routes","isIndependent","getColour","navbarButtons","index","getButton","getNavbarButtonRenderer","console","AppContainer","Navbar","nav","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.44f6830c.chunk.js","sourcesContent":["export const containerColour = '#252525';\r\nexport const containerBorderColour = '#FFFFFF';\r\nexport const containerStyling = `\r\n    background-color: ${containerColour};\r\n    border-color: ${containerBorderColour};\r\n    border-style: solid;\r\n    border-width: 5px;\r\n    border-radius: 16px;\r\n    box-shadow: 0px 0px 20px 6px rgba(40, 40, 40, 0.4); \r\n`;\r\n\r\nexport const defaultBgColour = '#9c9c9c';\r\n\r\nexport const textColour = '#FFFFFF';\r\n\r\nexport const cvColour1 = '#e2387c';\r\nexport const cvColour2 = '#661d3a';\r\nexport const cvTextColour = '#333333';\r\n","export const mainContainerWidth = '800px';\r\n\r\nexport const spacing0 = '4px';\r\nexport const spacing1 = '8px';\r\nexport const spacing2 = '16px';\r\nexport const spacing3 = '24px';\r\nexport const spacing4 = '32px';\r\n\r\nexport const cvSpacing0 = '0.5mm';\r\nexport const cvSpacing1 = '1mm';\r\nexport const cvSpacing2 = '2mm';\r\nexport const cvSpacing3 = '4mm';\r\nexport const cvSpacing4 = '8mm';\r\n\r\nexport const ifSuperSmall = '@media (max-width: 500px)';\r\nexport const ifSmall = '@media (max-width: 768px)';\r\nexport const ifLarge = '@media (min-width: 768px)';\r\n\r\nexport const mainContainerSizeSettings = `\r\n    box-sizing: border-box;\r\n    width: 90%;\r\n    ${ifLarge} {\r\n        width: 60%;\r\n    }\r\n    max-width: ${mainContainerWidth};\r\n    margin: 0 auto;\r\n`;\r\n","// normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css\r\nexport const normalise = `\r\n    html {\r\n    line-height: 1.15; /* 1 */\r\n    -webkit-text-size-adjust: 100%; /* 2 */\r\n    }\r\n\r\n    body {\r\n    margin: 0;\r\n    }\r\n\r\n    main {\r\n    display: block;\r\n    }\r\n\r\n\r\n    h1 {\r\n    font-size: 2em;\r\n    margin: 0.67em 0;\r\n    }\r\n\r\n    hr {\r\n    box-sizing: content-box; /* 1 */\r\n    height: 0; /* 1 */\r\n    overflow: visible; /* 2 */\r\n    }\r\n\r\n    pre {\r\n    font-family: monospace, monospace; /* 1 */\r\n    font-size: 1em; /* 2 */\r\n    }\r\n\r\n    a {\r\n    background-color: transparent;\r\n    }\r\n\r\n    abbr[title] {\r\n    border-bottom: none; /* 1 */\r\n    text-decoration: underline; /* 2 */\r\n    text-decoration: underline dotted; /* 2 */\r\n    }\r\n\r\n    b,\r\n    strong {\r\n    font-weight: bolder;\r\n    }\r\n\r\n    code,\r\n    kbd,\r\n    samp {\r\n    font-family: monospace, monospace; /* 1 */\r\n    font-size: 1em; /* 2 */\r\n    }\r\n\r\n    small {\r\n    font-size: 80%;\r\n    }\r\n\r\n    sub,\r\n    sup {\r\n    font-size: 75%;\r\n    line-height: 0;\r\n    position: relative;\r\n    vertical-align: baseline;\r\n    }\r\n\r\n    sub {\r\n    bottom: -0.25em;\r\n    }\r\n\r\n    sup {\r\n    top: -0.5em;\r\n    }\r\n\r\n    img {\r\n    border-style: none;\r\n    }\r\n\r\n    button,\r\n    input,\r\n    optgroup,\r\n    select,\r\n    textarea {\r\n    font-family: inherit; /* 1 */\r\n    font-size: 100%; /* 1 */\r\n    line-height: 1.15; /* 1 */\r\n    margin: 0; /* 2 */\r\n    }\r\n\r\n    button,\r\n    input { /* 1 */\r\n    overflow: visible;\r\n    }\r\n\r\n    button,\r\n    select { /* 1 */\r\n    text-transform: none;\r\n    }\r\n\r\n    button,\r\n    [type=\"button\"],\r\n    [type=\"reset\"],\r\n    [type=\"submit\"] {\r\n    -webkit-appearance: button;\r\n    }\r\n\r\n    button::-moz-focus-inner,\r\n    [type=\"button\"]::-moz-focus-inner,\r\n    [type=\"reset\"]::-moz-focus-inner,\r\n    [type=\"submit\"]::-moz-focus-inner {\r\n    border-style: none;\r\n    padding: 0;\r\n    }\r\n\r\n    button:-moz-focusring,\r\n    [type=\"button\"]:-moz-focusring,\r\n    [type=\"reset\"]:-moz-focusring,\r\n    [type=\"submit\"]:-moz-focusring {\r\n    outline: 1px dotted ButtonText;\r\n    }\r\n\r\n    fieldset {\r\n    padding: 0.35em 0.75em 0.625em;\r\n    }\r\n\r\n    legend {\r\n    box-sizing: border-box; /* 1 */\r\n    color: inherit; /* 2 */\r\n    display: table; /* 1 */\r\n    max-width: 100%; /* 1 */\r\n    padding: 0; /* 3 */\r\n    white-space: normal; /* 1 */\r\n    }\r\n\r\n    progress {\r\n    vertical-align: baseline;\r\n    }\r\n\r\n    textarea {\r\n    overflow: auto;\r\n    }\r\n\r\n    [type=\"checkbox\"],\r\n    [type=\"radio\"] {\r\n    box-sizing: border-box; /* 1 */\r\n    padding: 0; /* 2 */\r\n    }\r\n\r\n    [type=\"number\"]::-webkit-inner-spin-button,\r\n    [type=\"number\"]::-webkit-outer-spin-button {\r\n    height: auto;\r\n    }\r\n\r\n    [type=\"search\"] {\r\n    -webkit-appearance: textfield; /* 1 */\r\n    outline-offset: -2px; /* 2 */\r\n    }\r\n\r\n    [type=\"search\"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n    }\r\n\r\n    ::-webkit-file-upload-button {\r\n    -webkit-appearance: button; /* 1 */\r\n    font: inherit; /* 2 */\r\n    }\r\n\r\n    details {\r\n    display: block;\r\n    }\r\n\r\n    summary {\r\n    display: list-item;\r\n    }\r\n\r\n    template {\r\n    display: none;\r\n    }\r\n\r\n    [hidden] {\r\n    display: none;\r\n    }\r\n`;","import { createGlobalStyle } from \"styled-components\";\r\nimport { containerColour, containerStyling, defaultBgColour, textColour } from \"./colours\";\r\nimport { ifLarge, spacing2 } from \"./dimensions\";\r\nimport { normalise } from \"./normalise\";\r\n\r\nexport const titleFont = `Fredoka One`;\r\nexport const mainFont = `Poppins`;\r\nexport const titleFontSettings = `\r\n    font-family: ${titleFont};\r\n`;\r\nexport const mainFontSettings = `\r\n    font-family: ${mainFont}, sans-serif;\r\n    font-weight: 700;\r\n    line-height: 1.5;\r\n`;\r\n\r\nexport const buttonHoverStyling = `\r\n    color: ${containerColour};\r\n    background-color: ${textColour};\r\n`;\r\nexport const buttonStyling = `\r\n    ${containerStyling}\r\n    ${mainFontSettings}\r\n\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0;\r\n\r\n    text-align: center;\r\n    cursor: pointer;\r\n\r\n    color: ${textColour};\r\n    background-color: ${containerColour};\r\n    &:hover {\r\n        ${buttonHoverStyling}\r\n    }\r\n`;\r\nexport const clearButtonStyling = `\r\n    width: auto;\r\n\r\n    border: none;\r\n    box-shadow: none;\r\n\r\n    color: inherit;\r\n    background-color: transparent;\r\n    &:hover {\r\n        color: inherit;\r\n        background-color: transparent;\r\n    }\r\n`;\r\n\r\nexport const bgTransitionTime = `1s`;\r\n\r\nexport const GlobalStyling = createGlobalStyle<{ bgColour? : string }>`\r\n    ${normalise}\r\n\r\n    html {\r\n        ${mainFontSettings}\r\n        color: ${textColour};\r\n\r\n        font-size: 18px;\r\n        ${ifLarge} {\r\n            font-size: 20px;\r\n        }\r\n    }\r\n    body {\r\n        background-color: ${props => props.bgColour ?? defaultBgColour};\r\n        transition: background-color ${bgTransitionTime};\r\n    }\r\n\r\n    button {\r\n        ${buttonStyling}\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, p {\r\n        margin-top: 0;\r\n        margin-bottom: ${spacing2};\r\n    }\r\n    h1 {\r\n        font-size: 40px;\r\n    }\r\n    h2 {\r\n        font-size: 32px;\r\n    }\r\n    h3 {\r\n        font-size: 24px;\r\n    }\r\n    h4 {\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n    }\r\n\r\n    a {\r\n        color: inherit;\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Page from \"../pages/pages\"\r\nimport { textColour } from \"../utils/colours\";\r\nimport { ifLarge, mainContainerWidth } from \"../utils/dimensions\";\r\nimport { titleFontSettings } from \"../utils/globalStyling\";\r\nimport { DivProps } from \"../utils/types\";\r\n\r\ntype TitleProps = {\r\n    page? : Page,\r\n} & DivProps;\r\nexport default function Title(props : TitleProps) {\r\n    const { page, ...otherProps } = props;\r\n    return (\r\n        <TitleContainer {...otherProps}>\r\n            <TextContainer to=\"/\">\r\n                { page && !page.isOnNavbar() && !page.isNotFound() ? page.getName() : \"Fluxanoia\" }\r\n            </TextContainer>\r\n        </TitleContainer>\r\n    );\r\n}\r\n        \r\nconst getTitleShadow = () => {\r\n    const colour = '#000';\r\n    let shadows : string[] = [];\r\n\r\n    const prefixes = ['', '-'];\r\n    ['1px'].forEach((size : string) => {\r\n        prefixes.forEach((a : string) => {\r\n            prefixes.forEach((b : string) => {\r\n                shadows.push(a + size + ' ' + b + size);\r\n            });\r\n            shadows.push(a + size + ' 0');\r\n            shadows.push('0 ' + a + size);\r\n        });\r\n    })\r\n\r\n    const size = '3px';\r\n    shadows.push('0 ' + size);\r\n    shadows.push(size + ' 0');\r\n    shadows.push(size + ' ' + size);\r\n\r\n    return shadows.map(s => s + ' 0 ' + colour).join();\r\n}\r\n\r\nconst TitleContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    width: 100%;\r\n`;\r\nconst TextContainer = styled(Link)`\r\n    max-width: ${mainContainerWidth};\r\n\r\n    text-shadow: ${getTitleShadow()};\r\n\r\n    ${titleFontSettings}\r\n    text-decoration: none !important;\r\n    color: ${textColour} !important;\r\n\r\n    font-size: 80px;\r\n    ${ifLarge} {\r\n        font-size: 100px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { containerStyling } from \"../utils/colours\";\r\nimport { mainContainerSizeSettings, spacing1, spacing2 } from \"../utils/dimensions\";\r\nimport { DivProps } from \"../utils/types\";\r\n\r\nexport default function Footer(props : DivProps) {\r\n    return (\r\n        <Container {...props}>\r\n            <TextContainer>{ `Copyright © 2021 Fluxanoia` }</TextContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    ${containerStyling}\r\n    ${mainContainerSizeSettings}\r\n    text-align: center;\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst TextContainer = styled.p`\r\n    margin: ${spacing1} 0;\r\n`;\r\n","export enum Side {\r\n    LEFT = `left`,\r\n    RIGHT = `right`\r\n};\r\nexport const flip = (side : Side) => side === Side.LEFT ? Side.RIGHT : Side.LEFT;\r\n\r\nexport enum LoadingState {\r\n    NONE,\r\n    LOADING,\r\n    LOADED,\r\n    FAILED,\r\n}\r\nexport const isLoaded = (...states : Array<LoadingState>) => {\r\n    return states.every(state => state === LoadingState.LOADED);\r\n}\r\n\r\nexport type AnchorProps = React.ComponentPropsWithoutRef<\"a\">;\r\nexport type DivProps = React.ComponentPropsWithoutRef<\"div\">;\r\nexport type ButtonProps = React.ComponentPropsWithoutRef<\"button\">;\r\nexport type ImgProps = React.ComponentPropsWithoutRef<\"img\">;\r\nexport type H1Props = React.ComponentPropsWithoutRef<\"h1\">;\r\nexport type H2Props = React.ComponentPropsWithoutRef<\"h2\">;\r\nexport type H3Props = React.ComponentPropsWithoutRef<\"h3\">;\r\nexport type H4Props = React.ComponentPropsWithoutRef<\"h4\">;\r\nexport type H5Props = React.ComponentPropsWithoutRef<\"h5\">;\r\nexport type H6Props = React.ComponentPropsWithoutRef<\"h6\">;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { ifLarge, ifSuperSmall, spacing1, spacing3 } from \"../utils/dimensions\";\r\nimport { flip, ImgProps, Side } from \"../utils/types\";\r\n\r\ntype InlineImageProps = {\r\n    side? : Side,\r\n} & ImgProps;\r\nexport default function InlineImage(props : InlineImageProps) {\r\n    const { className, ...otherProps } = props;\r\n    return (\r\n        <ImageContainer className={ className } side={ props.side ?? Side.LEFT }>\r\n            <Image {...otherProps}/>\r\n        </ImageContainer>\r\n    );\r\n}\r\n\r\nconst imageSizing = `\r\n    ${ifSuperSmall} {\r\n        width: 100%;\r\n    }\r\n    width: 200px;\r\n    ${ifLarge} {\r\n        width: 250px;\r\n    }\r\n`;\r\nconst ImageContainer = styled.span<{ side : Side }>`\r\n    float: ${props => props.side};\r\n\r\n    ${imageSizing}\r\n\r\n    margin-bottom: ${spacing1};\r\n    margin-${props => flip(props.side)}: ${spacing3};\r\n`;\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    border-radius: 16px;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { buttonHoverStyling } from \"../utils/globalStyling\";\r\nimport { AnchorProps } from \"../utils/types\";\r\n\r\ntype ButtonProps = {\r\n    to? : string,\r\n    newTab? : boolean;\r\n    forceHover? : boolean;\r\n} & AnchorProps;\r\n\r\nexport default function Button(props : ButtonProps) {\r\n    const { children, to, href, newTab, forceHover, ...otherProps } = props;\r\n    const button = (\r\n        <ButtonContainer forceHover={ forceHover ?? false }>\r\n            { children }\r\n        </ButtonContainer>\r\n    );\r\n    if (to) {\r\n        return <Link style={ linkStyling } to={ to } {...otherProps}>{ button }</Link>;\r\n    } else {\r\n        return (\r\n            <a\r\n                style={ linkStyling }\r\n                target={ newTab ? \"_blank\" : \"_self\" }\r\n                rel=\"noopener noreferrer\"\r\n                href={ href }\r\n                {...otherProps}\r\n            >\r\n                { button }\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\nconst linkStyling = {\r\n    display: `block`,\r\n    textDecoration: `none`,\r\n    cursor: `auto`,\r\n};\r\n\r\nconst ButtonContainer = styled.button<{ forceHover : boolean }>`\r\n    ${props => props.forceHover ? buttonHoverStyling : ``}\r\n`;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/button\";\r\nimport { defaultBgColour } from \"../utils/colours\";\r\nimport { ifLarge, spacing1 } from \"../utils/dimensions\";\r\n\r\nexport const externalPage = (name : string, link : string) => {\r\n    return new Page(() => <></>, {\r\n        name: name,\r\n        link: link,\r\n        onNavbar: true,\r\n        local: false,\r\n    })\r\n}\r\n\r\ntype PageProps = {\r\n    accentColour? : string;\r\n    \r\n    name : string,\r\n    link? : string,\r\n\r\n    local? : boolean,\r\n    independent? : boolean,\r\n    \r\n    onNavbar? : boolean,\r\n    home? : boolean,\r\n    notFound? : boolean,\r\n};\r\nexport default class Page {\r\n    private component : React.ComponentType<any> | undefined;\r\n    private _props : PageProps;\r\n\r\n    public constructor(component : React.ComponentType<any>, props : PageProps) {\r\n        this.component = component;\r\n        this._props = props;\r\n    }\r\n\r\n    public getButton(forceHover : boolean) {\r\n        const links = {\r\n            [this.isLocal() ? `to` : `href`]: this.getLink(),\r\n        }\r\n        return (\r\n            <ButtonContainer key={ `link-${this.getName()}` }>\r\n                <Button {...links} forceHover={ forceHover }>\r\n                    { this.getName() }\r\n                </Button>\r\n            </ButtonContainer>\r\n        );\r\n    }\r\n    public getRoute() {\r\n        const key = `route-${this.getName()}`;\r\n        if (this.isNotFound()) return <Route key={ key } component={ this.component } />;\r\n        return <Route\r\n            key={ key }\r\n            path={ this.getLink() }\r\n            exact\r\n            component={ this.component } />;\r\n    }\r\n    \r\n    public hasLink(link : string) { return link === this.getLink(); }\r\n\r\n    public getComponent() { return this.component; }\r\n    public getColour() { return this._props.accentColour ?? defaultBgColour };\r\n    public getName() { return this._props.name; }\r\n    public getLink() { return this._props.link ?? `/${this.getName().toLowerCase()}`; }\r\n    public isLocal() { return this._props.local ?? true; }\r\n    public isOnNavbar() { return this._props.onNavbar ?? false; }\r\n    public isHome() { return this._props.home ?? false; }\r\n    public isNotFound() { return this._props.notFound ?? false; }\r\n    public isIndependent() { return this._props.independent ?? false; }\r\n};\r\n\r\nconst ButtonContainer = styled.div`\r\n    flex-grow: 1;\r\n    margin: 0 0 ${spacing1} 0;\r\n    ${ifLarge} {\r\n        margin: 0 ${spacing1};\r\n    }\r\n`;\r\n","import Cookies from \"js-cookie\";\r\nimport { parse } from \"query-string\";\r\nimport { useState } from \"react\";\r\n\r\nconst scopes = [\r\n    `playlist-read-private`,\r\n    `playlist-modify-public`,\r\n    `playlist-modify-private`,\r\n    `user-library-read`,\r\n    `user-library-modify`,\r\n    `user-read-email`,\r\n    `user-read-private`,\r\n    `ugc-image-upload`,\r\n];\r\n\r\nexport const getRedirect = (w : Window) => {\r\n    return (typeof w !== \"undefined\") ? w.location.href : `https://fluxanoia.co.uk/fluxify`;\r\n}\r\nexport const getAuthUrl = (w : Window) => {\r\n    return (\r\n        `https://accounts.spotify.com/authorize?response_type=token` +\r\n        `&client_id=${process.env.REACT_APP_SPOTIFY_PUBLIC}` +\r\n        `&scope=${scopes.join('%20')}` +\r\n        `&redirect_uri=${getRedirect(w)}` +\r\n        '&show_dialog=false'\r\n    )\r\n}\r\n\r\nexport const removeHash = (w : Window) => {\r\n    if (typeof w !== \"undefined\") {\r\n        var scroll_v, scroll_h, loc = w.location;\r\n        if (\"pushState\" in w.history)\r\n            w.history.pushState(\"\", document.title, loc.pathname + loc.search);\r\n        else {\r\n            scroll_v = document.body.scrollTop;\r\n            scroll_h = document.body.scrollLeft;\r\n            loc.hash = \"\";\r\n            document.body.scrollTop = scroll_v;\r\n            document.body.scrollLeft = scroll_h;\r\n        }\r\n    }\r\n}\r\n\r\nconst getHashToken = (w : Window) => {\r\n    const cookie = process.env.REACT_APP_SPOTIFY_COOKIE;\r\n    const accessTokenName = process.env.REACT_APP_SPOTIFY_ACCESS_TOKEN_KEY;\r\n    if (typeof w !== \"undefined\" && cookie && accessTokenName) {\r\n        const hash = parse(w.location.hash);\r\n        if (accessTokenName in hash) {\r\n            const data = hash[accessTokenName];\r\n            if (data && !(data instanceof Array)) {\r\n                Cookies.remove(cookie);\r\n                Cookies.set(cookie, data);\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\nexport const getCookieToken = () => {\r\n    const cookie = process.env.REACT_APP_SPOTIFY_COOKIE;\r\n    return cookie ? Cookies.get(cookie) ?? null : null;\r\n};\r\n\r\nexport default function useSpotifyAuth() : [string | null, () => void] {\r\n    const [hashToken, setHashToken] = useState(getHashToken(window));\r\n    const [cookieToken, setCookieToken] = useState(getCookieToken());\r\n\r\n    removeHash(window);\r\n\r\n    const logout = () => {\r\n        const cookie = process.env.REACT_APP_SPOTIFY_COOKIE;\r\n        if (cookie) Cookies.remove(cookie);\r\n        setHashToken(getHashToken(window));\r\n        setCookieToken(getCookieToken());\r\n    }\r\n\r\n    return [hashToken ?? cookieToken, logout];\r\n}\r\n","import { useCallback, useState } from \"react\";\r\nimport { UnexpectedError } from \"spotify-api.js\";\r\n\r\nconst requireLoginStatus = 401;\r\nexport const requiresRelog = (...errors : Array<Error | null>) => {\r\n    const check = (e : Error | null) => {\r\n        if (e && e instanceof UnexpectedError && e.response) {\r\n            return e.response.status === requireLoginStatus;\r\n        }\r\n        return false;\r\n    }\r\n    return errors.some(check);\r\n}\r\nexport const getLoadingError = (componentName : string) => {\r\n    return new UnexpectedError(`Loading inconsistencies (in ${componentName}).`);\r\n} \r\n\r\nexport const getErrorMessage = (e : Error) => {\r\n    if (e instanceof UnexpectedError && e.response) {\r\n        if (e.response.status === requireLoginStatus) {\r\n            return `Your session has expired, please log-in again.`;\r\n        }\r\n    }\r\n    return `${e.name}: ${e.message}.`;\r\n}\r\nexport const discernError = (...errors : Array<Error | null>) : Error => {\r\n    return errors.find(e => e) ?? new UnexpectedError(`Expected an error.`);\r\n}\r\nexport const discernErrorMessage = (...errors : Array<Error | null>) : string => {\r\n    return getErrorMessage(discernError(...errors));\r\n}\r\n\r\nexport function useError() \r\n    : [Error | null, (e : Error) => void, () => void] {\r\n    const [error, setError] = useState<Error | null>(null);\r\n    \r\n    const throwError = useCallback((e : Error) => {\r\n        setError(e);\r\n    }, [setError]);\r\n    const reset = useCallback(() => {\r\n        setError(null);\r\n    }, [setError]);\r\n    \r\n    return [error, throwError, reset]\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing1, spacing2, spacing4 } from \"../utils/dimensions\";\r\nimport { clearButtonStyling } from \"../utils/globalStyling\";\r\nimport { ButtonProps } from \"../utils/types\";\r\n\r\ntype PillProps = {\r\n    radius? : string,\r\n} & ButtonProps;\r\nexport default function Pill(props : PillProps) {\r\n    return <PillContainer {...props} />\r\n}\r\n\r\nconst PillContainer = styled.button<PillProps>`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    ${clearButtonStyling}\r\n    width: 100%;\r\n    padding-top: ${spacing1};\r\n    padding-bottom: ${spacing1};\r\n    padding-left: ${spacing2};\r\n\r\n    font-size: 24px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n\r\n    border-radius: ${props => props.radius ?? spacing4};\r\n\r\n    background: rgba(255, 255, 255, 0);\r\n    &:hover {\r\n        background: rgba(255, 255, 255, 0.2);\r\n    }\r\n    transition: background-color 0.25s;\r\n`;\r\n","import React, { useState } from \"react\"\r\nimport styled from \"styled-components\";\r\nimport { HiOutlineArrowCircleRight } from \"react-icons/hi\";\r\nimport { spacing1, spacing2, spacing4 } from \"../utils/dimensions\";\r\nimport { containerBorderColour } from \"../utils/colours\";\r\nimport Pill from \"./pill\";\r\nimport { DivProps } from \"../utils/types\";\r\n\r\nconst radius = spacing4;\r\n\r\nexport type CollapseProps = {\r\n    title : string,\r\n    value? : string,\r\n} & DivProps;\r\nexport default function Collapse(props : CollapseProps) {\r\n    const [open, setOpen] = useState(false);\r\n    const { title, value, children, ...otherProps } = props;\r\n    return (\r\n        <MainContainer key={ props.title } {...otherProps}>\r\n            <PillContainer>\r\n                <Pill radius={ radius } onClick={ () => setOpen(o => !o) }>\r\n                    <Arrow open={ open } />\r\n                    { title }\r\n                    <ValueContainer>\r\n                        { value }\r\n                    </ValueContainer>\r\n                </Pill>\r\n            </PillContainer>\r\n            <ChildContainer open={ open }>\r\n                { children }\r\n            </ChildContainer>\r\n        </MainContainer>\r\n    );\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n    border: 2px solid ${containerBorderColour};\r\n    border-radius: ${radius};\r\n`;\r\nconst PillContainer = styled.div`\r\n    padding: ${spacing1};\r\n`;\r\nconst Arrow = styled(HiOutlineArrowCircleRight)<{ open : boolean }>`\r\n    flex-shrink: 0;\r\n    margin-right: ${spacing2};\r\n    \r\n    ${props => props.open ? `transform: rotate(90deg);` : ``}\r\n    transition: transform 0.25s;\r\n`;\r\nconst ValueContainer = styled.div`\r\n    flex-grow: 1;\r\n    margin-left: ${spacing4};\r\n    margin-right: ${spacing2};\r\n\r\n    text-align: right;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\ntype ChildContainerProps = {\r\n    open : boolean,\r\n    height? : string,\r\n}\r\nconst ChildContainer = styled.div<ChildContainerProps>`\r\n    ${props => props.open ? `` : `display: none;`}\r\n    overflow: hidden;\r\n    border-radius: ${radius};\r\n`;\r\n","import React from \"react\";\r\nimport { TailSpin } from \"react-loading-icons\";\r\nimport styled from \"styled-components\";\r\nimport { containerBorderColour } from \"../../utils/colours\";\r\nimport { spacing2 } from \"../../utils/dimensions\";\r\nimport { DivProps } from \"../../utils/types\";\r\n\r\nexport default function FluxifyLoading(props : DivProps) {\r\n    return (\r\n        <LoadingContainer {...props}>\r\n            <LoadingIcon stroke={ containerBorderColour }></LoadingIcon>\r\n        </LoadingContainer>\r\n    );\r\n}\r\n\r\nconst LoadingContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\nconst LoadingIcon = styled(TailSpin)`\r\n    margin: ${spacing2} 0;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getAuthUrl } from \"../../hooks/spotifyAuthenticator\";\r\nimport { spacing2 } from \"../../utils/dimensions\";\r\nimport { AnchorProps } from \"../../utils/types\";\r\nimport Button from \"../button\";\r\n\r\ntype FluxifyLoginProps = {\r\n    window : Window,\r\n} & AnchorProps;\r\nexport const FluxifyLogin = (props : FluxifyLoginProps) => {\r\n    const { window, ...otherProps } = props;\r\n    return (\r\n        <Button href={ getAuthUrl(window) } {...otherProps}>\r\n            Log-in with Spotify\r\n        </Button>\r\n    );       \r\n}\r\n\r\ntype FluxifyLoginPageProps = {\r\n    window : Window,\r\n    error? : string,\r\n}\r\nexport default function FluxifyLoginPage({ window } : FluxifyLoginPageProps) {\r\n    return (\r\n        <>\r\n            <TextContainer>\r\n                {\r\n                    `This is a Spotify app created to allow for some more niche playlist\r\n                    operations, like getting the songs you've liked that don't exist on\r\n                    any of your playlists, or merging multiple playlists easily.`\r\n                }\r\n            </TextContainer>\r\n            <FluxifyLogin window={ window }/>\r\n        </>\r\n    ); \r\n}\r\n\r\nconst TextContainer = styled.p`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Image } from \"spotify-api.js\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { BsMusicNoteBeamed } from \"react-icons/bs\";\r\nimport { containerBorderColour, containerColour } from \"../../utils/colours\";\r\nimport { DivProps } from \"../../utils/types\";\r\nimport { spacing4 } from \"../../utils/dimensions\";\r\n\r\ntype SpotifyImageProps = {\r\n    images : Array<Image>,\r\n    liked? : boolean,\r\n} & DivProps;\r\nexport default function SpotifyImage(props : SpotifyImageProps) {\r\n    const { images, liked, ...otherProps } = props;\r\n    const PseudoComponent = liked ? LikedImageIcon : PseudoImageIcon;\r\n    return (\r\n        images.length === 0 ? (\r\n            <PseudoImage {...otherProps}>\r\n                <PseudoComponent color={ containerColour } />\r\n            </PseudoImage>\r\n        ) : (\r\n            <TrueImage src={ images[0].url } alt={ `` } {...otherProps}/>\r\n        )\r\n    );\r\n}\r\n\r\nconst PseudoImage = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${containerBorderColour};\r\n`;\r\nconst LikedImageIcon = styled(FaHeart)`\r\n    width: ${spacing4};\r\n    height: ${spacing4};\r\n`;\r\nconst PseudoImageIcon = styled(BsMusicNoteBeamed)`\r\n    width: ${spacing4};\r\n    height: ${spacing4};\r\n`;\r\nconst TrueImage = styled.img``;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2 } from \"../../utils/dimensions\";\r\nimport { AnchorProps } from \"../../utils/types\";\r\nimport Button from \"../button\";\r\n\r\ntype FluxifyLogoutProps = {\r\n    logout : () => void,\r\n} & AnchorProps;\r\nexport const FluxifyLogout = (props : FluxifyLogoutProps) => {\r\n    const { logout, ...otherProps } = props;\r\n    return (\r\n        <Button onClick={ logout } {...otherProps}>\r\n            { `Log-out` }\r\n        </Button>\r\n    );       \r\n}\r\n\r\ntype FluxifyLogoutPageProps = {\r\n    logout : () => void,\r\n    message? : string,\r\n}\r\nexport default function FluxifyLogoutPage({ logout, message } : FluxifyLogoutPageProps) {\r\n    return (\r\n        <>\r\n            <TextContainer>\r\n                { message }\r\n            </TextContainer>\r\n            <FluxifyLogout logout={ logout }/>\r\n        </>\r\n    ); \r\n}\r\n\r\nconst TextContainer = styled.p`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\n","import React from \"react\";\r\nimport Client from \"spotify-api.js\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2, ifSuperSmall } from \"../../utils/dimensions\";\r\nimport { DivProps } from \"../../utils/types\";\r\nimport SpotifyImage from \"./fluxifyImages\";\r\nimport { FluxifyLogout } from \"./fluxifyLogout\";\r\n\r\ntype FluxifyHeaderProps = {\r\n    client : Client,\r\n    logout : () => void,\r\n} & DivProps;\r\nexport default function FluxifyHeader(props : FluxifyHeaderProps) {\r\n    const { client, logout, ...otherProps } = props;\r\n    return (\r\n        <HeaderContainer {...otherProps}>\r\n            <UserImage images={ client.user.images }/>\r\n            <TitleContainer>\r\n                { `${client.user.name}` }\r\n            </TitleContainer>\r\n            <Logout logout={ logout }/>\r\n        </HeaderContainer>\r\n    );\r\n}\r\n\r\nconst HeaderContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: ${spacing2};\r\n`;\r\nconst UserImage = styled(SpotifyImage)`\r\n    width: 64px;\r\n    height: 64px;\r\n    margin-right: ${spacing2};\r\n    ${ifSuperSmall} {\r\n        display: none;\r\n    }\r\n`;\r\nconst TitleContainer = styled.h1`\r\n    margin: 0px;\r\n`;\r\nconst Logout = styled(FluxifyLogout)`\r\n    width: 140px;\r\n    margin-left: auto;\r\n`;\r\n","import React from \"react\";\r\nimport { AiFillCheckCircle } from \"react-icons/ai\";\r\nimport { Image, SpotifyURI } from \"spotify-api.js\";\r\nimport styled from \"styled-components\";\r\nimport { ifSmall, spacing1, spacing2 } from \"../../utils/dimensions\";\r\nimport { clearButtonStyling } from \"../../utils/globalStyling\";\r\nimport SpotifyImage from \"./fluxifyImages\";\r\n\r\nconst imageId = \"image\";\r\nconst titleId = \"title\";\r\nconst checkId = \"check\";\r\n\r\nexport type Element<T> = {\r\n    id : string,\r\n    name : string,\r\n    images : Array<Image>,\r\n    uri? : SpotifyURI,\r\n    raw? : T,\r\n    data? : { [key : string] : any },\r\n};\r\n\r\nexport default function FluxifyElement<T>(\r\n    element : Element<T>,\r\n    selected : boolean,\r\n    onClick : (id : string, selected : boolean) => void,\r\n) {\r\n    return (\r\n        <ElementContainer \r\n            key={ element.id }\r\n            onClick={ () => onClick(element.id, !selected) }\r\n        >\r\n            <LayerContainer>\r\n                <ImageLayer>\r\n                    <ImageElement\r\n                        id={ imageId }\r\n                        images={ element.images }\r\n                        {...element.data}\r\n                    />\r\n                </ImageLayer>\r\n                <TitleLayer id={ titleId }>\r\n                    <Title>\r\n                        { element.name }\r\n                    </Title>\r\n                </TitleLayer>\r\n                <CheckLayer id={ checkId }>\r\n                    <Check selected={ selected }/>\r\n                </CheckLayer>\r\n            </LayerContainer>\r\n        </ElementContainer>\r\n    );\r\n}\r\n\r\nconst largeSize = `150px`;\r\nconst smallSize = `100px`;\r\nconst sizing = `\r\n    width: ${largeSize};\r\n    height: ${largeSize};\r\n    ${ifSmall} {\r\n        width: ${smallSize};\r\n        height: ${smallSize};\r\n    }\r\n`;\r\nconst layering = `position: absolute;`;\r\n\r\nconst Sized = styled.div`${sizing}`;\r\nconst LayerContainer = styled(Sized)`\r\n    position: relative;\r\n    top: auto;\r\n    bottom: auto;\r\n    left: auto;\r\n    right: auto;\r\n`;\r\nconst Layer = styled(Sized)`\r\n    ${layering}\r\n    top: auto;\r\n    bottom: auto;\r\n    left: auto;\r\n    right: auto;\r\n`;\r\n\r\nconst ElementContainer = styled.button`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n\r\n    ${clearButtonStyling}\r\n\r\n    ${sizing}\r\n    margin-left: ${spacing1};\r\n    margin-right: ${spacing1};\r\n    margin-bottom: ${spacing2};\r\n\r\n    #${imageId} {\r\n        filter: none;\r\n        transition: filter 0.25s;\r\n    }\r\n    &:hover #${imageId} {\r\n        filter: brightness(30%) drop-shadow(0px 0px 4px rgba(0, 0, 0, 0.4));\r\n    }\r\n    #${titleId} {\r\n        opacity: 0;\r\n        transition: opacity 0.25s;\r\n    }\r\n    &:hover #${titleId} {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst ImageLayer = styled(Layer)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;   \r\n`;\r\nconst ImageElement = styled(SpotifyImage)`\r\n    ${sizing}\r\n    ${layering}\r\n`;\r\n\r\nconst TitleLayer = styled(Layer)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;    \r\n    overflow: hidden;\r\n`;\r\nconst Title = styled.div`\r\n    text-align: center;\r\n    max-height: ${largeSize};\r\n    ${ifSmall} {\r\n        max-height: ${smallSize};\r\n    }\r\n`;\r\n\r\nconst CheckLayer = styled(Layer)`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\nconst Check = styled(AiFillCheckCircle)<{ selected : boolean }>`\r\n    margin-top: ${spacing1};\r\n    margin-right: ${spacing1};\r\n\r\n    ${props => props.selected ? `\r\n        opacity: 1;\r\n        transform: scale(1);\r\n    ` : `\r\n        opacity: 0;\r\n        transform: scale(1.5) rotate(180deg);\r\n    `}\r\n    transition: opacity 0.1s, transform 0.25s;\r\n    \r\n    filter: drop-shadow(0px 0px 6px #000000);\r\n`;\r\n","import { UnexpectedError } from \"spotify-api.js\";\r\n\r\nexport const quantityText = (amount : number, capacity : number, noun : string) => {\r\n    switch (amount) {\r\n        case 0:        return `No ${noun}s`;\r\n        case 1:        return `1 ${noun}`;\r\n        case capacity: return `All ${noun}s`;\r\n        default:       return `${amount} ${noun}s`;\r\n    }\r\n}\r\n\r\nexport const randomString = (length : number) => {\r\n    let result = [];\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n    const len = chars.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result.push(chars.charAt(Math.floor(Math.random() * len)));\r\n    }\r\n    return result.join('');\r\n}\r\n\r\nexport const hexToRgb = (hex : string) => {\r\n    if (hex.length === 7){\r\n        hex = hex.slice(1);\r\n    }\r\n    if (hex.length !== 6) { \r\n        throw new UnexpectedError(`Cannot convert a hex code that isn't 6 or 7 digits.`);\r\n    }\r\n    let rgb = hex.match(/.{1,2}/g);\r\n    if (!rgb) throw new UnexpectedError(\"Couldn't match hex code.\");\r\n    return rgb.map(x => parseInt(x, 16));\r\n}\r\n\r\nexport const rgbToHex = (r : number, g : number, b : number) => {\r\n    const inRange = (x : number) => x <= 255 && x >= 0;\r\n    if (!(inRange(r) && inRange(g) && inRange(b))) {\r\n        throw new UnexpectedError(`Out of range RGB values.`);\r\n    }\r\n    return `#${\r\n        [r, g, b].map(x => x.toString(16))\r\n                 .map(x => x.length < 2 ? `0${x}` : x)\r\n                 .join(``)\r\n    }`;\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { useCallback, useMemo, useState } from \"react\";\r\nimport { Playlist } from \"spotify-api.js\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/button\";\r\nimport Collapse from \"../components/collapse\";\r\nimport FluxifyElement, { Element } from \"../components/fluxify/fluxifyElement\";\r\nimport { spacing2, ifSuperSmall, spacing1 } from \"../utils/dimensions\";\r\nimport { quantityText } from \"../utils/misc\";\r\n\r\nexport const LikedSongsElement : Element<Playlist> = {\r\n    id: `likedSongs`,\r\n    name: `Liked Songs`,\r\n    images: [],\r\n    data : {\r\n        \"liked\": true,\r\n    },\r\n};\r\ntype PlaylistSelectorOptions = {\r\n    title? : string,\r\n    includeLiked? : boolean,\r\n}\r\nexport const usePlaylistSelector = (\r\n    key : string,\r\n    playlists : Array<Playlist> | null,\r\n    options? : PlaylistSelectorOptions,\r\n) : [JSX.Element, Array<Element<Playlist>>] => {\r\n    const elements = useMemo(() => {\r\n        let elements : Array<Element<Playlist>> = []\r\n        if (options?.includeLiked) elements.push(LikedSongsElement);\r\n        elements.push(...(playlists ?? []).map(p => {\r\n            return {\r\n                id: p.id,\r\n                name: p.name,\r\n                images: p.images,\r\n                uri: p.uri,\r\n                raw: p,\r\n            };\r\n        }));\r\n        return elements;\r\n    }, [playlists, options]);\r\n\r\n    const selectorOptions = {\r\n        title: options?.title,\r\n    };\r\n    return useElementSelector(key, `playlist`, elements, selectorOptions);\r\n}\r\n\r\ntype ElementSelectorOptions = {\r\n    title? : string,\r\n}\r\nexport const useElementSelector = <T,>(\r\n    key : string,\r\n    elementName : string,\r\n    elements : Array<Element<T>> | null,\r\n    options? : ElementSelectorOptions,\r\n) : [JSX.Element, Array<Element<T>>] => {\r\n    const [selected, setSelected] = useState<Array<string>>([]);\r\n\r\n    const isSelected = useCallback((checkId : string) => {\r\n        return selected.some((id : string) => checkId === id);\r\n    }, [selected]);\r\n\r\n    const components = useMemo(() => {\r\n        const updateSelected = (newId : string, isSelected : boolean) => {\r\n            if (isSelected) {\r\n                setSelected(selected => selected.concat([newId]));\r\n            } else {\r\n                setSelected(selected => selected.filter((id : string) => id !== newId));\r\n            }\r\n        };\r\n        return (elements ?? []).map((e : Element<T>) => (\r\n            FluxifyElement(e, isSelected(e.id), updateSelected)\r\n        ));\r\n    }, [elements, isSelected, setSelected])\r\n    \r\n    const component = useMemo(() => {\r\n        if (!elements) return <Fragment/>;\r\n        const selectAll = () => setSelected((elements ?? []).map(e => e.id));\r\n        const selectNone = () => setSelected([]);\r\n        return (\r\n            <CollapseContainer\r\n                key={ key }\r\n                title={ (options ?? {}).title ?? `Select ${elementName}s` }\r\n                value={ `${quantityText(selected.length, elements.length, elementName)} selected` }\r\n            >\r\n                <SelectInfoContainer>\r\n                    <SelectTextContainer>\r\n                        { `Listing ${\r\n                            quantityText(elements.length, -1, `playlist`)\r\n                        }` }\r\n                    </SelectTextContainer>\r\n                    <SelectButton key=\"selectAll\" onClick={ selectAll }>{ `All` }</SelectButton>\r\n                    <SelectButton key=\"selectNone\" onClick={ selectNone }>{ `None` }</SelectButton>\r\n                </SelectInfoContainer>\r\n                <ElementsContainer>\r\n                    { components }\r\n                </ElementsContainer>\r\n            </CollapseContainer>\r\n        );\r\n    }, [key, options, components, selected, elements, elementName])\r\n\r\n    return [component, (elements ?? []).filter(e => isSelected(e.id))];\r\n}\r\n\r\nconst CollapseContainer = styled(Collapse)``;\r\n\r\nconst ElementsContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-bottom: ${spacing1};\r\n`;\r\nconst SelectInfoContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    margin: ${spacing2} 0;\r\n    padding: 0 ${spacing2};\r\n\r\n    ${ifSuperSmall} {\r\n        flex-direction: column;\r\n    }\r\n`;\r\nconst SelectTextContainer = styled.div`\r\n    margin-left: ${spacing2};\r\n    margin-right: auto;\r\n    ${ifSuperSmall} {\r\n        margin: ${spacing1} ${spacing2};\r\n    }\r\n`;\r\nconst SelectButton = styled(Button)`\r\n    width: 100px;\r\n    margin-right: ${spacing2};\r\n    ${ifSuperSmall} {\r\n        width: 100%;\r\n        margin: ${spacing1} ${spacing2};\r\n    }\r\n`;\r\n\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport { ImCross, ImCheckmark } from \"react-icons/im\";\r\nimport styled from \"styled-components\";\r\nimport Collapse from \"../components/collapse\";\r\nimport Pill from \"../components/pill\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\n\r\ntype OptionProps<T> = {\r\n    key : string,\r\n    name : string,\r\n    value : T,\r\n    onClick : () => void,\r\n}\r\n\r\nexport type Option<T> = {\r\n    key : string,\r\n    name : string,\r\n    def : T,\r\n    getNextValue : (value : T) => T,\r\n    component : React.FunctionComponent<OptionProps<T>>,\r\n}\r\nexport const BooleanOptionNextValue = (v : boolean) => !v;\r\nexport const BooleanOptionComponent = (props : OptionProps<boolean>) => {\r\n    const { name, value, ...otherProps } = props;\r\n    return (\r\n        <Pill {...otherProps}>\r\n            { value ? <Check /> : <Cross /> }\r\n            { name }\r\n        </Pill>\r\n    );\r\n};\r\nconst Check = styled(ImCheckmark)`\r\n    margin-right: ${spacing2};\r\n`;\r\nconst Cross = styled(ImCross)`\r\n    margin-right: ${spacing2};\r\n`;\r\n\r\nconst getDefaultData = (optionInfo : Array<Option<any>>) => {\r\n    let data : { [key : string]: any } = {};\r\n    for (const o of optionInfo) data[o.key] = o.def;\r\n    return data;\r\n}\r\n\r\ntype OptionSelectorOptions = {\r\n    title? : string,\r\n}\r\nexport default function useOptionSelector(\r\n    key : string,\r\n    optionInfo : Array<Option<any>>,\r\n    options? : OptionSelectorOptions,\r\n) : [JSX.Element, { [key : string] : any }] {\r\n    const [data, setData] = useState<{ [key : string]: any }>(getDefaultData(optionInfo));\r\n\r\n    const updateData = useCallback((key : string, value : any) => {\r\n        const otherData = data;\r\n        delete otherData[key];\r\n        setData({\r\n            [key]: value,\r\n            ...otherData,\r\n        });\r\n    }, [data, setData])\r\n\r\n    const component = useMemo(() => (\r\n        <CollapseContainer key={ key } title={ (options ?? {}).title ?? `Choose Options` }>\r\n            <OptionsContainer>\r\n                { optionInfo.map(o => {\r\n                    const key = o.key;\r\n                    const Option = o.component;\r\n                    return (\r\n                        <Option\r\n                            key={ key }\r\n                            name={ o.name }\r\n                            value={ data[key] }\r\n                            onClick={ () => updateData(key, o.getNextValue(data[key])) }\r\n                        />\r\n                    );\r\n                }) }\r\n            </OptionsContainer>\r\n        </CollapseContainer>\r\n    ), [key, optionInfo, options, data, updateData]);\r\n    \r\n    return [component, data];\r\n}\r\n\r\nconst CollapseContainer = styled(Collapse)``;\r\nconst OptionsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: ${spacing2};\r\n`;\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { useState } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport { hexToRgb, rgbToHex } from \"../utils/misc\";\r\nimport { containerBorderColour } from \"../utils/colours\";\r\n\r\nconst sliderRailStyle : CSSProperties = { \r\n    backgroundColor: '#888888',\r\n    height: 8,\r\n};\r\nexport default function useColourPicker(\r\n    startingColour? : string,\r\n) : [JSX.Element, string] {\r\n    const [startR, startG, startB] = hexToRgb(startingColour ?? `#000000`);\r\n    const [r, setR] = useState(startR); \r\n    const [g, setG] = useState(startG); \r\n    const [b, setB] = useState(startB); \r\n\r\n    const renderSlider = (\r\n        key : string,\r\n        v : number,\r\n        log : (v : number) => void,\r\n        highlight : string,\r\n    ) => (\r\n        <Slider\r\n            key={ key }\r\n            min={ 0 }\r\n            max={ 255 }\r\n            step={ 1 }\r\n            defaultValue={ v }\r\n            onChange={ log }\r\n            trackStyle={ {\r\n                backgroundColor: highlight,\r\n                height: 8,\r\n            } }\r\n            handleStyle={ {\r\n                borderColor: highlight,\r\n                height: 16,\r\n                width: 16,\r\n                marginTop: -4,\r\n            } }\r\n            railStyle={ sliderRailStyle }\r\n        />\r\n    );\r\n    const component = (\r\n        <Container>\r\n            <ColourBox style={ { backgroundColor: rgbToHex(r, g, b) } } />\r\n            <SliderBox>\r\n                { renderSlider('r', r, setR, `#d83a3f`) }\r\n                { renderSlider('g', g, setG, `#3ad84a`) }\r\n                { renderSlider('b', b, setB, `#3a54d8`) }\r\n            </SliderBox>\r\n        </Container>\r\n    );\r\n\r\n    return [component, rgbToHex(r, g, b)];\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n`;\r\nconst ColourBox = styled.div`\r\n    flex: 1 1 100px;\r\n\r\n    border-top-left-radius: ${spacing2};\r\n    border-bottom-left-radius: ${spacing2};\r\n    border: 2px solid ${containerBorderColour};\r\n    border-right: 0px solid;\r\n`;\r\nconst SliderBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n\r\n    padding: 0 ${spacing2};\r\n\r\n    flex: 1 1 900px;\r\n    height: 180px;\r\n\r\n    border-top-right-radius: ${spacing2};\r\n    border-bottom-right-radius: ${spacing2};\r\n    border: 2px solid ${containerBorderColour};\r\n    border-left: 0px solid;\r\n`;\r\n","import React, { useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Collapse from \"../components/collapse\";\r\nimport useColourPicker from \"../components/colorPicker\";\r\nimport { spacing1, spacing2 } from \"../utils/dimensions\";\r\nimport { BooleanOptionComponent } from \"./optionsSelector\";\r\n\r\nenum ImageType {\r\n    IMAGE,\r\n    COLOUR,\r\n    NONE,\r\n};\r\n\r\ntype PlaylistImageSelectorOptions = {\r\n    title? : string,\r\n};\r\nexport default function usePlaylistImageSelector(\r\n    key : string,\r\n    options? : PlaylistImageSelectorOptions,\r\n) : [JSX.Element, string | null | undefined] {\r\n    const [imageType, setImageType] = useState(ImageType.IMAGE);\r\n    const [colourComponent, colour] = useColourPicker(`#1DB954`);\r\n\r\n    const component = useMemo(() => {\r\n        return (\r\n            <CollapseContainer key={ key } title={ (options ?? {}).title ?? `Choose Image` }>\r\n                <InnerContainer>\r\n                    <BooleanOptionComponent\r\n                        key={ `image` }\r\n                        name={ `Use default image` }\r\n                        value={ imageType === ImageType.IMAGE }\r\n                        onClick={ () => setImageType(ImageType.IMAGE) }\r\n                    />\r\n                    <BooleanOptionComponent\r\n                        key={ `colour` }\r\n                        name={ `Use plain colour` }\r\n                        value={ imageType === ImageType.COLOUR }\r\n                        onClick={ () => setImageType(ImageType.COLOUR) }\r\n                    />\r\n                    { imageType === ImageType.COLOUR ? (\r\n                        <ColourPickerContainer>\r\n                            { colourComponent }\r\n                        </ColourPickerContainer>\r\n                    ) : `` }\r\n                    <BooleanOptionComponent\r\n                        key={ `none` }\r\n                        name={ `No image` }\r\n                        value={ imageType === ImageType.NONE }\r\n                        onClick={ () => setImageType(ImageType.NONE) }\r\n                    />\r\n                </InnerContainer>\r\n            </CollapseContainer>\r\n        );\r\n    }, [key, options, imageType, setImageType, colourComponent])\r\n\r\n    const resolve = (type : ImageType) => {\r\n        switch (type) {\r\n            case ImageType.COLOUR: return colour;\r\n            case ImageType.IMAGE: return null;\r\n        }\r\n        return undefined;\r\n    }\r\n    return [component, resolve(imageType)];\r\n}\r\n\r\nconst CollapseContainer = styled(Collapse)``;\r\nconst InnerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: ${spacing2};\r\n`;\r\nconst ColourPickerContainer = styled.div`\r\n    padding-top: ${spacing2};\r\n    padding-bottom: ${spacing1};\r\n`;","import { createCanvas } from \"canvas\";\r\nimport Client, { CreatePlaylist, Paging, PagingOptions, Playlist, PlaylistTrackType, SpotifyURI } from \"spotify-api.js\";\r\nimport { Element } from \"../components/fluxify/fluxifyElement\";\r\nimport { randomString } from \"./misc\";\r\n\r\nexport const spotifyPlaylistTitleLimit = 100;\r\nexport const spotifyPlaylistDescLimit = 300;\r\n\r\nexport const spotifyPlaylistLimit = 50;\r\nexport const spotifyTrackLimit = 50;\r\n\r\nexport const spotifyTrackAddLimit = 50;\r\n\r\nexport const createColourUri = (\r\n    colour : string\r\n) => {\r\n    const size = 128;\r\n    const canvas = createCanvas(size, size);\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = colour;\r\n    ctx.rect(0, 0, size, size);\r\n    ctx.fill();\r\n    return canvas.toDataURL(`image/jpeg`).replace(`data:image/jpeg;base64,`, ``);\r\n}\r\n\r\nexport const createPlaylist = async (\r\n    client : Client,\r\n    throwError : (error : Error) => void,\r\n    name : string,\r\n    desc : string,\r\n    image? : string | null,\r\n    options? : {\r\n        public?: boolean,\r\n        collab?: boolean,\r\n    },\r\n) => {\r\n    const playlistOptions : CreatePlaylist = {\r\n        name: `Fluxify-${name}-${randomString(10)}`.slice(0, spotifyPlaylistTitleLimit),\r\n        description: `Playlist created by Fluxify, ${desc}`.slice(0, spotifyPlaylistDescLimit),\r\n        public: options ? options.public : false,\r\n        collaborative: options ? options.collab : false,\r\n    };\r\n    const playlist = await client.playlists.create(playlistOptions).catch(throwError);\r\n    if (!playlist) return null;\r\n    if (image || image === null) {\r\n        const imageUri = image ? (\r\n            createColourUri(image)\r\n        ) : (\r\n            await fetch(`res/fluxify.uri`).then(r => r.text()).catch(throwError)\r\n        );\r\n        if (!imageUri) return null;\r\n        if (!(await playlist.uploadImage(imageUri).catch(throwError))) return null;\r\n    }\r\n    return playlist;\r\n}\r\n\r\nexport const load = async <T,>(\r\n    loader : (options?: PagingOptions) => Promise<Paging<T>>,\r\n    throwError : (error : Error) => void,\r\n    hitLimit : number,\r\n) => {\r\n    let items = [];\r\n    let [offset, total] = [0, 0];\r\n    do {\r\n        let data = await loader({\r\n            limit: hitLimit,\r\n            offset: offset,\r\n        }).catch(throwError);\r\n        if (!data) return null;\r\n        items.push(...data.items);\r\n        offset += hitLimit;\r\n        total = data.total;\r\n    } while (offset < total);\r\n    return {\r\n        items: items,\r\n        total: total,\r\n    }\r\n}\r\n\r\nexport const loadPlaylists = async (\r\n    client : Client,\r\n    throwError : (error : Error) => void,\r\n) => load((o?: PagingOptions) => client.user.getPlaylists(o), throwError, spotifyPlaylistLimit);\r\n\r\nexport const loadTracks = async (\r\n    client : Client,\r\n    playlist : Playlist | Element<Playlist>,\r\n    throwError : (error : Error) => void,\r\n) => {\r\n    const args = (p : Playlist) : [\r\n        (options?: PagingOptions) => Promise<Paging<PlaylistTrackType>>,\r\n        (error : Error) => void,\r\n        number,\r\n    ] => [\r\n        (o?: PagingOptions) => p.getTracks(o),\r\n        throwError,\r\n        spotifyTrackLimit,\r\n    ];\r\n    if (playlist instanceof Playlist) {\r\n        return load(...args(playlist));\r\n    } else if (playlist.raw) {\r\n        return load(...args(playlist.raw));\r\n    } else {\r\n        return loadLiked(client, throwError);\r\n    }\r\n};\r\n\r\nexport const loadLiked = async (\r\n    client : Client,\r\n    throwError : (error : Error) => void,\r\n) => load((o?: PagingOptions) => client.user.getTracks(o), throwError, spotifyTrackLimit);\r\n\r\nexport const loadAllTracks = async (\r\n    client : Client,\r\n    playlists : Array<Playlist | Element<Playlist>>,\r\n    throwError : (error : Error) => void,\r\n) => {\r\n    let tracks = [];\r\n    for (const playlist of playlists) {\r\n        const data = await loadTracks(client, playlist, throwError);\r\n        if (!data) return null;\r\n        tracks.push(...data.items);\r\n    }\r\n    return tracks;\r\n}\r\n\r\nexport const addToPlaylist = async (\r\n    playlist : Playlist,\r\n    uris : Array<SpotifyURI>,\r\n    throwError : (error : Error) => void,\r\n) => {\r\n    let offset = 0;\r\n    do {\r\n        const result = await playlist.add(uris.slice(offset, offset + spotifyTrackAddLimit))\r\n                                     .catch(throwError);\r\n        if (!result) return false;\r\n        offset += spotifyTrackAddLimit;\r\n    } while (offset < uris.length);\r\n    return true;\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport Client, { Playlist } from \"spotify-api.js\";\r\nimport { loadPlaylists } from \"../utils/spotify\";\r\nimport { isLoaded, LoadingState } from \"../utils/types\";\r\nimport { useError } from \"./spotifyError\";\r\n\r\nexport default function useSpotifyPlaylists(\r\n    token : string | null,\r\n    client : Client | null,\r\n) : [Array<Playlist> | null, boolean, Error | null, () => void] {\r\n    const [loadState, setLoadState] = useState(LoadingState.NONE);\r\n    const [error, throwError, resetError] = useError();\r\n    \r\n    const [playlists, setPlaylists] = useState<Array<Playlist> | null>(null);\r\n\r\n    const reset = useCallback(() => {\r\n        resetError();\r\n        setPlaylists(null);\r\n        setLoadState(LoadingState.NONE);\r\n    }, [resetError, setPlaylists, setLoadState]);\r\n\r\n    useEffect(() => {\r\n        if (token && client && loadState === LoadingState.NONE) {\r\n            setLoadState(LoadingState.LOADING);\r\n            (async () => {\r\n                const data = await loadPlaylists(client, throwError);\r\n                if (data) {\r\n                    setPlaylists(data.items);\r\n                    setLoadState(LoadingState.LOADED);\r\n                }\r\n            })();\r\n        }\r\n    }, [\r\n        token,\r\n        client,\r\n        loadState,\r\n        setLoadState,\r\n        throwError,\r\n        setPlaylists,\r\n    ]);\r\n\r\n    return [playlists, isLoaded(loadState), error, reset];\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Client from \"spotify-api.js\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2 } from \"../../../utils/dimensions\";\r\nimport Button from \"../../button\";\r\n\r\nexport type FluxifyOpProps = {\r\n    token : string,\r\n    client : Client,\r\n\r\n    throwGlobalError : (error : Error) => void,\r\n    \r\n    disable : () => void,\r\n    enable : () => void,\r\n    finish : () => void,\r\n};\r\nexport default class FluxifyOp {\r\n    private name : string;\r\n    private desc : string;\r\n    private component : React.FunctionComponent<FluxifyOpProps>;\r\n\r\n    public constructor(\r\n        name : string,\r\n        desc : string,\r\n        component : React.FunctionComponent<FluxifyOpProps>\r\n    ) {\r\n        this.name = name;\r\n        this.desc = desc;\r\n        this.component = component;\r\n    }\r\n\r\n    public getName() {\r\n        return this.name;\r\n    }\r\n    public getDescription() {\r\n        return this.desc;\r\n    }\r\n    public getComponent() {\r\n        return this.component;\r\n    }\r\n};\r\n\r\nexport const useErrorAggregator = (\r\n    throwError : (e : Error) => void,\r\n    errors : Array<Error | null>\r\n) => {\r\n    const [hasError, setHasError] = useState(false);\r\n    useEffect(() => {\r\n        for (const e of errors) {\r\n            if (e) {\r\n                setHasError(true);\r\n                throwError(e);\r\n                return;\r\n            }\r\n        }\r\n        setHasError(false);\r\n    }, [throwError, errors, setHasError]);\r\n    return hasError;\r\n};\r\n\r\nconst wrapRun = (\r\n    disable : () => void,\r\n    finish : () => void,\r\n    run : () => Promise<boolean>,\r\n) => {\r\n    return () => {\r\n        disable();\r\n        run().then(b => {\r\n            if (b) finish();\r\n        });\r\n    }\r\n};\r\nexport const renderOp = (\r\n    components : Array<JSX.Element>,\r\n    displayRun : boolean,\r\n    run : () => Promise<boolean>,\r\n    disable : () => void,\r\n    finish : () => void,\r\n) => {\r\n    const lastIndex = components.length - 1;\r\n    return (\r\n        <>\r\n            {\r\n                components.map((v, i) => (\r\n                    <OpWrapper key={ v.key } removeMargin={ i === lastIndex }>\r\n                        { v }\r\n                    </OpWrapper>\r\n                ))\r\n            }\r\n            { \r\n                displayRun ? (\r\n                    <RunButton onClick={ wrapRun(disable, finish, run) }>\r\n                        { `Run` }\r\n                    </RunButton>\r\n                ) : ``\r\n            }\r\n        </>\r\n    );\r\n};\r\nconst OpWrapper = styled.div<{ removeMargin? : boolean }>`\r\n    ${props => props.removeMargin ? `` : `margin-bottom: ${spacing2};`}\r\n`;\r\nconst RunButton = styled(Button)`\r\n    margin-top: ${spacing2};\r\n`;\r\n","import { shuffle } from \"lodash\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { usePlaylistSelector } from \"../../../hooks/elementSelector\";\r\nimport useOptionSelector, { Option, BooleanOptionComponent, BooleanOptionNextValue } from \"../../../hooks/optionsSelector\";\r\nimport usePlaylistImageSelector from \"../../../hooks/playlistImageSelector\";\r\nimport { getLoadingError, useError } from \"../../../hooks/spotifyError\";\r\nimport useSpotifyPlaylists from \"../../../hooks/spotifyPlaylists\";\r\nimport { createPlaylist, loadAllTracks, loadLiked, addToPlaylist } from \"../../../utils/spotify\";\r\nimport FluxifyLoading from \"../fluxifyLoading\";\r\nimport FluxifyOp, { FluxifyOpProps, renderOp, useErrorAggregator } from \"./fluxifyOp\";\r\n\r\nconst shuffleOption : Option<boolean> = {\r\n    key: `shuffle`,\r\n    name: `Shuffle`,\r\n    def: false,\r\n    getNextValue: BooleanOptionNextValue,\r\n    component: BooleanOptionComponent,\r\n};\r\nconst optionInfo : Array<Option<any>> = [shuffleOption];\r\n\r\nconst opName = `ExclusivelyLiked`;\r\nconst opDesc = `Find exclusively liked songs`;\r\nexport const exclusiveLikedOp = new FluxifyOp(opName, opDesc, FluxifyExclusiveLiked);\r\nexport default function FluxifyExclusiveLiked({\r\n    token,\r\n    client,\r\n    throwGlobalError,\r\n    disable,\r\n    finish,\r\n} : FluxifyOpProps) {\r\n    const [playlists, loaded, playlistError] = useSpotifyPlaylists(token, client);\r\n    const [selectorComponent, selected] = usePlaylistSelector('playlists', playlists);\r\n    const [optionsComponent, options] = useOptionSelector('options', optionInfo);\r\n    const [imageComponent, imageColour] = usePlaylistImageSelector('image');\r\n    const [localError, throwError] = useError();\r\n    const hasError = useErrorAggregator(throwGlobalError, [localError, playlistError])\r\n\r\n    const run = async () => {\r\n        const newPlaylist = await createPlaylist(client, throwError, opName,\r\n            `gets the exclusive liked songs w.r.t.: ${selected.map(p => p.name).join(`, `)}`,\r\n            imageColour\r\n        );\r\n        if (!newPlaylist) return false;\r\n        const likedTracks = await loadLiked(client, throwError);\r\n        if (!likedTracks) return false;\r\n        const playlistTracks = await loadAllTracks(client, selected, throwError);\r\n        if (!playlistTracks) return false;\r\n        let exclusives = [];\r\n        const trackUris = new Set(playlistTracks.map(t => t.track.uri));\r\n        const likedUris = new Set(likedTracks.items.map(t => t.track.uri));\r\n        for (const liked of likedUris) {\r\n            if (!trackUris.has(liked)) exclusives.push(liked);\r\n        }\r\n        if (options[shuffleOption.key]) exclusives = shuffle(exclusives);\r\n        return await addToPlaylist(newPlaylist, exclusives, throwError);\r\n    };\r\n\r\n    if (hasError) {\r\n        return <FluxifyLoading />;\r\n    } else if (loaded) {\r\n        if (!playlists) {\r\n            throwError(getLoadingError(opName));\r\n            return <FluxifyLoading />;\r\n        }\r\n        const components = [\r\n            <TextContainer key={ `description `}>\r\n                { `\r\n                    This operation will create a new playlist consisting of the songs in\r\n                    your Liked that aren't in any of the selected playlists.\r\n                ` }\r\n            </TextContainer>,\r\n            selectorComponent,\r\n            optionsComponent,\r\n            imageComponent,\r\n        ]\r\n        return renderOp(components, selected.length > 0, run, disable, finish);\r\n    } else {\r\n        return <FluxifyLoading />;\r\n    }\r\n}\r\n\r\nconst TextContainer = styled.p``;\r\n","import { shuffle, uniqBy } from \"lodash\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { usePlaylistSelector } from \"../../../hooks/elementSelector\";\r\nimport useOptionSelector, { BooleanOptionComponent, BooleanOptionNextValue, Option } from \"../../../hooks/optionsSelector\";\r\nimport usePlaylistImageSelector from \"../../../hooks/playlistImageSelector\";\r\nimport { getLoadingError, useError } from \"../../../hooks/spotifyError\";\r\nimport useSpotifyPlaylists from \"../../../hooks/spotifyPlaylists\";\r\nimport { addToPlaylist, createPlaylist, loadAllTracks } from \"../../../utils/spotify\";\r\nimport FluxifyLoading from \"../fluxifyLoading\";\r\nimport FluxifyOp, { FluxifyOpProps, renderOp, useErrorAggregator } from \"./fluxifyOp\";\r\n\r\nconst distinctOption : Option<boolean> = {\r\n    key: `distinct`,\r\n    name: `Remove duplicates`,\r\n    def: true,\r\n    getNextValue: BooleanOptionNextValue,\r\n    component: BooleanOptionComponent,\r\n};\r\nconst shuffleOption : Option<boolean> = {\r\n    key: `shuffle`,\r\n    name: `Shuffle`,\r\n    def: false,\r\n    getNextValue: BooleanOptionNextValue,\r\n    component: BooleanOptionComponent,\r\n};\r\nconst optionInfo : Array<Option<any>> = [distinctOption, shuffleOption];\r\n\r\nconst opName = `Merge`;\r\nconst opDesc = `Merge playlists`;\r\nexport const mergeOp = new FluxifyOp(opName, opDesc, FluxifyMerge);\r\nexport default function FluxifyMerge({\r\n    token,\r\n    client,\r\n    throwGlobalError,\r\n    disable,\r\n    finish,\r\n} : FluxifyOpProps) {\r\n    const [playlists, loaded, playlistError] = useSpotifyPlaylists(token, client);\r\n    const [selectorComponent, selected] = usePlaylistSelector('playlists', playlists, {\r\n        includeLiked: true,\r\n    });\r\n    const [optionsComponent, options] = useOptionSelector('options', optionInfo);\r\n    const [imageComponent, imageColour] = usePlaylistImageSelector('image');\r\n    const [localError, throwError] = useError();\r\n    const hasError = useErrorAggregator(throwGlobalError, [localError, playlistError])\r\n\r\n    const run = async () => {\r\n        const newPlaylist = await createPlaylist(client, throwError, opName,\r\n            `merges: ${selected.map(p => p.name).join(`, `)}`,\r\n            imageColour\r\n        );\r\n        if (!newPlaylist) return false;\r\n        const tracks = await loadAllTracks(client, selected, throwError);\r\n        if (!tracks) return false;\r\n        let trackUris = tracks.map(t => t.track.uri);\r\n        if (options[distinctOption.key]) trackUris = uniqBy(trackUris, t => t);\r\n        if (options[shuffleOption.key]) trackUris = shuffle(trackUris);\r\n        return await addToPlaylist(newPlaylist, trackUris, throwError);\r\n    };\r\n\r\n    if (hasError) {\r\n        return <FluxifyLoading />;\r\n    } else if (loaded) {\r\n        if (!playlists) {\r\n            throwError(getLoadingError(opName));\r\n            return <FluxifyLoading />;\r\n        }\r\n        const components = [\r\n            <TextContainer key={ `description` }>\r\n                { `\r\n                    This operation will create a new playlist which contains all the\r\n                    selected playlists.\r\n                ` }\r\n            </TextContainer>,\r\n            selectorComponent,\r\n            optionsComponent,\r\n            imageComponent,\r\n        ]\r\n        return renderOp(components, selected.length > 0, run, disable, finish);\r\n    } else {\r\n        return <FluxifyLoading />;\r\n    }\r\n}\r\n\r\nconst TextContainer = styled.p``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getLoadingError, useError } from \"../../../hooks/spotifyError\";\r\nimport useSpotifyPlaylists from \"../../../hooks/spotifyPlaylists\";\r\nimport FluxifyLoading from \"../fluxifyLoading\";\r\nimport FluxifyOp, { FluxifyOpProps, renderOp, useErrorAggregator } from \"./fluxifyOp\";\r\n\r\nconst opName = `UnfollowFluxify`;\r\nconst opDesc = `Unfollow Fluxify playlists`;\r\nexport const unfollowFluxifyOp = new FluxifyOp(opName, opDesc, FluxifyUnfollowFluxify);\r\nexport default function FluxifyUnfollowFluxify({\r\n    token,\r\n    client,\r\n    throwGlobalError,\r\n    disable,\r\n    finish,\r\n} : FluxifyOpProps) {\r\n    const [playlists, loaded, playlistError] = useSpotifyPlaylists(token, client);\r\n    const [localError, throwError] = useError();\r\n    const hasError = useErrorAggregator(throwGlobalError, [localError, playlistError]);\r\n    \r\n    const run = async () => {\r\n        if (!playlists) return false;\r\n        for (const p of playlists.filter(p => p.name.startsWith(`Fluxify-`))) {\r\n            if (!(await p.unfollow().catch(throwError))) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    if (hasError) {\r\n        return <FluxifyLoading />;\r\n    } else if (loaded) {\r\n        if (!playlists) {\r\n            throwError(getLoadingError(opName));\r\n            return <FluxifyLoading />;\r\n        }\r\n        const components = [\r\n            <TextContainer key={ `description` }>\r\n                { `\r\n                    This operation will unfollow any of your playlists that start with\r\n                    'Fluxify-'.\r\n                ` }\r\n            </TextContainer>,\r\n        ]\r\n        return renderOp(components, true, run, disable, finish);\r\n    } else {\r\n        return <FluxifyLoading />;\r\n    }\r\n}\r\n\r\nconst TextContainer = styled.p``;\r\n","import React from \"react\";\r\nimport { Artist, SpotifyURI, Track } from \"spotify-api.js\";\r\nimport styled from \"styled-components\";\r\nimport { usePlaylistSelector } from \"../../../hooks/elementSelector\";\r\nimport usePlaylistImageSelector from \"../../../hooks/playlistImageSelector\";\r\nimport { getLoadingError, useError } from \"../../../hooks/spotifyError\";\r\nimport useSpotifyPlaylists from \"../../../hooks/spotifyPlaylists\";\r\nimport { createPlaylist, loadAllTracks, addToPlaylist } from \"../../../utils/spotify\";\r\nimport FluxifyLoading from \"../fluxifyLoading\";\r\nimport FluxifyOp, { FluxifyOpProps, renderOp, useErrorAggregator } from \"./fluxifyOp\";\r\n\r\nconst opName = `AutoArtistPlaylists`;\r\nconst opDesc = `Automatically generate artist playlists`;\r\nexport const autoArtistPlaylistsOp = new FluxifyOp(opName, opDesc, FluxifyAutoArtistPlaylists);\r\nexport default function FluxifyAutoArtistPlaylists({\r\n    token,\r\n    client,\r\n    throwGlobalError,\r\n    disable,\r\n    finish,\r\n} : FluxifyOpProps) {\r\n    const [playlists, loaded, playlistError] = useSpotifyPlaylists(token, client);\r\n    const [selectorComponent, selected] = usePlaylistSelector('playlists', playlists, {\r\n        includeLiked: true,\r\n    });\r\n    const [imageComponent, imageColour] = usePlaylistImageSelector('image');\r\n    const [localError, throwError] = useError();\r\n    const hasError = useErrorAggregator(throwGlobalError, [localError, playlistError])\r\n\r\n    const run = async () => {\r\n        const rawTracks = await loadAllTracks(client, selected, throwError);\r\n        if (!rawTracks) return false;\r\n        const tracks : Set<{ uri : SpotifyURI, artists : Array<Artist> }> = new Set(\r\n            rawTracks.map(t => t.track)\r\n                     .filter(t => t instanceof Track)\r\n                     .map(t => { return {\r\n                        uri: t.uri,\r\n                        artists: (t as Track).artists,\r\n                     }})\r\n        );\r\n        let directory : { [key : string] : { artist : Artist, tracks : Array<SpotifyURI> } } = {}\r\n        for (const t of tracks) {\r\n            for (const a of t.artists) {\r\n                if (a.id in directory) {\r\n                    directory[a.id].tracks.push(t.uri);\r\n                } else {\r\n                    directory[a.id] = {\r\n                        artist: a,\r\n                        tracks: [t.uri],\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        for (const a_id in directory) {\r\n            if (directory[a_id].tracks.length > 9) {\r\n                const a_name = directory[a_id].artist.name;\r\n                const newPlaylist = await createPlaylist(client, throwError, `Auto-${a_name}`,\r\n                    `collates songs by ${a_name}.`,\r\n                    imageColour\r\n                );\r\n                if (!newPlaylist) return false;\r\n                const result = await addToPlaylist(newPlaylist, directory[a_id].tracks, throwError);\r\n                if (!result) return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    if (hasError) {\r\n        return <FluxifyLoading />;\r\n    } else if (loaded) {\r\n        if (!playlists) {\r\n            throwError(getLoadingError(opName));\r\n            return <FluxifyLoading />;\r\n        }\r\n        const components = [\r\n            <TextContainer key={ `description `}>\r\n                { `\r\n                    This operation will get all the artists featuring in the selected playlists and\r\n                    for each one that appears frequently, it will produce a playlist for that\r\n                    artist.\r\n                ` }\r\n            </TextContainer>,\r\n            selectorComponent,\r\n            imageComponent,\r\n        ]\r\n        return renderOp(components, selected.length > 0, run, disable, finish);\r\n    } else {\r\n        return <FluxifyLoading />;\r\n    }\r\n}\r\n\r\nconst TextContainer = styled.p``;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing1, spacing2, spacing3 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\nimport useSpotifyAuth from \"../hooks/spotifyAuthenticator\";\r\nimport useSpotifyClient from \"../hooks/spotifyClient\";\r\nimport Collapse from \"../components/collapse\";\r\nimport Button from \"../components/button\";\r\nimport FluxifyLoading from \"../components/fluxify/fluxifyLoading\";\r\nimport FluxifyLoginPage from \"../components/fluxify/fluxifyLogin\";\r\nimport FluxifyHeader from \"../components/fluxify/fluxifyHeader\";\r\nimport FluxifyLogoutPage from \"../components/fluxify/fluxifyLogout\";\r\nimport FluxifyOp from \"../components/fluxify/ops/fluxifyOp\";\r\nimport { discernErrorMessage, getLoadingError, useError } from \"../hooks/spotifyError\";\r\nimport { exclusiveLikedOp } from \"../components/fluxify/ops/fluxifyExcusiveLiked\";\r\nimport { mergeOp } from \"../components/fluxify/ops/fluxifyMergePlaylists\";\r\nimport { unfollowFluxifyOp } from \"../components/fluxify/ops/fluxifyUnfollowFluxify\";\r\nimport { autoArtistPlaylistsOp } from \"../components/fluxify/ops/fluxifyAutoArtistPlaylists\";\r\n\r\nconst ops : Array<FluxifyOp> = [\r\n    mergeOp,\r\n    exclusiveLikedOp,\r\n    autoArtistPlaylistsOp,\r\n    unfollowFluxifyOp,\r\n]\r\n\r\nexport const fluxifyLink = `/fluxify`;\r\nexport const fluxifyPage : Page = new Page(Fluxify, {\r\n    accentColour: \"#1DB954\",\r\n    name: \"Fluxify\",\r\n    link: fluxifyLink,\r\n});\r\nexport default function Fluxify() {\r\n    const [error, throwError, resetError] = useError();\r\n    const [token, _logout] = useSpotifyAuth();\r\n    const [client, loaded, clientError, resetClient] = useSpotifyClient(token);\r\n   \r\n    const [currentOp, setCurrentOp] = useState<string | null>(null);\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const logout = useCallback(() => {\r\n        _logout();\r\n        resetError();\r\n        resetClient();\r\n    }, [_logout, resetError, resetClient]);\r\n\r\n    if (error || clientError) {\r\n        return (\r\n            <FluxifyLogoutPage\r\n                logout={ logout }\r\n                message={ discernErrorMessage(error, clientError) }\r\n            />\r\n        );\r\n    } else if (!token) {\r\n        return <FluxifyLoginPage window={ window } />;\r\n    } else if (loaded) {\r\n        if (!client) {\r\n            throwError(getLoadingError(`Fluxify`));\r\n            return <FluxifyLoading />;\r\n        }\r\n        const currentOpData = currentOp ? ops.find(op => op.getName() === currentOp) : undefined;\r\n        const CurrentOpComponent = currentOpData ? currentOpData.getComponent() : undefined;\r\n        return (\r\n            <>\r\n                <FluxifyHeader client={ client } logout={ logout }/>\r\n                <InterfaceWrapper disabled={ disabled }>\r\n                    <SelectCollapse \r\n                        title={ `Select an Operation` }\r\n                        value={ currentOpData ? currentOpData.getDescription() : `` }\r\n                    >\r\n                        <SelectWrapper>\r\n                            { ops.map(op => (\r\n                                <SelectButton\r\n                                    key={ op.getName() }\r\n                                    onClick={ () => setCurrentOp(op.getName()) }\r\n                                >\r\n                                    { op.getDescription() }\r\n                                </SelectButton>\r\n                            )) }\r\n                        </SelectWrapper>\r\n                    </SelectCollapse>\r\n                    { CurrentOpComponent ? (\r\n                        <CurrentOpWrapper>\r\n                            <CurrentOpComponent\r\n                                token={ token }\r\n                                client={ client }\r\n                                throwGlobalError={ e => throwError(e) }\r\n                                disable={ () => setDisabled(true) }\r\n                                enable={ () => setDisabled(false) }\r\n                                finish={ () => {\r\n                                    setDisabled(false);\r\n                                    setCurrentOp(null);\r\n                                }}\r\n                            />\r\n                        </CurrentOpWrapper>\r\n                    ) : `` }\r\n                </InterfaceWrapper>\r\n            </>\r\n            \r\n        );\r\n    } else {\r\n        return <FluxifyLoading />;\r\n    }\r\n}\r\n\r\nconst InterfaceWrapper = styled.div<{ disabled: boolean }>`\r\n    ${props => props.disabled ? `\r\n        opacity: 0.6;\r\n        pointer-events: none;\r\n        user-select: none;\r\n    ` : `\r\n        opacity: 1;\r\n    `};\r\n    transition: opacity 0.25s;\r\n`;\r\n\r\nconst SelectCollapse = styled(Collapse)`\r\n`;\r\n\r\nconst SelectWrapper = styled.div`\r\n    padding: ${spacing3};\r\n    padding-bottom: ${spacing1};\r\n`;\r\n\r\nconst CurrentOpWrapper = styled.div`\r\n    margin-top: ${spacing2};\r\n`;\r\n\r\nconst SelectButton = styled(Button)`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport Client from \"spotify-api.js\";\r\nimport { LoadingState, isLoaded } from \"../utils/types\";\r\nimport { useError } from \"./spotifyError\";\r\n\r\nexport default function useSpotifyClient(token : string | null)\r\n    : [Client | null, boolean, Error | null, () => void] {\r\n    const [loadState, setLoadState] = useState(LoadingState.NONE);\r\n    const [error, throwError, resetError] = useError();\r\n\r\n    const [client, setClient] = useState<Client | null>(null);\r\n\r\n    const reset = useCallback(() => {\r\n        resetError();\r\n        setClient(null);\r\n        setLoadState(LoadingState.NONE);\r\n    }, [resetError, setClient]);\r\n\r\n    useEffect(() => {\r\n        if (token && loadState === LoadingState.NONE) {\r\n            (async () => {\r\n                setLoadState(LoadingState.LOADING);\r\n                const client = new Client(token);\r\n                await client.user.info().catch(throwError);\r\n                setClient(client);\r\n                setLoadState(LoadingState.LOADED)\r\n            })();\r\n        }\r\n    }, [token, loadState, setLoadState, throwError, setClient]);\r\n\r\n    return [client, isLoaded(loadState), error, reset]\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport InlineImage from \"../components/inlineImage\";\r\nimport { fluxifyLink } from \"./fluxify\";\r\nimport Page from \"./pages\";\r\n\r\nexport const homePage : Page = new Page(Home, {\r\n    accentColour: \"#ff9dd9\",\r\n\r\n    name: \"Home\",\r\n    link: \"/\",\r\n\r\n    onNavbar: true,\r\n    home: true,\r\n});\r\nexport default function Home() {\r\n    return (\r\n        <TextContainer>\r\n            <InlineImage src={ `res/me.png` } />\r\n            {\r\n                `I'm Tyler, a final-year Maths and Computer Scientist at the University of Bristol.\r\n                This website is the home of my various programming projects.`\r\n            } <br/><br/> {\r\n                `I am currently finishing my degree and tinkering with various\r\n                projects, like a `\r\n            } <Link to={ fluxifyLink }>{ `Spotify app` }</Link> { \r\n                ` that has some more niche playlist functions, and a chess game written in Python\r\n                (more details on the projects page).`\r\n            }\r\n        </TextContainer>\r\n    );\r\n};\r\n\r\nconst TextContainer = styled.p``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nexport const notFoundPage : Page = new Page(NotFound, {\r\n    accentColour: \"#9c9c9c\",\r\n\r\n    name: \"Not Found\",\r\n    link: \"\",\r\n\r\n    notFound: true,\r\n});\r\nexport default function NotFound() {\r\n    return ( \r\n        <TextContainer>\r\n            Oops, did you take a wrong turn? <br />\r\n            We couldn't find anything at this URL.\r\n        </TextContainer>\r\n    );\r\n}\r\n\r\nconst TextContainer = styled.p`\r\n    text-align: center;\r\n    margin-top: ${spacing2};\r\n    margin-bottom: ${spacing2};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing0 } from \"../utils/dimensions\";\r\nimport { DivProps } from \"../utils/types\";\r\n\r\ntype DividerProps = {\r\n    colour? : string,\r\n} & DivProps;\r\nexport default function Divider(props : DividerProps) {\r\n    return <Container colour={ props.colour ?? '#FFFFFF' } {...props}/>;\r\n}\r\n\r\nconst Container = styled.div<{ colour : string }>`\r\n    display: block;\r\n    content: none;\r\n    height: ${spacing0};\r\n    background-color: ${props => props.colour};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2, spacing3 } from \"../utils/dimensions\";\r\nimport { DivProps } from \"../utils/types\";\r\nimport Divider from \"./divider\";\r\n\r\ntype SectionTitleProps = {\r\n    accent? : boolean,\r\n} & DivProps;\r\nexport default function SectionTitle(props : SectionTitleProps) {\r\n    const { accent, children, ...otherProps } = props;\r\n    return (\r\n        <SectionTitleContainer {...otherProps}>\r\n            <TitleContainer className={ (accent ?? false) ? `accent` : `` }>\r\n                { children }\r\n            </TitleContainer>\r\n            <DividerContainer>\r\n                <Divider />\r\n            </DividerContainer>\r\n        </SectionTitleContainer>\r\n    );\r\n}\r\n\r\nconst SectionTitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: ${spacing3};\r\n`;\r\n\r\nconst TitleContainer = styled.h2`\r\n    margin-right: ${spacing2};\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst DividerContainer = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport InlineImage from \"../components/inlineImage\";\r\nimport SectionTitle from \"../components/sectionTitle\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport { Side } from \"../utils/types\";\r\nimport { fluxifyLink } from \"./fluxify\";\r\nimport Page from \"./pages\";\r\n\r\nconst helixUrl = `https://github.com/Fluxanoia/Helix`;\r\n\r\nconst cardmasterWidget = `\r\n    <iframe frameborder=\"0\" src=\"https://itch.io/embed/718461?dark=true\" width=\"552\" height=\"167\">\r\n        <a href=\"https://fluxanoia.itch.io/cardmaster\">\r\n            Cardmaster by Fluxanoia\r\n        </a>\r\n    </iframe>\r\n`;\r\n\r\nconst legacyCardmasterUrl = `http://www.mediafire.com/file/6m0h776pnl9hr32/Cardmaster_pre0.0.5.zip/file`;\r\nconst legacyPulseUrl = `https://www.mediafire.com/file/x2m7ffz9zgq4h9o/Pulse.zip/file`;\r\nconst legacyKotsUrl = `http://www.mediafire.com/file/q8ofirq3y8xlxoo/King_of_the_Skies_Package.zip/file`;\r\n\r\nexport const projectsPage : Page = new Page(Projects, {\r\n    accentColour: \"#77e4ff\",\r\n    name: \"Projects\",\r\n    onNavbar: true,\r\n});\r\nexport default function Projects() {\r\n    const oldProjectLink = (name : string, url : string) => {\r\n        return (\r\n            <>\r\n                &#8226; &nbsp;\r\n                <a href={ url }>\r\n                    { name }\r\n                </a>\r\n                <br />\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { renderProject(\r\n                `Fluxify`, \r\n                <>\r\n                    {\r\n                        `This is a Spotify app created to allow for some more niche playlist\r\n                        operations, like getting the songs you've liked that don't exist on\r\n                        any of your playlists, or merging multiple playlists easily. It's hosted `\r\n                    }\r\n                    <Link to={ fluxifyLink }>{ `here` }</Link>\r\n                    {\r\n                        `.`\r\n                    } \r\n                </>\r\n            ) }\r\n            { renderProject(\r\n                `Chessr`, \r\n                <>\r\n                    <InlineImage src={ `res/chessr.png` } side={ Side.RIGHT } />\r\n                    {\r\n                        `This is a chess game written in Python with PyGame, it's in\r\n                        its early stages at the moment, but I plan for it to have a\r\n                        whole host of features!\r\n                        It can be found on my `\r\n                    }\r\n                    <a href={ helixUrl }>GitHub</a>\r\n                    {\r\n                        `.`\r\n                    } \r\n                </>\r\n            ) }\r\n            { renderProject(\r\n                `Helix`, \r\n                <>\r\n                    {\r\n                        `This is a graphing tool built for education as part of my final-year\r\n                        project. It is written in Python using matplotlib and sympy\r\n                        for plotting and mathematical processing. It can be found on my `\r\n                    }\r\n                    <a href={ helixUrl }>GitHub</a>\r\n                    {\r\n                        `.`\r\n                    } \r\n                </>\r\n            ) }\r\n\r\n            { renderProject(\r\n                `Cardmaster`, \r\n                `This is a game I'm working on when I can,\r\n                it started out in Java, migrated to C++ with SDL and is now on the\r\n                Godot Engine. The widget below will take you to where it's hosted.`,\r\n                <WidgetContainer dangerouslySetInnerHTML={{ __html: cardmasterWidget }} />\r\n            ) }\r\n            \r\n            { renderProject(\r\n                `www.fluxanoia.co.uk`, \r\n                `This website is built on React with Typescript and hosted on GitHub Pages.`\r\n            ) }\r\n\r\n            { renderProject(\r\n                `Legacy Downloads`, \r\n                `For nostalgia's sake, here are some links to projects that are no longer being\r\n                worked on:`,\r\n                <TextContainer>\r\n                    { oldProjectLink(`Cardmaster (C++)`, legacyCardmasterUrl) }\r\n                    { oldProjectLink(`Pulse`, legacyPulseUrl) }\r\n                    { oldProjectLink(`King of the Skies`, legacyKotsUrl) }\r\n                </TextContainer>\r\n            ) }\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderProject = (\r\n    title : string,\r\n    text : string | JSX.Element,\r\n    children? : React.ReactNode\r\n) => (\r\n    <ProjectContainer>\r\n        <SectionTitle accent>\r\n            { title }\r\n        </SectionTitle>\r\n        <TextContainer>\r\n            { text }\r\n        </TextContainer>\r\n        { children ? <Spacer /> : ``}\r\n        <ChildrenContainer>\r\n            { children }\r\n        </ChildrenContainer>\r\n    </ProjectContainer>\r\n);\r\n\r\nconst WidgetContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst ProjectContainer = styled.div`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n    height: ${spacing2};\r\n`;\r\n\r\nconst ChildrenContainer = styled.div`\r\n    margin: 0 ${spacing2};\r\n`;\r\n\r\nconst TextContainer = styled.p`\r\n    margin: 0 ${spacing2};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiOutlineGithub, AiFillPhone } from \"react-icons/ai\";\r\nimport { BiGlobe } from \"react-icons/bi\";\r\nimport { SiMailDotRu } from \"react-icons/si\";\r\nimport { FiMapPin } from \"react-icons/fi\";\r\nimport { cvSpacing2 } from \"../../utils/dimensions\";\r\nimport { cvColour1, cvColour2 } from \"../../utils/colours\";\r\n\r\nconst createLink = (icon : JSX.Element, link : string, noLink? : boolean) => {\r\n    if (noLink ?? false) {\r\n        return (\r\n            <LinkContainer>\r\n                { icon } &nbsp; <span className=\"a\">{ link }</span>\r\n            </LinkContainer>\r\n        );\r\n    }\r\n    const href = (link.includes('@')) ? `mailto:${link}` : `https://www.${link}`;\r\n    return (\r\n        <LinkContainer>\r\n            { icon } &nbsp; <a href={ href }>{ link }</a>\r\n        </LinkContainer>\r\n    );\r\n}\r\n\r\nexport default function CvHeader() {\r\n    return (\r\n        <HeaderContainer>\r\n            <TitleContainer>\r\n                Tyler Wright\r\n            </TitleContainer>\r\n            <SubtitleContainer>\r\n                Studying Maths and Computer Science at the University of Bristol\r\n            </SubtitleContainer>\r\n            <LinksContainer>\r\n                { createLink(<BiGlobe />, \"fluxanoia.co.uk\") }\r\n                { createLink(<SiMailDotRu />, \"contact@fluxanoia.co.uk\") }\r\n                { createLink(<AiFillPhone />, \"+447468 417 670\", true) }\r\n                { createLink(<AiOutlineGithub />, \"github.com/Fluxanoia\") }\r\n                { createLink(<FiMapPin />, \"Bristol and London, UK\", true) }\r\n            </LinksContainer>\r\n        </HeaderContainer>\r\n    );\r\n}\r\n\r\nconst HeaderContainer = styled.div``;\r\nconst TitleContainer = styled.h1`\r\n    color: ${cvColour1};\r\n    margin-bottom: 0;\r\n    text-transform: uppercase;\r\n`;\r\nconst SubtitleContainer = styled.h3`\r\n    color: ${cvColour2};\r\n`;\r\nconst LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\nconst LinkContainer = styled.div`\r\n    display: flex;\r\n    margin-right: ${cvSpacing2};\r\n    svg {\r\n        align-self: center;\r\n    }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { cvSpacing1 } from \"../../utils/dimensions\";\r\n\r\nexport default function CvLightDivider() {\r\n    return (<LightDivider />);\r\n}\r\n\r\nconst LightDivider = styled.div`\r\n    height: 0px;\r\n    margin-top: ${cvSpacing1};\r\n    margin-bottom: ${cvSpacing1};\r\n\r\n    border-top-color: #EEEEEE;\r\n    border-top-style: dashed;\r\n    border-top-width: 2px;\r\n`;\r\n","\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { cvColour1 } from \"../../utils/colours\";\r\nimport { cvSpacing1 } from \"../../utils/dimensions\";\r\nimport Divider from \"../divider\";\r\n\r\nexport default function CvTitle({ children } : { children : React.ReactNode }) {\r\n    return (\r\n        <TitleContainer>\r\n            <TextContainer>\r\n                { children }\r\n            </TextContainer>\r\n            <Divider colour={cvColour1} />\r\n        </TitleContainer>\r\n    );\r\n}\r\n\r\nconst TitleContainer = styled.div`\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\nconst TextContainer = styled.h1`\r\n    color: ${cvColour1};\r\n    margin-bottom: 0;\r\n    text-transform: uppercase;\r\n`;\r\n","import React from \"react\";\r\nimport { AiFillCalendar } from \"react-icons/ai\";\r\nimport { FiMapPin } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { cvColour2 } from \"../../utils/colours\";\r\nimport { cvSpacing1, cvSpacing2, cvSpacing3 } from \"../../utils/dimensions\";\r\nimport CvLightDivider from \"./cvLightDivider\";\r\nimport CvTitle from \"./cvTitle\";\r\n\r\nconst createEntry = (\r\n    title : string,\r\n    time : string,\r\n    location : string,\r\n    content : string | JSX.Element,\r\n) => {\r\n    return (\r\n        <EntryContainer>\r\n            <EntryTitle>{ title }</EntryTitle>\r\n            <EntryIconContainer>\r\n                <EntryIcon>\r\n                    <AiFillCalendar /> &nbsp; <span className=\"a\">{ time }</span>\r\n                </EntryIcon>\r\n                <EntryIcon>\r\n                    <FiMapPin /> &nbsp; <span className=\"a\">{ location }</span>\r\n                </EntryIcon>\r\n            </EntryIconContainer>\r\n            <EntryTextContainer>\r\n                { content }\r\n            </EntryTextContainer>\r\n        </EntryContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default function CvLeftColumn() {\r\n    return (\r\n        <Container>\r\n            <CvTitle>Education</CvTitle>\r\n            { createEntry(\r\n                `Maths and Computer Science (BSc)`,\r\n                `2018 to 2021`,\r\n                `University of Bristol`,\r\n                `I am currently in my third and final year with a 79% grade average in my January \r\n                examinations, and a 81% grade average over second year.\r\n                I have specialised in pure maths and practical computer science\r\n                with units like Linear Algebra 2 (97%), Group Theory (78%), Imperative and Object \r\n                Oriented Programming (81%), and Computer Graphics (84%). \r\n                However, I have also taken some theoretical computer science units, like \r\n                Language Engineering (unassessed) and Types and Lambda\r\n                Calculus (75%).`\r\n            )}\r\n            <CvLightDivider />\r\n            { createEntry(\r\n                `A Levels`,\r\n                `2016 to 2018`,\r\n                `King's College London Maths School`,\r\n                `I left with the grades A*A*A in Maths, Further Maths, and Physics, as well\r\n                as an A in AS Computer Science.`\r\n            )}\r\n            <Spacer />\r\n            <CvTitle>Experience</CvTitle>\r\n            { createEntry(\r\n                `Software Developer Intern at Ghyston`,\r\n                `August 2020 and March 2021`,\r\n                `University of Bristol`,\r\n                `Over the course of the internship, we built a fantasy NBA league single-page\r\n                app in pairs using React with Typescript, SQL, and C#. Users could input bets with\r\n                virtual currency and view their current/projected scores on the global leaderboards\r\n                or create their own subsets of player groups called leagues. In March of 2021,\r\n                I returned for a week, working on issues with their website. I fixed bugs with\r\n                Internet Explorer 11 and prototyped a smart header to assist navigation on\r\n                longer pages.`\r\n            )}\r\n            <CvLightDivider />\r\n            { createEntry(\r\n                `Academic Tutor`,\r\n                `October 2020 to June 2021`,\r\n                `University of Bristol`,\r\n                `I support two groups of first year computer scientists as a tutor, going through\r\n                weekly problem sheets and taking questions about the course and its content.\r\n                This opportunity has developed my independence, leadership, and my \r\n                ability to convey ideas to other people in an easily digestable way.`\r\n            )}\r\n            <CvLightDivider />\r\n            { createEntry(\r\n                `Open Day Steward`,\r\n                `June 2019 to September 2021`,\r\n                `University of Bristol`,\r\n                `I worked three separate days across June and September helping the University\r\n                run open days, directing people to where they wanted to be and offering advice\r\n                on my experiences. This was a great help in developing my people skills.`\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n`;\r\nconst Spacer = styled.div`\r\n    height: ${cvSpacing3};\r\n`;\r\n\r\nconst EntryContainer = styled.div`\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\nconst EntryTitle = styled.h3`\r\n    color: ${cvColour2};\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\nconst EntryIconContainer = styled.div`\r\n    display: flex;\r\n    margin-bottom: ${cvSpacing2};\r\n`;\r\nconst EntryIcon = styled.div`\r\n    display: flex;\r\n    flex: 1 1 0;\r\n    svg {\r\n        align-self: center;\r\n    }\r\n`;\r\nconst EntryTextContainer = styled.div`\r\n    margin-left: ${cvSpacing3};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { cvColour1, cvColour2 } from \"../../utils/colours\";\r\nimport { cvSpacing0, cvSpacing1, cvSpacing3 } from \"../../utils/dimensions\";\r\nimport CvTitle from \"./cvTitle\";\r\n\r\nconst languages = [\r\n    `C`,\r\n    `C++`,\r\n    `C#`,\r\n    `CSS`,\r\n    `Haskell`,\r\n    `HTML`,\r\n    `Java`,\r\n    `LaTeX`,\r\n    `R`,\r\n    `React`,\r\n    `Ruby`,\r\n    `Python`,\r\n    `Scratch`,\r\n    `Typescript`,\r\n].sort();\r\n\r\nconst skills = [\r\n    `Graphic Design`,\r\n    `Computer Building`,\r\n    `Flat-pack Furniture`,\r\n    `Leadership`,\r\n    `Video Games`,\r\n    `Teaching and Outreach`,\r\n    `Organisation`,\r\n    `Longboarding`,\r\n].sort();\r\n\r\nconst createSection = (title : string, content : string | JSX.Element) => {\r\n    return (\r\n        <>\r\n            <SectionContainer>\r\n                <CvTitle>{ title }</CvTitle>\r\n                { content }\r\n            </SectionContainer>\r\n            <Spacer />\r\n        </>\r\n    );\r\n};\r\n\r\nconst createIcons = (icons : Array<string>) => {\r\n    return (\r\n        <IconContainer>\r\n            { icons.map(i => <Icon key={ i }>{ i }</Icon>) }\r\n        </IconContainer>\r\n    );\r\n};\r\n\r\nconst createProject = (title : string, content : string) => {\r\n    return (\r\n        <ProjectContainer>\r\n            <ProjectTitle>{ title }</ProjectTitle>\r\n            <ProjectContent>{ content }</ProjectContent>\r\n        </ProjectContainer>\r\n    );\r\n}\r\n\r\nexport default function CvRightColumn() {\r\n    return (\r\n        <Container>\r\n            { createSection(`About`,\r\n                <p>\r\n                    { \r\n                        `I started to program back in Year 9, where I taught myself Java. I\r\n                        developed a 2D fighting game over the course of Years 10 and 11, leading\r\n                        me to be the first at my school to ever take a computer science GCSE.\r\n                        I continued creating throughout college and university with a Tetris clone,\r\n                        a raytraced renderer written in C++, a game demo called Cardmaster, and a\r\n                        graphing software called Helix (available on my GitHub).` \r\n                    }\r\n                    <br /><br />\r\n                    {\r\n                        `I also have a deep interest in teaching, taking part in multiple teaching\r\n                        assistant and tutor roles at my sixth form college and university.`\r\n                    }\r\n                </p>\r\n            )}\r\n            { createSection(`Languages`, createIcons(languages)) }\r\n            { createSection(`Skills and Interests`, createIcons(skills)) }\r\n            { createSection(`Projects`,\r\n                <ProjectsContainer>\r\n                    { createProject(`Helix`, \r\n                        `This is a graphing tool built for education as part of my final-year\r\n                        project. It is written in Python using matplotlib and sympy\r\n                        for plotting and mathematical processing.`) }\r\n                    { createProject(`fluxanoia.co.uk`, \r\n                        `This is my personal website, built on React with Typescript and\r\n                        hosted on GitHub pages.`) }\r\n                </ProjectsContainer>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n`;\r\nconst Spacer = styled.div`\r\n    height: ${cvSpacing3};\r\n`;\r\n\r\nconst SectionContainer = styled.div`\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\nconst Icon = styled.div`\r\n    margin: 1px;\r\n    padding: 1px ${cvSpacing1};\r\n    border-style: solid;\r\n    border-color: ${cvColour1};\r\n    border-width: ${cvSpacing0};\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst ProjectsContainer = styled.div``;\r\nconst ProjectContainer = styled.div``;\r\nconst ProjectTitle = styled.h3`\r\n    color: ${cvColour2};\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\nconst ProjectContent = styled.p`\r\n    margin-left: ${cvSpacing3};\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport Pdf from \"react-to-pdf\";\r\nimport { cvColour1, cvTextColour } from \"../../utils/colours\";\r\nimport { mainFontSettings } from \"../../utils/globalStyling\";\r\nimport { normalise } from \"../../utils/normalise\";\r\nimport Page from \"../pages\";\r\nimport CvHeader from \"../../components/cv/cvHeader\";\r\nimport CvLeftColumn from \"../../components/cv/cvLeftColumn\";\r\nimport CvRightColumn from \"../../components/cv/cvRightColumn\";\r\nimport { cvSpacing2, cvSpacing3, spacing1, spacing2 } from \"../../utils/dimensions\";\r\nimport CvTitle from \"../../components/cv/cvTitle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const cvFilePath = \"/cv/tyler\";\r\nexport const cvTyler : Page = new Page(CvPdf, {\r\n    name: \"Tyler's CV\",\r\n    link: cvFilePath,\r\n    independent: true,\r\n});\r\nexport default function CvPdf() {\r\n    const [showButtons, setShowButtons] = useState(true);\r\n\r\n    const toggleButtons = () => setShowButtons(b => !b);\r\n\r\n    return (\r\n        <Pdf filename=\"CV - Tyler Wright\" x={-2} y={-2}>\r\n            {({toPdf, targetRef} : PdfParams) =>  (\r\n                <>\r\n                    <ButtonContainer show={showButtons}>\r\n                        <Link to={ \"/cv\" }>\r\n                            <Button show={showButtons}>\r\n                                Back to fluxanoia.co.uk\r\n                            </Button>\r\n                        </Link>\r\n                        <Button onClick={toPdf} show={showButtons}>\r\n                            Download as PDF\r\n                        </Button>\r\n                        <Button onClick={toggleButtons}>\r\n                            { showButtons ? `Hide Buttons` : `Show Buttons` }\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                    <MainContainer ref={targetRef}>\r\n                        <GlobalStyling />\r\n                        <CvHeader />\r\n                        <ColumnContainer>\r\n                            <LeftContainer>\r\n                                <CvLeftColumn />\r\n                            </LeftContainer>\r\n                            <RightContainer>\r\n                                <CvRightColumn />\r\n                            </RightContainer>\r\n                        </ColumnContainer>\r\n                        <CvTitle>...and more</CvTitle>\r\n                        <AndMoreContainer>\r\n                            A web version of this CV and much more information about my projects\r\n                            and experience is available\r\n                            at <Link to={ \"/cv\" }>fluxanoia.co.uk/cv</Link>. <br />\r\n                            References are available upon request.\r\n                        </AndMoreContainer>\r\n                    </MainContainer>\r\n                </>\r\n            )}\r\n        </Pdf>\r\n    );\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 210mm;\r\n    height: 297mm;\r\n\r\n    box-sizing: border-box;\r\n    margin: auto;\r\n    padding: ${cvSpacing3};\r\n\r\n    color: ${cvTextColour};\r\n`;\r\nconst ColumnContainer = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    padding: ${cvSpacing3} 0;\r\n`;\r\nconst LeftContainer = styled.div`\r\n    margin-right: ${cvSpacing3};\r\n\r\n    flex: 10 0 0;\r\n    height: 100%;\r\n`;\r\nconst RightContainer = styled.div`\r\n    flex: 6 0 0;\r\n    height: 100%;\r\n`;\r\nconst AndMoreContainer = styled.p``;\r\n\r\nconst ButtonContainer = styled.div<{ show : boolean }>`\r\n    position: fixed;\r\n    top: ${spacing2};\r\n    right: ${spacing2};\r\n    font-size: 18px;\r\n\r\n    transform: translateY(${props => props.show ? `0%`: `-120px`});\r\n    transition: transform 1s;\r\n`;\r\nconst Button = styled.div<{ show? : boolean }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    height: 48px;\r\n    padding: 0 ${spacing1};\r\n    margin-bottom: ${spacing1};\r\n    box-sizing: border-box;\r\n    \r\n    text-align: center;\r\n\r\n    border-width: 4px;\r\n    border-style: solid;\r\n    border-radius: 16px;\r\n    box-shadow: 0px 0px 20px 6px rgba(40, 40, 40, ${props => (props.show ?? true) ? `0.4` : `0`}); \r\n\r\n    transition: box-shadow 1s;\r\n\r\n    color: #FFFFFF;\r\n    background-color: ${cvTextColour};\r\n    border-color: #FFFFFF;\r\n    &:hover {\r\n        color: ${cvTextColour};\r\n        background-color: #FFFFFF;\r\n        border-color: ${cvTextColour};\r\n    }\r\n    \r\n`;\r\n\r\nexport const GlobalStyling = createGlobalStyle`\r\n    ${normalise}\r\n\r\n    html {\r\n        ${mainFontSettings}\r\n        font-size: 12px;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, p {\r\n        margin-top: 0;\r\n        margin-bottom: ${cvSpacing2};\r\n    }\r\n    h1 {\r\n        font-size: 24px;\r\n    }\r\n    h2 {\r\n        font-size: 20px;\r\n    }\r\n    h3 {\r\n        font-size: 16px;\r\n    }\r\n    h4 {\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n    }\r\n\r\n    a, .a {\r\n        color: ${cvColour1};\r\n        text-decoration: none;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Collapse, { CollapseProps } from \"../../components/collapse\";\r\nimport { spacing1, spacing2, spacing3, spacing4 } from \"../../utils/dimensions\";\r\nimport Page from \"../pages\";\r\nimport { cvFilePath } from \"./cvTyler\";\r\n\r\nexport const cvPage : Page = new Page(Cv, {\r\n    accentColour: \"#ca89ff\",\r\n    name: \"CV\",\r\n    onNavbar: true,\r\n});\r\nexport default function Cv() {\r\n    const bulleted = (text : string) => (<>&#8226; &nbsp; { text } <br /></>);\r\n\r\n    const renderRecord = (\r\n        title : string,\r\n        timeAndLocation : string,\r\n        description : string,\r\n        children? : React.ReactNode,\r\n    ) => {\r\n        return ( \r\n            <RecordContainer>\r\n                <RecordTitleContainer>\r\n                    &#8226; &nbsp;\r\n                    <RecordTitleTextContainer className=\"accent\">\r\n                        { title }\r\n                    </RecordTitleTextContainer>\r\n                </RecordTitleContainer>\r\n                <TimeAndLocationContainer>\r\n                    { timeAndLocation }\r\n                </TimeAndLocationContainer>\r\n                <RecordContentContainer>\r\n                    <RecordTextContainer>\r\n                        { description }\r\n                    </RecordTextContainer>\r\n                    { children }\r\n                </RecordContentContainer>\r\n            </RecordContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TextContainer>\r\n                {\r\n                    `My CV is available to view and download `\r\n                }<Link to={ cvFilePath }>{ `here` }</Link>{ \r\n                    `. However, since I can't fit all my education and experience on it,\r\n                    it's available below for those interested. References are available upon\r\n                    request.`\r\n                }\r\n            </TextContainer>\r\n            <Section title={ `Experience` }>\r\n                { renderRecord(\r\n                    `Software Developer Intern`,\r\n                    `Ghyston, Mar 2021`,\r\n                    `I worked on issues with Ghyston's website, fixing bugs with\r\n                    Internet Explorer 11 and prototyping a smart header to assist navigation on\r\n                    longer pages.`\r\n                ) }\r\n                { renderRecord(\r\n                    `Academic Tutor`,\r\n                    `University of Bristol, Oct 2020 to Jun 2021`,\r\n                    `I support two groups of first year computer scientists as a tutor, going\r\n                    through weekly problem sheets and taking questions about the course and its\r\n                    content. This opportunity has developed my independence, leadership, and my \r\n                    ability to convey ideas to other people in an easily digestible way.`\r\n                ) }\r\n                { renderRecord(\r\n                    `Academic Talks Officer for the Computer Science Society`,\r\n                    `University of Bristol, Jun 2020 to Jun 2021`,\r\n                    `I organise internal talks for the society, as well as supporting the \r\n                    society wherever I may be needed.`\r\n                ) }\r\n                { renderRecord(\r\n                    `Software Developer Intern`,\r\n                    `Ghyston, Aug 2020`,\r\n                    `Over the course of the internship, we built a fantasy NBA league \r\n                    single-page app in pairs using React with Typescript, SQL, and C#.\r\n                    Users could input bets with virtual currency\r\n                    and view their current/projected scores on the global leaderboards\r\n                    or create their own subsets of player groups called leagues.`\r\n                ) }\r\n                { renderRecord(\r\n                    `Teaching Assistant`,\r\n                    `University of Bristol, Jan 2020 to Jun 2021`,\r\n                    `I work as teaching assistant on a Java programming\r\n                    unit for Masters conversion students, as well as\r\n                    a first-year algorithms unit.`\r\n                ) }\r\n                { renderRecord(\r\n                    `President of the Maths and Computer Science Society`,\r\n                    `University of Bristol, Nov 2019 to Jun 2020`,\r\n                    `I founded and was the president of the Maths and\r\n                    Computer Science society, running many internal talks for\r\n                    all interested.`\r\n                ) }\r\n                { renderRecord(\r\n                    `Open Day Steward`,\r\n                    `University of Bristol, Jun 2019 to Sep 2019`,\r\n                    `I worked three separate days across June and September \r\n                    helping the University run the open days.`\r\n                ) }\r\n                { renderRecord(\r\n                    `Student Ambassador`,\r\n                    `King's College London Maths School, Jul 2019`,\r\n                    `I worked as a student ambassador during the KCLMS Physics+ \r\n                    summer school, giving students heading into Year 12 an insight\r\n                    into A Level physics.`\r\n                ) }\r\n                { renderRecord(\r\n                    `Volunteer Student Ambassador`,\r\n                    `King's College London Maths School, Jul 2018`,\r\n                    `I worked as a volunteer student ambassador during the KCLMS \r\n                    summer school where we helped soon-to-be Year 11's develop their\r\n                    problem solving and mathematical skills.`\r\n                ) }\r\n            </Section>\r\n            <Section title={ `Education` }>\r\n                { renderRecord(\r\n                    `University of Bristol`,\r\n                    `Maths and Computer Science BSc, Sep 2018 to Jun 2021`,\r\n                    `My average score for each year is below,\r\n                    followed by the weighting of that year in parentheses:`,\r\n                    <BulletedContainer>\r\n                        { bulleted(`First Year - 83% (0%)`) }\r\n                        { bulleted(`Second Year - 81% (25%)`) }\r\n                        { bulleted(`Third Year (January Examinations) - 79% (75%)`) }\r\n                    </BulletedContainer>\r\n                ) }\r\n                { renderRecord(\r\n                    `King's College London Maths School (KCLMS)`,\r\n                    `Sep 2016 to Jun 2018`,\r\n                    `I left KCLMS with the following qualifications:`,\r\n                    <BulletedContainer>\r\n                        { bulleted(`A* in MEI Maths (A2)`) }\r\n                        { bulleted(`A* in MEI Further Maths (A2)`) }\r\n                        { bulleted(`A in OCR B Physics (A2)`) }\r\n                        { bulleted(`A in AQA Computer Science (AS)`) }\r\n                    </BulletedContainer>\r\n                ) }\r\n            </Section>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Section = (props : CollapseProps) => {\r\n    const { children, ...otherProps } = props;\r\n    return (\r\n        <SectionOuterContainer {...otherProps}>\r\n            <SectionInnerContainer>\r\n                { children }\r\n            </SectionInnerContainer>\r\n        </SectionOuterContainer>\r\n    );\r\n};\r\nconst SectionOuterContainer = styled(Collapse)`\r\n    margin-top: ${spacing2};\r\n`;\r\nconst SectionInnerContainer = styled.div`\r\n    padding: ${spacing3};\r\n    padding-bottom: ${spacing1};\r\n`;\r\n\r\nconst TextContainer = styled.p``;\r\n\r\nconst BulletedContainer = styled.p`\r\n    margin: 0 ${spacing2};\r\n`;\r\n\r\nconst RecordContainer = styled.div`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst RecordTitleContainer = styled.h3`\r\n    margin-bottom: ${spacing1};\r\n`;\r\nconst RecordTitleTextContainer = styled.span``;\r\n\r\nconst TimeAndLocationContainer = styled.h4`\r\n    margin-left: ${spacing4};\r\n`;\r\n\r\nconst RecordContentContainer = styled.div`\r\n    margin: 0 ${spacing4};\r\n`;\r\n\r\nconst RecordTextContainer = styled.p``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nexport const discordPage : Page = new Page(Discord, {\r\n    accentColour: \"#949fff\",\r\n    name: \"Discord\",\r\n});\r\nexport default function Discord() {\r\n    return (\r\n        <TextContainer>\r\n            The Teelai Association Discord server can be accessed via the \r\n            link <a href=\"https://discord.gg/ZfQn768\">here</a>.\r\n        </TextContainer>\r\n    );\r\n}\r\n\r\nconst TextContainer = styled.p`\r\n    text-align: center;\r\n    margin-top: ${spacing2};\r\n    margin-bottom: ${spacing2};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SectionTitle from \"../components/sectionTitle\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nexport const specsPage : Page = new Page(Specs, {\r\n    accentColour: \"#ffbe89\",\r\n    name: \"Specs\",\r\n});\r\nexport default function Specs() {\r\n    return (\r\n        <>\r\n            <SectionTitle accent>Computer Specs</SectionTitle>\r\n            \r\n            <TableContainer>\r\n                { renderRow(\"Motherboard\", \"Asus ROG STRIX B350-F\") }\r\n                { renderRow(\"CPU\", \"AMD Ryzen 7 1700\") }\r\n                { renderRow(\"GPU\", \"MSI GTX 1070 ARMOR\") }\r\n                { renderRow(\"RAM\", \"Ballistix Elite 16GB\") }\r\n                { renderRow(\"PSU\", \"EVGA SuperNOVA 550 G2\") }\r\n                { renderRow(\"Case\", \"Corsair Carbide Series 330R\") }\r\n                { renderRow(\"CPU Cooler\", \"ARCTIC Alpine 64 Pro\") }\r\n            </TableContainer>\r\n\r\n            <SectionTitle accent>Peripherals</SectionTitle>\r\n\r\n            <TableContainer>\r\n                { renderRow(\"Mouse\", \"Logitech MX Master\") }\r\n                { renderRow(\"Mouse (Gaming)\", \"Steelseries Rival 110\") }\r\n                { renderRow(\"Keyboard\", \"Logitech G815 (Tactile)\") }\r\n                { renderRow(\"Keyboard (Other)\", \"Ducky One\") }\r\n                { renderRow(\"Headphones\", \"AKG K240 MkII\") }\r\n                { renderRow(\"Microphone\", \"Audio Technica AT2020\") }\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderRow = (part : string, name : string) => {\r\n    return (\r\n        <RowContainer>\r\n            <LeftTextContainer>{ part }</LeftTextContainer>\r\n            <RightTextContainer>{ name }</RightTextContainer>\r\n        </RowContainer>\r\n    );\r\n}\r\n\r\nconst TableContainer = styled.div`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst LeftTextContainer = styled.div`\r\n    align-text: left;\r\n    flex: 0 0 25%;\r\n`;\r\n\r\nconst RightTextContainer = styled.div`\r\n    align-text: right;\r\n    flex: 1 0 0;\r\n    margin-left: 20px;\r\n`;\r\n","import Page, { externalPage } from \"./pages\";\r\n\r\nexport const githubPage : Page = externalPage(\"GitHub\", \"https://github.com/Fluxanoia\");\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nconst playlistWidget = `\r\n    <iframe src=\"https://open.spotify.com/embed/playlist/3MER32HK7y9bTcUFbTHZ13\"\r\n        width=\"100%\"\r\n        height=\"400\"\r\n        frameborder=\"0\"\r\n        allowtransparency=\"true\"\r\n        allow=\"encrypted-media\">\r\n    </iframe>\r\n`;\r\n\r\nexport const teelaiPage : Page = new Page(Teelai, {\r\n    accentColour: \"#FF74D9\",\r\n    name: \"Teelai\",\r\n});\r\nexport default function Teelai() {\r\n    return (\r\n        <WidgetContainer dangerouslySetInnerHTML={{ __html: playlistWidget }} />\r\n    );\r\n}\r\n\r\nconst WidgetContainer = styled.div`\r\n    margin: ${spacing2};\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FiAtSign } from \"react-icons/fi\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nexport const contactMePage : Page = new Page(ContactMe, {\r\n    accentColour: \"#47d87c\",\r\n    name: \"Contact\",\r\n    onNavbar: true,\r\n});\r\nexport default function ContactMe() {\r\n    return (\r\n        <TextContainer>\r\n            You can write to me via <span className={ `accent` }>\r\n                contact\r\n            </span> <AtSignWrapper>\r\n                <AtSign />\r\n            </AtSignWrapper> <span className={ `accent` }>\r\n                fluxanoia.co.uk\r\n            </span>.\r\n        </TextContainer>\r\n    );\r\n}\r\n\r\nconst TextContainer = styled.p`\r\n    text-align: center;\r\n    margin-top: ${spacing2};\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst AtSignWrapper = styled.span`\r\n    display: inline-block;\r\n`;\r\nconst AtSign = styled(FiAtSign)`\r\n    margin-bottom: -4px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\nimport { History, LocationState, Location } from 'history';\nimport { Switch, withRouter } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { bgTransitionTime, GlobalStyling } from \"./utils/globalStyling\";\nimport Page from \"./pages/pages\";\nimport Title from \"./components/title\";\nimport Footer from \"./components/footer\";\nimport { containerStyling } from \"./utils/colours\";\nimport { ifLarge, mainContainerSizeSettings, spacing2, spacing3 } from \"./utils/dimensions\";\nimport { homePage } from \"./pages/home\";\nimport { notFoundPage } from \"./pages/notFound\";\nimport { projectsPage } from \"./pages/projects\";\nimport { cvPage } from \"./pages/cv/cvPage\";\nimport { discordPage } from \"./pages/discord\";\nimport { specsPage } from \"./pages/specs\";\nimport { githubPage } from \"./pages/external\";\nimport { cvTyler } from \"./pages/cv/cvTyler\";\nimport { teelaiPage } from \"./pages/teelai\";\nimport { fluxifyPage } from \"./pages/fluxify\";\nimport { contactMePage } from \"./pages/contact\";\n\nconst pages : Array<Page> = [\n    homePage,\n    projectsPage,\n    cvPage,\n    contactMePage,\n    discordPage,\n    specsPage,\n    teelaiPage,\n\n    fluxifyPage,\n    githubPage,\n\n    cvTyler,\n\n    notFoundPage,\n];\nconst getNotFoundIndex = () => pages.findIndex(p => p.isNotFound());\nconst getCurrentIndex = (link : string) => {\n    let currentPageIndex = pages.findIndex(p => p.hasLink(link));\n    return (currentPageIndex < 0) ? getNotFoundIndex() : currentPageIndex;\n};\n\nconst getNavbarButtonRenderer = (pageIndex : number) => {\n    return (page : Page, index : number) => {\n        if (!page.isOnNavbar()) return null;\n        return page.getButton(pageIndex === index);\n    }\n}\nconst renderRoute = (page : Page) => {\n    if (!page.isLocal()) return null;\n    return page.getRoute();\n}\n\ntype AppProps = {\n    history  : History<LocationState>,\n    location : Location<LocationState>;\n}\nconst App = (props : AppProps) => {\n    const [pageIndex, setPageIndex] = useState<number>(getCurrentIndex(props.location.pathname));\n\n    useEffect(() => {\n        let currentPageIndex = getCurrentIndex(props.location.pathname);\n        document.title = \"Fluxanoia | \" + pages[currentPageIndex].getName();\n        setPageIndex(currentPageIndex);\n    }, [props, pageIndex]);\n\n    const routes = pages.map(renderRoute).filter(p => p);\n    if (pages[pageIndex].isIndependent()) {\n        return (<Switch>{ routes }</Switch>);\n    }\n    const accentColour = pages[pageIndex].getColour();\n    const navbarButtons = pages.map(getNavbarButtonRenderer(pageIndex)).filter(b => b);\n\n    console.log(routes);\n    console.log(navbarButtons);\n\n    return (\n        <AppContainer>\n            <GlobalStyling bgColour={ accentColour } />\n            <Title page={ pages[pageIndex] } />\n            <Navbar>\n                { navbarButtons }\n            </Navbar>\n            <MainContainer accentColour={ accentColour }>\n                <Switch>\n                    { routes }\n                </Switch>\n            </MainContainer> \n            <Footer />\n        </AppContainer>\n    );\n}\nexport default withRouter(App);\n\nconst AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100vw;\n`;\n\nconst Navbar = styled.nav`\n    ${mainContainerSizeSettings}\n    ${ifLarge} {\n        width: 90%;\n    }\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    \n    div {\n        flex: 1 0 0;\n    }\n\n    ${ifLarge} {\n        flex-direction: row;\n    }\n`;\n\nconst MainContainer = styled.div<{ accentColour : string }>`\n    ${containerStyling}\n    ${mainContainerSizeSettings}\n\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n\n    padding: ${spacing3};\n    margin-top: ${spacing2};\n    margin-bottom: ${spacing2};\n\n    word-break: break-word;\n\n    a, .a, .accent {\n        color: ${props => props.accentColour};\n        transition: color ${bgTransitionTime};\n    }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport 'rc-slider/assets/index.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}