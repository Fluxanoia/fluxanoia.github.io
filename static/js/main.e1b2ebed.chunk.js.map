{"version":3,"sources":["utils/colours.tsx","utils/dimensions.tsx","utils/normalise.tsx","utils/globalStyling.tsx","components/title.tsx","components/footer.tsx","utils/types.tsx","components/inlineImage.tsx","components/button.tsx","pages/pages.tsx","pages/home.tsx","pages/notFound.tsx","components/divider.tsx","components/sectionTitle.tsx","pages/projects.tsx","components/cv/cvHeader.tsx","components/cv/cvLightDivider.tsx","components/cv/cvTitle.tsx","components/cv/cvLeftColumn.tsx","components/cv/cvRightColumn.tsx","pages/cv/cvTyler.tsx","pages/cv/cvPage.tsx","pages/discord.tsx","pages/specs.tsx","pages/external.tsx","pages/teelai.tsx","hooks/spotifyAuthenticator.tsx","hooks/spotifyErrorHandler.tsx","components/fluxify/fluxifyButtons.tsx","components/fluxify/fluxifyLoading.tsx","components/fluxify/fluxifyImages.tsx","pages/fluxify.tsx","hooks/spotifyClient.tsx","hooks/spotifyPlaylists.tsx","App.tsx","index.tsx"],"names":["containerColour","containerStyling","defaultBgColour","textColour","cvColour1","cvColour2","cvTextColour","mainContainerWidth","spacing1","spacing2","spacing3","spacing4","cvSpacing1","cvSpacing2","cvSpacing3","ifLarge","mainContainerSizeSettings","normalise","titleFontSettings","mainFontSettings","buttonHoverStyling","buttonStyling","GlobalStyling","createGlobalStyle","props","bgColour","Title","page","titleText","isOnNavbar","isNotFound","getName","TextContainer","to","styled","Link","shadows","prefixes","forEach","size","a","b","push","map","s","join","getTitleShadow","Footer","Container","Side","div","p","LoadingState","isLoaded","states","every","state","LOADED","InlineImage","path","alt","side","ImageContainer","LEFT","src","smallWidth","largeWidth","span","RIGHT","Button","button","ButtonContainer","forceHover","children","href","startsWith","style","linkStyling","onClick","target","newTab","rel","textDecoration","cursor","Page","component","this","accentColour","local","independent","onNavbar","home","notFound","link","name","toLowerCase","key","exact","homePage","notFoundPage","Divider","colour","SectionTitle","accent","SectionTitleContainer","TitleContainer","className","DividerContainer","h2","projectsPage","oldProjectLink","url","renderProject","WidgetContainer","dangerouslySetInnerHTML","__html","title","text","ProjectContainer","Spacer","ChildrenContainer","createLink","icon","noLink","LinkContainer","includes","CvHeader","HeaderContainer","SubtitleContainer","LinksContainer","h1","h3","CvLightDivider","LightDivider","CvTitle","createEntry","time","location","content","EntryContainer","EntryTitle","EntryIconContainer","EntryIcon","EntryTextContainer","CvLeftColumn","languages","sort","skills","createSection","SectionContainer","createIcons","icons","IconContainer","i","Icon","createProject","ProjectTitle","ProjectContent","CvRightColumn","ProjectsContainer","cvFilePath","cvTyler","useState","showButtons","setShowButtons","toggleButtons","filename","x","y","toPdf","targetRef","show","MainContainer","ref","ColumnContainer","LeftContainer","RightContainer","AndMoreContainer","cvPage","bulleted","renderRecord","timeAndLocation","description","RecordContainer","RecordTitleContainer","RecordTitleTextContainer","TimeAndLocationContainer","RecordContentContainer","RecordTextContainer","PreambleContainer","BulletedContainer","h4","discordPage","specsPage","TableContainer","renderRow","part","RowContainer","LeftTextContainer","RightTextContainer","githubPage","teelaiPage","scopes","getAuthUrl","w","process","getRedirect","getHashToken","cookie","accessTokenName","hash","parse","data","Array","Cookies","remove","set","getCookieToken","get","useSpotifyAuth","window","hashToken","setHashToken","cookieToken","setCookieToken","logoutCallbacks","setLogoutCallbacks","scroll_v","scroll_h","loc","history","pushState","document","pathname","search","body","scrollTop","scrollLeft","removeHash","f","useSpotifyErrorHandler","logout","error","setError","useCallback","e","UnexpectedError","response","status","message","renderFluxifyLogout","undefined","renderFluxifyLoading","LoadingContainer","LoadingIcon","stroke","TailSpin","getSpotifyImage","images","options","length","PseudoImageContainer","color","getImageStyling","rounded","img","fluxifyPage","token","client","setClient","NONE","loadUserState","setUserLoadState","loadClientState","setClientLoadState","handleError","clearError","reset","useEffect","LOADING","Client","cacheCurrentUser","ready","login","catch","useSpotifyClient","loadedClient","errorClient","resetClient","loadState","setLoadState","playlists","setPlaylists","playlistData","setPlaylistData","loadPlaylists","user","getPlaylists","items","limit","offset","loader","useSpotifyPlaylists","loadedPlaylists","errorPlaylists","resetPlaylists","loaded","list","item","getFirstTruthy","UserImageContainer","PlaylistsContainer","playlist","PlaylistContainer","PlaylistInfo","id","ErrorContainer","renderLogin","pages","getCurrentIndex","currentPageIndex","findIndex","hasLink","withRouter","pageIndex","setPageIndex","routes","filter","isLocal","console","getRoute","isIndependent","getColour","navbarButtons","index","getButton","AppContainer","Navbar","nav","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e1b2ebed.chunk.js","sourcesContent":["export const containerColour = '#252525';\r\nexport const containerBorderColour = '#FFFFFF';\r\nexport const containerStyling = `\r\n    background-color: ${containerColour};\r\n    border-color: ${containerBorderColour};\r\n    border-style: solid;\r\n    border-width: 5px;\r\n    border-radius: 16px;\r\n    box-shadow: 0px 0px 20px 6px rgba(40, 40, 40, 0.4); \r\n`;\r\n\r\nexport const defaultBgColour = '#9c9c9c';\r\n\r\nexport const textColour = '#FFFFFF';\r\n\r\nexport const cvColour1 = '#e2387c';\r\nexport const cvColour2 = '#661d3a';\r\nexport const cvTextColour = '#333333';\r\n","export const mainContainerWidth = '800px';\r\n\r\nexport const spacing0 = '4px';\r\nexport const spacing1 = '8px';\r\nexport const spacing2 = '16px';\r\nexport const spacing3 = '24px';\r\nexport const spacing4 = '32px';\r\n\r\nexport const cvSpacing0 = '0.5mm';\r\nexport const cvSpacing1 = '1mm';\r\nexport const cvSpacing2 = '2mm';\r\nexport const cvSpacing3 = '4mm';\r\nexport const cvSpacing4 = '8mm';\r\n\r\nexport const ifSmall = '@media (max-width: 768px)';\r\nexport const ifLarge = '@media (min-width: 768px)';\r\n\r\nexport const mainContainerSizeSettings = `\r\n    box-sizing: border-box;\r\n    width: 90%;\r\n    ${ifLarge} {\r\n        width: 60%;\r\n    }\r\n    max-width: ${mainContainerWidth};\r\n    margin: 0 auto;\r\n`;\r\n","// normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css\r\nexport const normalise = `\r\n    html {\r\n    line-height: 1.15; /* 1 */\r\n    -webkit-text-size-adjust: 100%; /* 2 */\r\n    }\r\n\r\n    body {\r\n    margin: 0;\r\n    }\r\n\r\n    main {\r\n    display: block;\r\n    }\r\n\r\n\r\n    h1 {\r\n    font-size: 2em;\r\n    margin: 0.67em 0;\r\n    }\r\n\r\n    hr {\r\n    box-sizing: content-box; /* 1 */\r\n    height: 0; /* 1 */\r\n    overflow: visible; /* 2 */\r\n    }\r\n\r\n    pre {\r\n    font-family: monospace, monospace; /* 1 */\r\n    font-size: 1em; /* 2 */\r\n    }\r\n\r\n    a {\r\n    background-color: transparent;\r\n    }\r\n\r\n    abbr[title] {\r\n    border-bottom: none; /* 1 */\r\n    text-decoration: underline; /* 2 */\r\n    text-decoration: underline dotted; /* 2 */\r\n    }\r\n\r\n    b,\r\n    strong {\r\n    font-weight: bolder;\r\n    }\r\n\r\n    code,\r\n    kbd,\r\n    samp {\r\n    font-family: monospace, monospace; /* 1 */\r\n    font-size: 1em; /* 2 */\r\n    }\r\n\r\n    small {\r\n    font-size: 80%;\r\n    }\r\n\r\n    sub,\r\n    sup {\r\n    font-size: 75%;\r\n    line-height: 0;\r\n    position: relative;\r\n    vertical-align: baseline;\r\n    }\r\n\r\n    sub {\r\n    bottom: -0.25em;\r\n    }\r\n\r\n    sup {\r\n    top: -0.5em;\r\n    }\r\n\r\n    img {\r\n    border-style: none;\r\n    }\r\n\r\n    button,\r\n    input,\r\n    optgroup,\r\n    select,\r\n    textarea {\r\n    font-family: inherit; /* 1 */\r\n    font-size: 100%; /* 1 */\r\n    line-height: 1.15; /* 1 */\r\n    margin: 0; /* 2 */\r\n    }\r\n\r\n    button,\r\n    input { /* 1 */\r\n    overflow: visible;\r\n    }\r\n\r\n    button,\r\n    select { /* 1 */\r\n    text-transform: none;\r\n    }\r\n\r\n    button,\r\n    [type=\"button\"],\r\n    [type=\"reset\"],\r\n    [type=\"submit\"] {\r\n    -webkit-appearance: button;\r\n    }\r\n\r\n    button::-moz-focus-inner,\r\n    [type=\"button\"]::-moz-focus-inner,\r\n    [type=\"reset\"]::-moz-focus-inner,\r\n    [type=\"submit\"]::-moz-focus-inner {\r\n    border-style: none;\r\n    padding: 0;\r\n    }\r\n\r\n    button:-moz-focusring,\r\n    [type=\"button\"]:-moz-focusring,\r\n    [type=\"reset\"]:-moz-focusring,\r\n    [type=\"submit\"]:-moz-focusring {\r\n    outline: 1px dotted ButtonText;\r\n    }\r\n\r\n    fieldset {\r\n    padding: 0.35em 0.75em 0.625em;\r\n    }\r\n\r\n    legend {\r\n    box-sizing: border-box; /* 1 */\r\n    color: inherit; /* 2 */\r\n    display: table; /* 1 */\r\n    max-width: 100%; /* 1 */\r\n    padding: 0; /* 3 */\r\n    white-space: normal; /* 1 */\r\n    }\r\n\r\n    progress {\r\n    vertical-align: baseline;\r\n    }\r\n\r\n    textarea {\r\n    overflow: auto;\r\n    }\r\n\r\n    [type=\"checkbox\"],\r\n    [type=\"radio\"] {\r\n    box-sizing: border-box; /* 1 */\r\n    padding: 0; /* 2 */\r\n    }\r\n\r\n    [type=\"number\"]::-webkit-inner-spin-button,\r\n    [type=\"number\"]::-webkit-outer-spin-button {\r\n    height: auto;\r\n    }\r\n\r\n    [type=\"search\"] {\r\n    -webkit-appearance: textfield; /* 1 */\r\n    outline-offset: -2px; /* 2 */\r\n    }\r\n\r\n    [type=\"search\"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n    }\r\n\r\n    ::-webkit-file-upload-button {\r\n    -webkit-appearance: button; /* 1 */\r\n    font: inherit; /* 2 */\r\n    }\r\n\r\n    details {\r\n    display: block;\r\n    }\r\n\r\n    summary {\r\n    display: list-item;\r\n    }\r\n\r\n    template {\r\n    display: none;\r\n    }\r\n\r\n    [hidden] {\r\n    display: none;\r\n    }\r\n`;","import { createGlobalStyle } from \"styled-components\";\r\nimport { containerColour, containerStyling, defaultBgColour, textColour } from \"./colours\";\r\nimport { ifLarge, spacing2 } from \"./dimensions\";\r\nimport { normalise } from \"./normalise\";\r\n\r\nexport const titleFont = `Fredoka One`;\r\nexport const mainFont = `Poppins`;\r\nexport const titleFontSettings = `\r\n    font-family: ${titleFont};\r\n`;\r\nexport const mainFontSettings = `\r\n    font-family: ${mainFont}, sans-serif;\r\n    font-weight: 700;\r\n    line-height: 1.5;\r\n`;\r\n\r\nexport const buttonHoverStyling = `\r\n    color: ${containerColour};\r\n    background-color: ${textColour};\r\n`;\r\nexport const buttonStyling = `\r\n    ${containerStyling}\r\n    ${mainFontSettings}\r\n\r\n    display: block;\r\n    width: 100%;\r\n    color: ${textColour};\r\n    background-color: ${containerColour};\r\n    text-align: center;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        ${buttonHoverStyling}\r\n    }\r\n`;\r\n\r\nexport const bgTransitionTime = `1s`;\r\n\r\nexport const GlobalStyling = createGlobalStyle<{ bgColour? : string }>`\r\n    ${normalise}\r\n\r\n    html {\r\n        ${mainFontSettings}\r\n        color: ${textColour};\r\n\r\n        font-size: 18px;\r\n        ${ifLarge} {\r\n            font-size: 20px;\r\n        }\r\n    }\r\n    body {\r\n        background-color: ${props => props.bgColour ?? defaultBgColour};\r\n        transition: background-color ${bgTransitionTime};\r\n    }\r\n\r\n    button {\r\n        ${buttonStyling}\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, p {\r\n        margin-top: 0;\r\n        margin-bottom: ${spacing2};\r\n    }\r\n    h1 {\r\n        font-size: 40px;\r\n    }\r\n    h2 {\r\n        font-size: 32px;\r\n    }\r\n    h3 {\r\n        font-size: 24px;\r\n    }\r\n    h4 {\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n    }\r\n\r\n    a {\r\n        color: inherit;\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Page from \"../pages/pages\"\r\nimport { textColour } from \"../utils/colours\";\r\nimport { ifLarge, mainContainerWidth } from \"../utils/dimensions\";\r\nimport { titleFontSettings } from \"../utils/globalStyling\";\r\n\r\ntype TitleProps = { page? : Page };\r\nexport default function Title({ page } : TitleProps) {\r\n    let titleText = \"Fluxanoia\";\r\n    if (typeof page !== 'undefined' && !page.isOnNavbar() && !page.isNotFound()) {\r\n        titleText = page.getName();\r\n    }\r\n    return (\r\n        <TextContainer to=\"/\">\r\n            { titleText }\r\n        </TextContainer>\r\n    );\r\n}\r\n        \r\nconst getTitleShadow = () => {\r\n    const colour = '#000';\r\n    let shadows : string[] = [];\r\n\r\n    const prefixes = ['', '-'];\r\n    ['1px'].forEach((size : string) => {\r\n        prefixes.forEach((a : string) => {\r\n            prefixes.forEach((b : string) => {\r\n                shadows.push(a + size + ' ' + b + size);\r\n            });\r\n            shadows.push(a + size + ' 0');\r\n            shadows.push('0 ' + a + size);\r\n        });\r\n    })\r\n\r\n    const size = '3px';\r\n    shadows.push('0 ' + size);\r\n    shadows.push(size + ' 0');\r\n    shadows.push(size + ' ' + size);\r\n\r\n    return shadows.map(s => s + ' 0 ' + colour).join();\r\n}\r\n\r\nconst TextContainer = styled(Link)`\r\n    display: block;\r\n\r\n    text-shadow: ${getTitleShadow()};\r\n\r\n    ${titleFontSettings}\r\n    font-size: 80px;\r\n    text-align: center;\r\n    word-wrap: break-word;\r\n    text-decoration: none !important;\r\n\r\n    max-width: ${mainContainerWidth};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n    color: ${textColour} !important;\r\n\r\n    ${ifLarge} {\r\n        font-size: 100px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { containerStyling } from \"../utils/colours\";\r\nimport { mainContainerSizeSettings, spacing1, spacing2 } from \"../utils/dimensions\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <Container>\r\n            <TextContainer>\r\n                Copyright © 2021 Fluxanoia\r\n            </TextContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    ${containerStyling}\r\n    ${mainContainerSizeSettings}\r\n    text-align: center;\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst TextContainer = styled.p`\r\n    margin: ${spacing1} 0;\r\n`;\r\n","export enum Side {\r\n    LEFT = `left`,\r\n    RIGHT = `right`\r\n};\r\nexport const flip = (side : Side) => side === Side.LEFT ? Side.RIGHT : Side.LEFT;\r\n\r\nexport enum LoadingState {\r\n    NONE,\r\n    LOADING,\r\n    LOADED,\r\n}\r\nexport const isLoaded = (...states : Array<LoadingState>) => {\r\n    return states.every(state => state === LoadingState.LOADED);\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { ifLarge, spacing1, spacing3 } from \"../utils/dimensions\";\r\nimport { flip, Side } from \"../utils/types\";\r\n\r\ntype InlineImageProps = {\r\n    path : string;\r\n    alt? : string;\r\n    side? : Side;\r\n}\r\nexport default function InlineImage({ path, alt, side } : InlineImageProps) {\r\n    return (\r\n        <ImageContainer side={ side ?? Side.LEFT }>\r\n            <img src={ path } alt={ alt ?? `` }/>\r\n        </ImageContainer>\r\n    );\r\n}\r\n\r\nconst smallWidth = `200px`;\r\nconst largeWidth = `250px`;\r\n\r\nconst ImageContainer = styled.span<{ side : Side }>`\r\n    float: ${props => props.side};\r\n\r\n    width: ${smallWidth};\r\n    ${ifLarge} {\r\n        width: ${largeWidth};\r\n    }\r\n\r\n    margin-bottom: ${spacing1};\r\n    margin-${props => flip(props.side)}: ${spacing3};\r\n\r\n    img {\r\n        border-radius: 16px;\r\n        width: ${smallWidth};\r\n        ${ifLarge} {\r\n            width: ${largeWidth};\r\n        }\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { buttonHoverStyling } from \"../utils/globalStyling\";\r\n\r\ntype ButtonProps = {\r\n    href : string | undefined;\r\n    forceHover? : boolean;\r\n    newTab? : boolean;\r\n    onClick? : () => void;\r\n    children? : React.ReactNode;\r\n}\r\nexport default function Button(props : ButtonProps) {\r\n    const button = (\r\n        <ButtonContainer forceHover={ props.forceHover ?? false }>\r\n            { props.children }\r\n        </ButtonContainer>\r\n    );\r\n    if (props.href && props.href.startsWith(`/`)) {\r\n        return (\r\n            <Link style={ linkStyling } to={ props.href } onClick={ props.onClick }>\r\n                { button }\r\n            </Link>\r\n        );\r\n    } else {\r\n        return (\r\n            <a\r\n                style={ linkStyling }\r\n                target={ props.newTab ? \"_blank\" : \"_self\" }\r\n                rel=\"noopener noreferrer\"\r\n                href={ props.href }\r\n                onClick={ props.onClick }\r\n            >\r\n                { button }\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\nconst linkStyling = {\r\n    textDecoration: 'none',\r\n    cursor: 'auto',\r\n};\r\n\r\nconst ButtonContainer = styled.button<{ forceHover : boolean }>`\r\n    ${props => props.forceHover ? buttonHoverStyling : ``}\r\n`;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/button\";\r\nimport { defaultBgColour } from \"../utils/colours\";\r\nimport { ifLarge, spacing1 } from \"../utils/dimensions\";\r\n\r\nexport const externalPage = (name : string, link : string) => {\r\n    return new Page(() => <></>, {\r\n        name: name,\r\n        link: link,\r\n        onNavbar: true,\r\n        local: false,\r\n    })\r\n}\r\n\r\ntype PageProps = {\r\n    accentColour? : string;\r\n    \r\n    name : string,\r\n    link? : string,\r\n\r\n    local? : boolean,\r\n    independent? : boolean,\r\n    \r\n    onNavbar? : boolean,\r\n    home? : boolean,\r\n    notFound? : boolean,\r\n};\r\nexport default class Page {\r\n    private component : React.ComponentType<any> | undefined;\r\n    private props : PageProps;\r\n\r\n    public constructor(component : React.ComponentType<any>, props : PageProps) {\r\n        this.component = component;\r\n        props.accentColour = props.accentColour ?? defaultBgColour;\r\n        props.local = props.local ?? true;\r\n        props.independent = props.independent ?? false;\r\n        props.onNavbar = props.onNavbar ?? false;\r\n        props.home = props.home ?? false;\r\n        props.notFound = props.notFound ?? false;\r\n        props.link = props.link ?? `/` + props.name.toLowerCase();\r\n        this.props = props;\r\n    }\r\n\r\n    public getButton(forceHover : boolean) {\r\n        return (\r\n            <ButtonContainer key={ \"link-\" + this.props.name }>\r\n                <Button href={ this.props.link ?? \"\" } forceHover={ forceHover }>\r\n                    { this.props.name }\r\n                </Button>\r\n            </ButtonContainer>\r\n        );\r\n    }\r\n    public getRoute() {\r\n        const key = \"route-\" + this.props.name;\r\n        if (this.props.notFound) return <Route key={ key } component={ this.component } />;\r\n        return <Route\r\n            key={ key }\r\n            path={ this.props.link }\r\n            exact\r\n            component={ this.component } />;\r\n    }\r\n    \r\n    public hasLink(link : string) { return link === this.props.link; }\r\n\r\n    public getComponent() { return this.component; }\r\n    public getColour() { return this.props.accentColour ?? defaultBgColour };\r\n    public getName() { return this.props.name; }\r\n    public isLocal() { return this.props.local; }\r\n    public isOnNavbar() { return this.props.onNavbar; }\r\n    public isHome() { return this.props.home; }\r\n    public isNotFound() { return this.props.notFound; }\r\n    public isIndependent() { return this.props.independent; }\r\n};\r\n\r\nconst ButtonContainer = styled.div`\r\n    flex-grow: 1;\r\n    margin: 0 0 ${spacing1} 0;\r\n    ${ifLarge} {\r\n        margin: 0 ${spacing1};\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InlineImage from \"../components/inlineImage\";\r\nimport Page from \"./pages\";\r\n\r\nexport const homePage : Page = new Page(Home, {\r\n    accentColour: \"#ff9dd9\",\r\n\r\n    name: \"Home\",\r\n    link: \"/\",\r\n\r\n    onNavbar: true,\r\n    home: true,\r\n});\r\nexport default function Home() {\r\n    return (\r\n        <TextContainer>\r\n            <InlineImage path={ `res/me.png` } />\r\n            I'm Tyler, a final-year Maths and Computer Scientist at the University of Bristol.\r\n            This website is the home of my various programming projects. <br/><br/>\r\n            I am currently working on my third-year project with\r\n            Cardmaster on the backburner (more details on the projects page).\r\n        </TextContainer>\r\n    );\r\n};\r\n\r\nconst TextContainer = styled.p``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nexport const notFoundPage : Page = new Page(NotFound, {\r\n    accentColour: \"#9c9c9c\",\r\n\r\n    name: \"Not Found\",\r\n    link: \"\",\r\n\r\n    notFound: true,\r\n});\r\nexport default function NotFound() {\r\n    return ( \r\n        <TextContainer>\r\n            Oops, did you take a wrong turn? <br />\r\n            We couldn't find anything at this URL.\r\n        </TextContainer>\r\n    );\r\n}\r\n\r\nconst TextContainer = styled.p`\r\n    text-align: center;\r\n    margin-top: ${spacing2};\r\n    margin-bottom: ${spacing2};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing0 } from \"../utils/dimensions\";\r\n\r\nexport default function Divider({ colour } : { colour? : string }) {\r\n    return (<Container colour={ colour ?? '#FFFFFF' }/>);\r\n}\r\n\r\nconst Container = styled.div<{ colour : string }>`\r\n    display: block;\r\n    content: none;\r\n    height: ${spacing0};\r\n    background-color: ${props => props.colour};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2, spacing3 } from \"../utils/dimensions\";\r\nimport Divider from \"./divider\";\r\n\r\ntype SectionTitleProps = {\r\n    accent? : boolean,\r\n    children? : React.ReactNode,\r\n}\r\nexport default function SectionTitle({ accent, children } : SectionTitleProps) {\r\n    return (\r\n        <SectionTitleContainer>\r\n            <TitleContainer className={ (accent ?? false) ? `accent` : `` }>\r\n                { children }\r\n            </TitleContainer>\r\n            <DividerContainer>\r\n                <Divider />\r\n            </DividerContainer>\r\n        </SectionTitleContainer>\r\n    );\r\n}\r\n\r\nconst SectionTitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: ${spacing3};\r\n`;\r\n\r\nconst TitleContainer = styled.h2`\r\n    margin-right: ${spacing2};\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst DividerContainer = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SectionTitle from \"../components/sectionTitle\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nconst helixUrl = `https://github.com/Fluxanoia/Helix`;\r\n\r\nconst cardmasterWidget = `\r\n    <iframe frameborder=\"0\" src=\"https://itch.io/embed/718461?dark=true\" width=\"552\" height=\"167\">\r\n        <a href=\"https://fluxanoia.itch.io/cardmaster\">\r\n            Cardmaster by Fluxanoia\r\n        </a>\r\n    </iframe>\r\n`;\r\n\r\nconst legacyCardmasterUrl = `http://www.mediafire.com/file/6m0h776pnl9hr32/Cardmaster_pre0.0.5.zip/file`;\r\nconst legacyPulseUrl = `https://www.mediafire.com/file/x2m7ffz9zgq4h9o/Pulse.zip/file`;\r\nconst legacyKotsUrl = `http://www.mediafire.com/file/q8ofirq3y8xlxoo/King_of_the_Skies_Package.zip/file`;\r\n\r\nexport const projectsPage : Page = new Page(Projects, {\r\n    accentColour: \"#77e4ff\",\r\n    name: \"Projects\",\r\n    onNavbar: true,\r\n});\r\nexport default function Projects() {\r\n    const oldProjectLink = (name : string, url : string) => {\r\n        return (\r\n            <>\r\n                &#8226; &nbsp;\r\n                <a href={ url }>\r\n                    { name }\r\n                </a>\r\n                <br />\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { renderProject(\r\n                `Helix`, \r\n                <>\r\n                    {\r\n                        `This is a graphing tool built for education as part of my final-year\r\n                        project. It is written in Python using matplotlib and sympy\r\n                        for plotting and mathematical processing. It can be found on my `\r\n                    }\r\n                    <a href={ helixUrl }>GitHub</a>\r\n                    {\r\n                        `.`\r\n                    } \r\n                </>\r\n            ) }\r\n\r\n            { renderProject(\r\n                `Cardmaster`, \r\n                `This is a game I'm working on when I can,\r\n                it started out in Java, migrated to C++ with SDL and is now on the\r\n                Godot Engine. The widget below will take you to where it's hosted.`,\r\n                <WidgetContainer dangerouslySetInnerHTML={{ __html: cardmasterWidget }} />\r\n            ) }\r\n            \r\n            { renderProject(\r\n                `www.fluxanoia.co.uk`, \r\n                `This website is built on React with Typescript and hosted on GitHub Pages.`\r\n            ) }\r\n\r\n            { renderProject(\r\n                `Legacy Downloads`, \r\n                `For nostalgia's sake, here are some links to projects that are no longer being\r\n                worked on:`,\r\n                <TextContainer>\r\n                    { oldProjectLink(`Cardmaster (C++)`, legacyCardmasterUrl) }\r\n                    { oldProjectLink(`Pulse`, legacyPulseUrl) }\r\n                    { oldProjectLink(`King of the Skies`, legacyKotsUrl) }\r\n                </TextContainer>\r\n            ) }\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderProject = (\r\n    title : string,\r\n    text : string | JSX.Element,\r\n    children? : React.ReactNode\r\n) => (\r\n    <ProjectContainer>\r\n        <SectionTitle accent>\r\n            { title }\r\n        </SectionTitle>\r\n        <TextContainer>\r\n            { text }\r\n        </TextContainer>\r\n        { children ? <Spacer /> : ``}\r\n        <ChildrenContainer>\r\n            { children }\r\n        </ChildrenContainer>\r\n    </ProjectContainer>\r\n);\r\n\r\nconst WidgetContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst ProjectContainer = styled.div`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n    height: ${spacing2};\r\n`;\r\n\r\nconst ChildrenContainer = styled.div`\r\n    margin: 0 ${spacing2};\r\n`;\r\n\r\nconst TextContainer = styled.p`\r\n    margin: 0 ${spacing2};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiOutlineGithub, AiFillPhone } from \"react-icons/ai\";\r\nimport { BiGlobe } from \"react-icons/bi\";\r\nimport { SiMailDotRu } from \"react-icons/si\";\r\nimport { FiMapPin } from \"react-icons/fi\";\r\nimport { cvSpacing2 } from \"../../utils/dimensions\";\r\nimport { cvColour1, cvColour2 } from \"../../utils/colours\";\r\n\r\nconst createLink = (icon : JSX.Element, link : string, noLink? : boolean) => {\r\n    if (noLink ?? false) {\r\n        return (\r\n            <LinkContainer>\r\n                { icon } &nbsp; <span className=\"a\">{ link }</span>\r\n            </LinkContainer>\r\n        );\r\n    }\r\n    const href = (link.includes('@')) ? `mailto:${link}` : `https://www.${link}`;\r\n    return (\r\n        <LinkContainer>\r\n            { icon } &nbsp; <a href={ href }>{ link }</a>\r\n        </LinkContainer>\r\n    );\r\n}\r\n\r\nexport default function CvHeader() {\r\n    return (\r\n        <HeaderContainer>\r\n            <TitleContainer>\r\n                Tyler Wright\r\n            </TitleContainer>\r\n            <SubtitleContainer>\r\n                Studying Maths and Computer Science at the University of Bristol\r\n            </SubtitleContainer>\r\n            <LinksContainer>\r\n                { createLink(<BiGlobe />, \"fluxanoia.co.uk\") }\r\n                { createLink(<SiMailDotRu />, \"contact@fluxanoia.co.uk\") }\r\n                { createLink(<AiFillPhone />, \"+447468 417 670\", true) }\r\n                { createLink(<AiOutlineGithub />, \"github.com/Fluxanoia\") }\r\n                { createLink(<FiMapPin />, \"Bristol and London, UK\", true) }\r\n            </LinksContainer>\r\n        </HeaderContainer>\r\n    );\r\n}\r\n\r\nconst HeaderContainer = styled.div``;\r\nconst TitleContainer = styled.h1`\r\n    color: ${cvColour1};\r\n    margin-bottom: 0;\r\n    text-transform: uppercase;\r\n`;\r\nconst SubtitleContainer = styled.h3`\r\n    color: ${cvColour2};\r\n`;\r\nconst LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\nconst LinkContainer = styled.div`\r\n    display: flex;\r\n    margin-right: ${cvSpacing2};\r\n    svg {\r\n        align-self: center;\r\n    }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { cvSpacing1 } from \"../../utils/dimensions\";\r\n\r\nexport default function CvLightDivider() {\r\n    return (<LightDivider />);\r\n}\r\n\r\nconst LightDivider = styled.div`\r\n    height: 0px;\r\n    margin-top: ${cvSpacing1};\r\n    margin-bottom: ${cvSpacing1};\r\n\r\n    border-top-color: #EEEEEE;\r\n    border-top-style: dashed;\r\n    border-top-width: 2px;\r\n`;\r\n","\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { cvColour1 } from \"../../utils/colours\";\r\nimport { cvSpacing1 } from \"../../utils/dimensions\";\r\nimport Divider from \"../divider\";\r\n\r\nexport default function CvTitle({ children } : { children : React.ReactNode }) {\r\n    return (\r\n        <TitleContainer>\r\n            <TextContainer>\r\n                { children }\r\n            </TextContainer>\r\n            <Divider colour={cvColour1} />\r\n        </TitleContainer>\r\n    );\r\n}\r\n\r\nconst TitleContainer = styled.div`\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\nconst TextContainer = styled.h1`\r\n    color: ${cvColour1};\r\n    margin-bottom: 0;\r\n    text-transform: uppercase;\r\n`;\r\n","import React from \"react\";\r\nimport { AiFillCalendar } from \"react-icons/ai\";\r\nimport { FiMapPin } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { cvColour2 } from \"../../utils/colours\";\r\nimport { cvSpacing1, cvSpacing2, cvSpacing3 } from \"../../utils/dimensions\";\r\nimport CvLightDivider from \"./cvLightDivider\";\r\nimport CvTitle from \"./cvTitle\";\r\n\r\nconst createEntry = (\r\n    title : string,\r\n    time : string,\r\n    location : string,\r\n    content : string | JSX.Element,\r\n) => {\r\n    return (\r\n        <EntryContainer>\r\n            <EntryTitle>{ title }</EntryTitle>\r\n            <EntryIconContainer>\r\n                <EntryIcon>\r\n                    <AiFillCalendar /> &nbsp; <span className=\"a\">{ time }</span>\r\n                </EntryIcon>\r\n                <EntryIcon>\r\n                    <FiMapPin /> &nbsp; <span className=\"a\">{ location }</span>\r\n                </EntryIcon>\r\n            </EntryIconContainer>\r\n            <EntryTextContainer>\r\n                { content }\r\n            </EntryTextContainer>\r\n        </EntryContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default function CvLeftColumn() {\r\n    return (\r\n        <Container>\r\n            <CvTitle>Education</CvTitle>\r\n            { createEntry(\r\n                `Maths and Computer Science (BSc)`,\r\n                `2018 to 2021`,\r\n                `University of Bristol`,\r\n                `I am currently in my third and final year with a 79% grade average in my January \r\n                examinations, and a 81% grade average over second year.\r\n                I have specialised in pure maths and practical computer science\r\n                with units like Linear Algebra 2 (97%), Group Theory (78%), Imperative and Object \r\n                Oriented Programming (81%), and Computer Graphics (84%). \r\n                However, I have also taken some theoretical computer science units, like \r\n                Language Engineering (unassessed) and Types and Lambda\r\n                Calculus (75%).`\r\n            )}\r\n            <CvLightDivider />\r\n            { createEntry(\r\n                `A Levels`,\r\n                `2016 to 2018`,\r\n                `King's College London Maths School`,\r\n                `I left with the grades A*A*A in Maths, Further Maths, and Physics, as well\r\n                as an A in AS Computer Science.`\r\n            )}\r\n            <Spacer />\r\n            <CvTitle>Experience</CvTitle>\r\n            { createEntry(\r\n                `Software Developer Intern at Ghyston`,\r\n                `August 2020 and March 2021`,\r\n                `University of Bristol`,\r\n                `Over the course of the internship, we built a fantasy NBA league single-page\r\n                app in pairs using React with Typescript, SQL, and C#. Users could input bets with\r\n                virtual currency and view their current/projected scores on the global leaderboards\r\n                or create their own subsets of player groups called leagues. In March of 2021,\r\n                I returned for a week, working on issues with their website. I fixed bugs with\r\n                Internet Explorer 11 and prototyped a smart header to assist navigation on\r\n                longer pages.`\r\n            )}\r\n            <CvLightDivider />\r\n            { createEntry(\r\n                `Academic Tutor`,\r\n                `October 2020 to June 2021`,\r\n                `University of Bristol`,\r\n                `I support two groups of first year computer scientists as a tutor, going through\r\n                weekly problem sheets and taking questions about the course and its content.\r\n                This opportunity has developed my independence, leadership, and my \r\n                ability to convey ideas to other people in an easily digestable way.`\r\n            )}\r\n            <CvLightDivider />\r\n            { createEntry(\r\n                `Open Day Steward`,\r\n                `June 2019 to September 2021`,\r\n                `University of Bristol`,\r\n                `I worked three separate days across June and September helping the University\r\n                run open days, directing people to where they wanted to be and offering advice\r\n                on my experiences. This was a great help in developing my people skills.`\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n`;\r\nconst Spacer = styled.div`\r\n    height: ${cvSpacing3};\r\n`;\r\n\r\nconst EntryContainer = styled.div`\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\nconst EntryTitle = styled.h3`\r\n    color: ${cvColour2};\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\nconst EntryIconContainer = styled.div`\r\n    display: flex;\r\n    margin-bottom: ${cvSpacing2};\r\n`;\r\nconst EntryIcon = styled.div`\r\n    display: flex;\r\n    flex: 1 1 0;\r\n    svg {\r\n        align-self: center;\r\n    }\r\n`;\r\nconst EntryTextContainer = styled.div`\r\n    margin-left: ${cvSpacing3};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { cvColour1, cvColour2 } from \"../../utils/colours\";\r\nimport { cvSpacing0, cvSpacing1, cvSpacing3 } from \"../../utils/dimensions\";\r\nimport CvTitle from \"./cvTitle\";\r\n\r\nconst languages = [\r\n    `C`,\r\n    `C++`,\r\n    `C#`,\r\n    `CSS`,\r\n    `Haskell`,\r\n    `HTML`,\r\n    `Java`,\r\n    `LaTeX`,\r\n    `R`,\r\n    `React`,\r\n    `Ruby`,\r\n    `Python`,\r\n    `Scratch`,\r\n    `Typescript`,\r\n].sort();\r\n\r\nconst skills = [\r\n    `Graphic Design`,\r\n    `Computer Building`,\r\n    `Flat-pack Furniture`,\r\n    `Leadership`,\r\n    `Video Games`,\r\n    `Teaching and Outreach`,\r\n    `Organisation`,\r\n    `Longboarding`,\r\n].sort();\r\n\r\nconst createSection = (title : string, content : string | JSX.Element) => {\r\n    return (\r\n        <>\r\n            <SectionContainer>\r\n                <CvTitle>{ title }</CvTitle>\r\n                { content }\r\n            </SectionContainer>\r\n            <Spacer />\r\n        </>\r\n    );\r\n};\r\n\r\nconst createIcons = (icons : Array<String>) => {\r\n    return (\r\n        <IconContainer>\r\n            { icons.map((i) => <Icon>{ i }</Icon>) }\r\n        </IconContainer>\r\n    );\r\n};\r\n\r\nconst createProject = (title : string, content : string) => {\r\n    return (\r\n        <ProjectContainer>\r\n            <ProjectTitle>{ title }</ProjectTitle>\r\n            <ProjectContent>{ content }</ProjectContent>\r\n        </ProjectContainer>\r\n    );\r\n}\r\n\r\nexport default function CvRightColumn() {\r\n    return (\r\n        <Container>\r\n            { createSection(`About`,\r\n                <p>\r\n                    { \r\n                        `I started to program back in Year 9, where I taught myself Java. I\r\n                        developed a 2D fighting game over the course of Years 10 and 11, leading\r\n                        me to be the first at my school to ever take a computer science GCSE.\r\n                        I continued creating throughout college and university with a Tetris clone,\r\n                        a raytraced renderer written in C++, a game demo called Cardmaster, and a\r\n                        graphing software called Helix (available on my GitHub).` \r\n                    }\r\n                    <br /><br />\r\n                    {\r\n                        `I also have a deep interest in teaching, taking part in multiple teaching\r\n                        assistant and tutor roles at my sixth form college and university.`\r\n                    }\r\n                </p>\r\n            )}\r\n            { createSection(`Languages`, createIcons(languages)) }\r\n            { createSection(`Skills and Interests`, createIcons(skills)) }\r\n            { createSection(`Projects`,\r\n                <ProjectsContainer>\r\n                    { createProject(`Helix`, \r\n                        `This is a graphing tool built for education as part of my final-year\r\n                        project. It is written in Python using matplotlib and sympy\r\n                        for plotting and mathematical processing.`) }\r\n                    { createProject(`fluxanoia.co.uk`, \r\n                        `This is my personal website, built on React with Typescript and\r\n                        hosted on GitHub pages.`) }\r\n                </ProjectsContainer>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n`;\r\nconst Spacer = styled.div`\r\n    height: ${cvSpacing3};\r\n`;\r\n\r\nconst SectionContainer = styled.div`\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\nconst Icon = styled.div`\r\n    margin: 1px;\r\n    padding: 1px ${cvSpacing1};\r\n    border-style: solid;\r\n    border-color: ${cvColour1};\r\n    border-width: ${cvSpacing0};\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst ProjectsContainer = styled.div``;\r\nconst ProjectContainer = styled.div``;\r\nconst ProjectTitle = styled.h3`\r\n    color: ${cvColour2};\r\n    margin-bottom: ${cvSpacing1};\r\n`;\r\nconst ProjectContent = styled.p`\r\n    margin-left: ${cvSpacing3};\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport Pdf from \"react-to-pdf\";\r\nimport { cvColour1, cvTextColour } from \"../../utils/colours\";\r\nimport { mainFontSettings } from \"../../utils/globalStyling\";\r\nimport { normalise } from \"../../utils/normalise\";\r\nimport Page from \"../pages\";\r\nimport CvHeader from \"../../components/cv/cvHeader\";\r\nimport CvLeftColumn from \"../../components/cv/cvLeftColumn\";\r\nimport CvRightColumn from \"../../components/cv/cvRightColumn\";\r\nimport { cvSpacing2, cvSpacing3, spacing1, spacing2 } from \"../../utils/dimensions\";\r\nimport CvTitle from \"../../components/cv/cvTitle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const cvFilePath = \"/cv/tyler\";\r\nexport const cvTyler : Page = new Page(CvPdf, {\r\n    name: \"CV\",\r\n    link: cvFilePath,\r\n    independent: true,\r\n});\r\nexport default function CvPdf() {\r\n    const [showButtons, setShowButtons] = useState(true);\r\n\r\n    const toggleButtons = () => setShowButtons(b => !b);\r\n\r\n    return (\r\n        <Pdf filename=\"CV - Tyler Wright\" x={-2} y={-2}>\r\n            {({toPdf, targetRef} : PdfParams) =>  (\r\n                <>\r\n                    <ButtonContainer show={showButtons}>\r\n                        <Link to={ \"/cv\" }>\r\n                            <Button show={showButtons}>\r\n                                Back to fluxanoia.co.uk\r\n                            </Button>\r\n                        </Link>\r\n                        <Button onClick={toPdf} show={showButtons}>\r\n                            Download as PDF\r\n                        </Button>\r\n                        <Button onClick={toggleButtons}>\r\n                            { showButtons ? `Hide Buttons` : `Show Buttons` }\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                    <MainContainer ref={targetRef}>\r\n                        <GlobalStyling />\r\n                        <CvHeader />\r\n                        <ColumnContainer>\r\n                            <LeftContainer>\r\n                                <CvLeftColumn />\r\n                            </LeftContainer>\r\n                            <RightContainer>\r\n                                <CvRightColumn />\r\n                            </RightContainer>\r\n                        </ColumnContainer>\r\n                        <CvTitle>...and more</CvTitle>\r\n                        <AndMoreContainer>\r\n                            A web version of this CV and much more information about my projects\r\n                            and experience is available\r\n                            at <Link to={ \"/cv\" }>fluxanoia.co.uk/cv</Link>. <br />\r\n                            References are available upon request.\r\n                        </AndMoreContainer>\r\n                    </MainContainer>\r\n                </>\r\n            )}\r\n        </Pdf>\r\n    );\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 210mm;\r\n    height: 297mm;\r\n\r\n    box-sizing: border-box;\r\n    margin: auto;\r\n    padding: ${cvSpacing3};\r\n\r\n    color: ${cvTextColour};\r\n`;\r\nconst ColumnContainer = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    padding: ${cvSpacing3} 0;\r\n`;\r\nconst LeftContainer = styled.div`\r\n    margin-right: ${cvSpacing3};\r\n\r\n    flex: 10 0 0;\r\n    height: 100%;\r\n`;\r\nconst RightContainer = styled.div`\r\n    flex: 6 0 0;\r\n    height: 100%;\r\n`;\r\nconst AndMoreContainer = styled.p``;\r\n\r\nconst ButtonContainer = styled.div<{ show : boolean }>`\r\n    position: fixed;\r\n    top: ${spacing2};\r\n    right: ${spacing2};\r\n    font-size: 18px;\r\n\r\n    transform: translateY(${props => props.show ? `0%`: `-120px`});\r\n    transition: transform 1s;\r\n`;\r\nconst Button = styled.div<{ show? : boolean }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    height: 48px;\r\n    padding: 0 ${spacing1};\r\n    margin-bottom: ${spacing1};\r\n    box-sizing: border-box;\r\n    \r\n    text-align: center;\r\n\r\n    border-width: 4px;\r\n    border-style: solid;\r\n    border-radius: 16px;\r\n    box-shadow: 0px 0px 20px 6px rgba(40, 40, 40, ${props => (props.show ?? true) ? `0.4` : `0`}); \r\n\r\n    transition: box-shadow 1s;\r\n\r\n    color: #FFFFFF;\r\n    background-color: ${cvTextColour};\r\n    border-color: #FFFFFF;\r\n    &:hover {\r\n        color: ${cvTextColour};\r\n        background-color: #FFFFFF;\r\n        border-color: ${cvTextColour};\r\n    }\r\n    \r\n`;\r\n\r\nexport const GlobalStyling = createGlobalStyle`\r\n    ${normalise}\r\n\r\n    html {\r\n        ${mainFontSettings}\r\n        font-size: 12px;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, p {\r\n        margin-top: 0;\r\n        margin-bottom: ${cvSpacing2};\r\n    }\r\n    h1 {\r\n        font-size: 24px;\r\n    }\r\n    h2 {\r\n        font-size: 20px;\r\n    }\r\n    h3 {\r\n        font-size: 16px;\r\n    }\r\n    h4 {\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n    }\r\n\r\n    a, .a {\r\n        color: ${cvColour1};\r\n        text-decoration: none;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport SectionTitle from \"../../components/sectionTitle\";\r\nimport { spacing1, spacing2, spacing4 } from \"../../utils/dimensions\";\r\nimport Page from \"../pages\";\r\nimport { cvFilePath } from \"./cvTyler\";\r\n\r\nexport const cvPage : Page = new Page(Cv, {\r\n    accentColour: \"#ca89ff\",\r\n    name: \"CV\",\r\n    onNavbar: true,\r\n});\r\nexport default function Cv() {\r\n    const bulleted = (text : string) => (<>&#8226; &nbsp; { text } <br /></>);\r\n\r\n    const renderRecord = (\r\n        title : string,\r\n        timeAndLocation : string,\r\n        description : string,\r\n        children? : React.ReactNode,\r\n    ) => {\r\n        return ( \r\n            <RecordContainer>\r\n                <RecordTitleContainer>\r\n                    &#8226; &nbsp;\r\n                    <RecordTitleTextContainer className=\"accent\">\r\n                        { title }\r\n                    </RecordTitleTextContainer>\r\n                </RecordTitleContainer>\r\n                <TimeAndLocationContainer>\r\n                    { timeAndLocation }\r\n                </TimeAndLocationContainer>\r\n                <RecordContentContainer>\r\n                    <RecordTextContainer>\r\n                        { description }\r\n                    </RecordTextContainer>\r\n                    { children }\r\n                </RecordContentContainer>\r\n            </RecordContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PreambleContainer>\r\n                My CV is available to view and download <Link to={ cvFilePath }>here</Link>.\r\n                However, I can't fit all my education and experience on it, so I have added it all\r\n                below for those interested.\r\n                <br /><br />\r\n                References are available upon request.\r\n            </PreambleContainer>\r\n            \r\n            <SectionTitle>Experience</SectionTitle>\r\n            \r\n            { renderRecord(\r\n                `Software Developer Intern`,\r\n                `Ghyston, Mar 2021`,\r\n                `I worked on issues with Ghyston's website, fixing bugs with\r\n                Internet Explorer 11 and prototyping a smart header to assist navigation on\r\n                longer pages.`\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `Academic Tutor`,\r\n                `University of Bristol, Oct 2020 to Jun 2021`,\r\n                `I support two groups of first year computer scientists as a tutor, going through\r\n                weekly problem sheets and taking questions about the course and its content.\r\n                This opportunity has developed my independence, leadership, and my \r\n                ability to convey ideas to other people in an easily digestable way.`\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `Academic Talks Officer for the Computer Science Society`,\r\n                `University of Bristol, Jun 2020 to Jun 2021`,\r\n                `I organise internal talks for the society, as well as supporting the \r\n                society wherever I may be needed.`\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `Software Developer Intern`,\r\n                `Ghyston, Aug 2020`,\r\n                `Over the course of the internship, we built a fantasy NBA league \r\n                single-page app in pairs using React with Typescript, SQL, and C#.\r\n                Users could input bets with virtual currency\r\n                and view their current/projected scores on the global leaderboards\r\n                or create their own subsets of player groups called leagues.`\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `Teaching Assistant`,\r\n                `University of Bristol, Jan 2020 to Jun 2021`,\r\n                `I work as teaching assistant on a Java programming\r\n                unit for Masters conversion students, as well as\r\n                a first-year algorithms unit.`\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `President of the Maths and Computer Science Society`,\r\n                `University of Bristol, Nov 2019 to Jun 2020`,\r\n                `I founded and was the president of the Maths and\r\n                Computer Science society, running many internal talks for\r\n                all interested.`\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `Open Day Steward`,\r\n                `University of Bristol, Jun 2019 to Sep 2019`,\r\n                `I worked three separate days across June and September \r\n                helping the University run the open days.`\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `Student Ambassador`,\r\n                `King's College London Maths School, Jul 2019`,\r\n                `I worked as a student ambassador during the KCLMS Physics+ \r\n                summer school, giving students heading into Year 12 an insight\r\n                into A Level physics.`\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `Volunteer Student Ambassador`,\r\n                `King's College London Maths School, Jul 2018`,\r\n                `I worked as a volunteer student ambassador during the KCLMS \r\n                summer school where we helped soon-to-be Year 11's develop their\r\n                problem solving and mathematical skills.`\r\n            ) }\r\n            \r\n            <SectionTitle>Education</SectionTitle>\r\n\r\n            { renderRecord(\r\n                `University of Bristol`,\r\n                `Maths and Computer Science BSc, Sep 2018 to Jun 2021`,\r\n                `My average score for each year is below,\r\n                followed by the weighting of that year in parentheses:`,\r\n                <BulletedContainer>\r\n                    { bulleted(`First Year - 83% (0%)`) }\r\n                    { bulleted(`Second Year - 81% (25%)`) }\r\n                    { bulleted(`Third Year (January Examinations) - 79% (75%)`) }\r\n                </BulletedContainer>\r\n            ) }\r\n\r\n            { renderRecord(\r\n                `King's College London Maths School (KCLMS)`,\r\n                `Sep 2016 to Jun 2018`,\r\n                `I left KCLMS with the following qualifications:`,\r\n                <BulletedContainer>\r\n                    { bulleted(`A* in MEI Maths (A2)`) }\r\n                    { bulleted(`A* in MEI Further Maths (A2)`) }\r\n                    { bulleted(`A in OCR B Physics (A2)`) }\r\n                    { bulleted(`A in AQA Computer Science (AS)`) }\r\n                </BulletedContainer>\r\n            ) }\r\n        </>\r\n    );\r\n}\r\n\r\nconst PreambleContainer = styled.p``;\r\n\r\nconst BulletedContainer = styled.p`\r\n    margin: 0 ${spacing2};\r\n`;\r\n\r\nconst RecordContainer = styled.div`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst RecordTitleContainer = styled.h3`\r\n    margin-bottom: ${spacing1};\r\n`;\r\nconst RecordTitleTextContainer = styled.span``;\r\n\r\nconst TimeAndLocationContainer = styled.h4`\r\n    margin-left: ${spacing4};\r\n`;\r\n\r\nconst RecordContentContainer = styled.div`\r\n    margin: 0 ${spacing4};\r\n`;\r\n\r\nconst RecordTextContainer = styled.p``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nexport const discordPage : Page = new Page(Discord, {\r\n    accentColour: \"#949fff\",\r\n    name: \"Discord\",\r\n});\r\nexport default function Discord() {\r\n    return (\r\n        <TextContainer>\r\n            The Teelai Association Discord server can be accessed via the \r\n            link <a href=\"https://discord.gg/ZfQn768\">here</a>.\r\n        </TextContainer>\r\n    );\r\n}\r\n\r\nconst TextContainer = styled.p`\r\n    text-align: center;\r\n    margin-top: ${spacing2};\r\n    margin-bottom: ${spacing2};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SectionTitle from \"../components/sectionTitle\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nexport const specsPage : Page = new Page(Specs, {\r\n    accentColour: \"#ffbe89\",\r\n    name: \"Specs\",\r\n});\r\nexport default function Specs() {\r\n    return (\r\n        <>\r\n            <SectionTitle accent>Computer Specs</SectionTitle>\r\n            \r\n            <TableContainer>\r\n                { renderRow(\"Motherboard\", \"Asus ROG STRIX B350-F\") }\r\n                { renderRow(\"CPU\", \"AMD Ryzen 7 1700\") }\r\n                { renderRow(\"GPU\", \"MSI GTX 1070 ARMOR\") }\r\n                { renderRow(\"RAM\", \"Ballistix Elite 16GB\") }\r\n                { renderRow(\"PSU\", \"EVGA SuperNOVA 550 G2\") }\r\n                { renderRow(\"Case\", \"Corsair Carbide Series 330R\") }\r\n                { renderRow(\"CPU Cooler\", \"ARCTIC Alpine 64 Pro\") }\r\n            </TableContainer>\r\n\r\n            <SectionTitle accent>Peripherals</SectionTitle>\r\n\r\n            <TableContainer>\r\n                { renderRow(\"Mouse\", \"Logitech MX Master\") }\r\n                { renderRow(\"Mouse (Gaming)\", \"Steelseries Rival 110\") }\r\n                { renderRow(\"Keyboard\", \"Logitech G815 (Tactile)\") }\r\n                { renderRow(\"Keyboard (Other)\", \"Ducky One\") }\r\n                { renderRow(\"Headphones\", \"AKG K240 MkII\") }\r\n                { renderRow(\"Microphone\", \"Audio Technica AT2020\") }\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nconst renderRow = (part : string, name : string) => {\r\n    return (\r\n        <RowContainer>\r\n            <LeftTextContainer>{ part }</LeftTextContainer>\r\n            <RightTextContainer>{ name }</RightTextContainer>\r\n        </RowContainer>\r\n    );\r\n}\r\n\r\nconst TableContainer = styled.div`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst RowContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst LeftTextContainer = styled.div`\r\n    align-text: left;\r\n    flex: 0 0 25%;\r\n`;\r\n\r\nconst RightTextContainer = styled.div`\r\n    align-text: right;\r\n    flex: 1 0 0;\r\n    margin-left: 20px;\r\n`;\r\n","import Page, { externalPage } from \"./pages\";\r\n\r\nexport const githubPage : Page = externalPage(\"GitHub\", \"https://github.com/Fluxanoia\");\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\n\r\nconst playlistWidget = `\r\n    <iframe src=\"https://open.spotify.com/embed/playlist/3MER32HK7y9bTcUFbTHZ13\"\r\n        width=\"100%\"\r\n        height=\"400\"\r\n        frameborder=\"0\"\r\n        allowtransparency=\"true\"\r\n        allow=\"encrypted-media\">\r\n    </iframe>\r\n`;\r\n\r\nexport const teelaiPage : Page = new Page(Teelai, {\r\n    accentColour: \"#FF74D9\",\r\n    name: \"Teelai\",\r\n});\r\nexport default function Teelai() {\r\n    return (\r\n        <WidgetContainer dangerouslySetInnerHTML={{ __html: playlistWidget }} />\r\n    );\r\n}\r\n\r\nconst WidgetContainer = styled.div`\r\n    margin: ${spacing2};\r\n`;","import Cookies from \"js-cookie\";\r\nimport { parse } from \"query-string\";\r\nimport { useState } from \"react\";\r\n\r\nconst scopes = [\r\n    `playlist-modify-public`,\r\n    `playlist-read-private`,\r\n    `playlist-modify-private`,\r\n    `user-library-read`,\r\n    `user-library-modify`,\r\n    `user-read-email`,\r\n    `user-read-private`,\r\n];\r\n\r\nexport const getRedirect = (w : Window) => {\r\n    return (typeof w !== \"undefined\") ? w.location.href : \"https://fluxanoia.co.uk/fluxify\";\r\n}\r\nexport const getAuthUrl = (w : Window) => {\r\n    return (\r\n        `https://accounts.spotify.com/authorize?response_type=token` +\r\n        `&client_id=${process.env.REACT_APP_SPOTIFY_PUBLIC}` +\r\n        `&scope=${scopes.join('%20')}` +\r\n        `&redirect_uri=${getRedirect(w)}` +\r\n        '&show_dialog=false'\r\n    )\r\n}\r\n\r\nexport const removeHash = (w : Window) => {\r\n    if (typeof w !== \"undefined\") {\r\n        var scroll_v, scroll_h, loc = w.location;\r\n        if (\"pushState\" in w.history)\r\n            w.history.pushState(\"\", document.title, loc.pathname + loc.search);\r\n        else {\r\n            scroll_v = document.body.scrollTop;\r\n            scroll_h = document.body.scrollLeft;\r\n            loc.hash = \"\";\r\n            document.body.scrollTop = scroll_v;\r\n            document.body.scrollLeft = scroll_h;\r\n        }\r\n    }\r\n}\r\n\r\nconst getHashToken = (w : Window) => {\r\n    const cookie = process.env.REACT_APP_SPOTIFY_COOKIE;\r\n    const accessTokenName = process.env.REACT_APP_SPOTIFY_ACCESS_TOKEN_KEY;\r\n    if (typeof w !== \"undefined\" && cookie && accessTokenName) {\r\n        const hash = parse(w.location.hash);\r\n        if (accessTokenName in hash) {\r\n            const data = hash[accessTokenName];\r\n            if (data && !(data instanceof Array)) {\r\n                Cookies.remove(cookie);\r\n                Cookies.set(cookie, data);\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\nexport const getCookieToken = () => {\r\n    const cookie = process.env.REACT_APP_SPOTIFY_COOKIE;\r\n    return cookie ? Cookies.get(cookie) ?? null : null;\r\n};\r\n\r\nexport default function useSpotifyAuth() \r\n    : [string | null, () => void, React.Dispatch<React.SetStateAction<(() => void)[]>>] {\r\n    const [hashToken, setHashToken] = useState(getHashToken(window));\r\n    const [cookieToken, setCookieToken] = useState(getCookieToken());\r\n    const [logoutCallbacks, setLogoutCallbacks] = useState<Array<() => void>>([]);\r\n\r\n    removeHash(window);\r\n\r\n    const logout = () => {\r\n        const cookie = process.env.REACT_APP_SPOTIFY_COOKIE;\r\n        if (cookie) Cookies.remove(cookie);\r\n        setHashToken(getHashToken(window));\r\n        setCookieToken(getCookieToken());\r\n        for (const f of logoutCallbacks) f();\r\n    }\r\n\r\n    return [hashToken ?? cookieToken, logout, setLogoutCallbacks];\r\n}\r\n","import { useCallback, useState } from \"react\";\r\nimport { UnexpectedError } from \"spotify-api.js\";\r\n\r\nexport default function useSpotifyErrorHandler(logout : () => void) \r\n    : [string | null, (e : Error) => void, () => void] {\r\n    const [error, setError] = useState<string | null>(null);\r\n    \r\n    const handleError = useCallback((e : Error) => {\r\n        if (e instanceof UnexpectedError && e.response) {\r\n            if (e.response.status === 404) return;\r\n            if (e.response.status === 401) {\r\n                logout();\r\n                return;\r\n            }\r\n        }\r\n        setError(`${e.name}: ${e.message}`);\r\n    }, [setError, logout]);\r\n    \r\n    const clearError = useCallback(() => {\r\n        setError(null)\r\n    }, [setError]);\r\n\r\n    return [error, handleError, clearError]\r\n}\r\n","import React from \"react\";\r\nimport { getAuthUrl } from \"../../hooks/spotifyAuthenticator\";\r\nimport Button from \"../button\";\r\n\r\nexport const renderFluxifyLogin = (w : Window) => {\r\n    return (\r\n        <Button href={ getAuthUrl(w) }>\r\n            Log-in with Spotify\r\n        </Button>\r\n    );       \r\n}\r\nexport const renderFluxifyLogout = (logout : () => void) => {\r\n    return (\r\n        <Button href={ undefined } onClick={ logout }>\r\n            { `Log-out` }\r\n        </Button>\r\n    );       \r\n}","import React from \"react\";\r\nimport { TailSpin } from \"react-loading-icons\";\r\nimport styled from \"styled-components\";\r\nimport { textColour } from \"../../utils/colours\";\r\nimport { spacing2 } from \"../../utils/dimensions\";\r\n\r\nexport const renderFluxifyLoading = () => {\r\n    return (\r\n        <LoadingContainer>\r\n            <LoadingIcon stroke={ textColour }></LoadingIcon>\r\n        </LoadingContainer>\r\n    );\r\n}\r\n\r\nconst LoadingContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst LoadingIcon = styled(TailSpin)`\r\n    margin: ${spacing2} 0;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Image } from \"spotify-api.js\";\r\nimport { BsMusicNoteBeamed } from \"react-icons/bs\";\r\nimport { containerColour, textColour } from \"../../utils/colours\";\r\n\r\ntype ImageOptions = {\r\n    size? : string;\r\n    rounded? : boolean,\r\n}\r\nexport const getSpotifyImage = (images : Array<Image>, options? : ImageOptions) => {\r\n    options = options ?? {};\r\n    return (\r\n        images.length === 0 ? (\r\n            <PseudoImageContainer {...options}>\r\n                <BsMusicNoteBeamed color={ containerColour } />\r\n            </PseudoImageContainer>\r\n        ) : (\r\n            <ImageContainer src={ images[0].url } {...options}/>\r\n        )\r\n    );\r\n}\r\nconst getImageStyling = (options : ImageOptions) => {\r\n    return (`\r\n        width: ${options.size ?? `64px`};\r\n        height: ${options.size ?? `64px`};\r\n        ${ options.rounded ? `border-radius: 16px;` : `` }\r\n    `);\r\n}\r\nconst PseudoImageContainer = styled.div<ImageOptions>`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${textColour};\r\n    ${ props => getImageStyling(props) }\r\n`;\r\nconst ImageContainer = styled.img<ImageOptions>`${ props => getImageStyling(props) }`;","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ifSmall, spacing1, spacing2 } from \"../utils/dimensions\";\r\nimport Page from \"./pages\";\r\nimport { Playlist } from \"spotify-api.js\";\r\nimport { textColour } from \"../utils/colours\";\r\nimport useSpotifyAuth from \"../hooks/spotifyAuthenticator\";\r\nimport useSpotifyPlaylists from \"../hooks/spotifyPlaylists\";\r\nimport useSpotifyClient from \"../hooks/spotifyClient\";\r\nimport { renderFluxifyLogin, renderFluxifyLogout } from \"../components/fluxify/fluxifyButtons\";\r\nimport { renderFluxifyLoading } from \"../components/fluxify/fluxifyLoading\";\r\nimport { getSpotifyImage } from \"../components/fluxify/fluxifyImages\";\r\n\r\nexport const getFirstTruthy = <T,>(...list : Array<T | null>) => {\r\n    for (const item of list) if (item) return item;\r\n    return null;\r\n}\r\n\r\nexport const fluxifyPage : Page = new Page(Fluxify, {\r\n    accentColour: \"#FF74D9\",\r\n    name: \"Fluxify\",\r\n});\r\nexport default function Fluxify() {\r\n    const [token, logout, setLogoutCallbacks] = useSpotifyAuth();\r\n    const [client, loadedClient, errorClient, resetClient] = useSpotifyClient(token, logout);\r\n    const [\r\n        playlists,\r\n        playlistData,\r\n        loadedPlaylists,\r\n        errorPlaylists,\r\n        resetPlaylists\r\n    ] = useSpotifyPlaylists(\r\n        token, logout, client\r\n    );\r\n\r\n    useEffect(() => {\r\n        setLogoutCallbacks([resetClient, resetPlaylists])\r\n    }, [setLogoutCallbacks, resetClient, resetPlaylists]);\r\n\r\n    const renderApp = () => {\r\n        if (!client || !playlists) {\r\n            return renderFluxifyLoading();\r\n        }\r\n\r\n        const renderPlaylist = (playlist : Playlist) => {\r\n            return (\r\n                <PlaylistContainer key={ playlist.id }>\r\n                    { getSpotifyImage(playlist.images) }\r\n                    <PlaylistInfo>\r\n                        { playlist.name }\r\n                    </PlaylistInfo>\r\n                </PlaylistContainer>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <HeaderContainer>\r\n                    <UserImageContainer>\r\n                        { getSpotifyImage(client.user.images, { rounded : true }) }\r\n                    </UserImageContainer>\r\n                    <TitleContainer>\r\n                        { `${client.user.name}` }\r\n                    </TitleContainer>\r\n                </HeaderContainer>\r\n                <PlaylistsContainer>\r\n                    { playlists.map(renderPlaylist) }\r\n                </PlaylistsContainer>\r\n                <ButtonContainer>\r\n                    { renderFluxifyLogout(logout) }\r\n                </ButtonContainer>\r\n            </>\r\n            \r\n        );\r\n    }\r\n    const renderLogin = () => {\r\n        return (\r\n            <>\r\n                <TextContainer>\r\n                    This app requires you to log into Spotify:\r\n                </TextContainer>\r\n                <ButtonContainer>\r\n                    { renderFluxifyLogin(window) }\r\n                </ButtonContainer>\r\n            </>\r\n        ); \r\n    }\r\n    const renderError = () => {\r\n        return (\r\n            <>\r\n                <ErrorContainer>\r\n                    { `${error ?? \"Unhandled exception.\"}.` }\r\n                </ErrorContainer>\r\n                <ButtonContainer>\r\n                    { renderFluxifyLogout(logout) }\r\n                </ButtonContainer>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const loaded = [loadedClient, loadedPlaylists].every(x => x);\r\n    const error = getFirstTruthy(errorClient, errorPlaylists);\r\n    if (!token) {\r\n        return renderLogin();\r\n    } else if (loaded) {\r\n        return renderApp();\r\n    } else if (error) {\r\n        return renderError();\r\n    } else {\r\n        return renderFluxifyLoading();\r\n    }\r\n}\r\n\r\nconst HeaderContainer = styled.div`\r\n    display: flex;\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst UserImageContainer = styled.div`\r\n    margin-right: ${spacing2};\r\n    ${ifSmall} {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst TitleContainer = styled.h1`\r\n    margin: 0px;\r\n`;\r\n\r\nconst PlaylistsContainer = styled.div`\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst PlaylistContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: ${spacing1};\r\n    padding: ${spacing1};\r\n\r\n    border: 5px solid ${textColour};\r\n`;\r\n\r\nconst PlaylistInfo = styled.div`\r\n    margin-left: ${spacing2};\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n`;\r\n\r\nconst TextContainer = styled.p`\r\n    text-align: center;\r\n    margin-bottom: ${spacing2};\r\n`;\r\n\r\nconst ErrorContainer = styled.div`\r\n    align-text: center;\r\n`;\r\n\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport Client from \"spotify-api.js\";\r\nimport { LoadingState, isLoaded } from \"../utils/types\";\r\nimport useSpotifyErrorHandler from \"./spotifyErrorHandler\";\r\n\r\nexport default function useSpotifyClient(token : string | null, logout : () => void) \r\n    : [Client | null, boolean, string | null, () => void] {\r\n    const [client, setClient] = useState<Client | null>(null);\r\n    const [loadUserState, setUserLoadState] = useState(LoadingState.NONE);\r\n    const [loadClientState, setClientLoadState] = useState(LoadingState.NONE);\r\n    const [error, handleError, clearError] = useSpotifyErrorHandler(logout);\r\n\r\n    const reset = useCallback(() => {\r\n        clearError();\r\n        setClient(null);\r\n        setUserLoadState(LoadingState.NONE);\r\n        setClientLoadState(LoadingState.NONE);\r\n    }, [clearError, setClient]);\r\n\r\n    useEffect(() => {\r\n        if (token\r\n            && loadUserState === LoadingState.NONE\r\n            && loadClientState === LoadingState.NONE) {\r\n            (async () => {\r\n                setClientLoadState(LoadingState.LOADING);\r\n                setUserLoadState(LoadingState.LOADING);\r\n                const client = new Client(token, {\r\n                    cacheCurrentUser: true,\r\n                    ready: () => { setUserLoadState(LoadingState.LOADED) },\r\n                });\r\n                await client.login(token).catch(handleError);\r\n                setClient(client);\r\n            })();\r\n            return () => setClientLoadState(LoadingState.LOADED);\r\n        }\r\n    }, [\r\n        token,\r\n        loadUserState,\r\n        setUserLoadState,\r\n        loadClientState,\r\n        setClientLoadState,\r\n        handleError,\r\n        setClient,\r\n    ]);\r\n\r\n    return [client, isLoaded(loadUserState, loadClientState), error, reset]\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport Client, { Playlist, UnexpectedError } from \"spotify-api.js\";\r\nimport { isLoaded, LoadingState } from \"../utils/types\";\r\nimport useSpotifyErrorHandler from \"./spotifyErrorHandler\";\r\n\r\ntype PlaylistData = { \r\n    limit : number,\r\n    offset : number,\r\n}\r\n\r\nexport default function useSpotifyPlaylists(\r\n    token : string | null,\r\n    logout : () => void,\r\n    client : Client | null,\r\n) : [Array<Playlist> | null, PlaylistData | null, boolean, string | null, () => void] {\r\n    const [loadState, setLoadState] = useState(LoadingState.NONE);\r\n    const [playlists, setPlaylists] = useState<Array<Playlist> | null>(null);\r\n    const [playlistData, setPlaylistData] = useState<PlaylistData | null>(null);\r\n    const [error, handleError, clearError] = useSpotifyErrorHandler(logout);\r\n\r\n    const reset = useCallback(() => {\r\n        clearError();\r\n        setPlaylists(null);\r\n        setPlaylistData(null);\r\n        setLoadState(LoadingState.NONE);\r\n    }, [clearError, setPlaylists, setPlaylistData, setLoadState]);\r\n\r\n    const loadPlaylists = useCallback(async (client : Client) => {\r\n        const data = await client.user.getPlaylists().catch(handleError);\r\n        if (data) {\r\n            setPlaylists(data.items);\r\n            setPlaylistData({\r\n                limit: data.limit,\r\n                offset: data.offset,\r\n            });\r\n        } else {\r\n            handleError(new UnexpectedError(\"Failed to load data.\"));\r\n        }\r\n    }, [handleError, setPlaylists, setPlaylistData])\r\n\r\n    useEffect(() => {\r\n        if (token && client && loadState === LoadingState.NONE) {\r\n            (async () => {\r\n                setLoadState(LoadingState.LOADING);\r\n                const loaders = [loadPlaylists];\r\n                for (const loader of loaders) await loader(client);\r\n            })();\r\n            return () => setLoadState(LoadingState.LOADED);\r\n        }\r\n    }, [token, client, loadState, setLoadState, loadPlaylists]);\r\n\r\n    return [playlists, playlistData, isLoaded(loadState), error, reset];\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport { History, LocationState, Location } from 'history';\nimport { Switch, withRouter } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { bgTransitionTime, GlobalStyling } from \"./utils/globalStyling\";\nimport Page from \"./pages/pages\";\nimport Title from \"./components/title\";\nimport Footer from \"./components/footer\";\nimport { containerStyling } from \"./utils/colours\";\nimport { ifLarge, mainContainerSizeSettings, spacing2, spacing3 } from \"./utils/dimensions\";\nimport { homePage } from \"./pages/home\";\nimport { notFoundPage } from \"./pages/notFound\";\nimport { projectsPage } from \"./pages/projects\";\nimport { cvPage } from \"./pages/cv/cvPage\";\nimport { discordPage } from \"./pages/discord\";\nimport { specsPage } from \"./pages/specs\";\nimport { githubPage } from \"./pages/external\";\nimport { cvTyler } from \"./pages/cv/cvTyler\";\nimport { teelaiPage } from \"./pages/teelai\";\nimport { fluxifyPage } from \"./pages/fluxify\";\n\nconst pages : Array<Page> = [\n    homePage,\n    projectsPage,\n    cvPage,\n    githubPage,\n    discordPage,\n    specsPage,\n    teelaiPage,\n\n    cvTyler,\n\n    fluxifyPage,\n\n    notFoundPage,\n];\nconst getNotFoundIndex = () => pages.findIndex(p => p.isNotFound());\nconst getCurrentIndex = (link : string) => {\n    let currentPageIndex = pages.findIndex(p => p.hasLink(link));\n    return (currentPageIndex < 0) ? getNotFoundIndex() : currentPageIndex;\n};\n\ntype AppProps = {\n    history  : History<LocationState>,\n    location : Location<LocationState>;\n}\nconst App = (props : AppProps) => {\n    const [pageIndex, setPageIndex] = useState<number>(getCurrentIndex(props.location.pathname));\n\n    useEffect(() => {\n        let currentPageIndex = getCurrentIndex(props.location.pathname);\n        document.title = \"Fluxanoia | \" + pages[currentPageIndex].getName();\n        setPageIndex(currentPageIndex);\n    }, [props, pageIndex]);\n\n    const renderNavbarButton = (page : Page, index : number) => {\n        if (!page.isOnNavbar) console.error(\"Rendering as navbar button illegally.\")\n        return page.getButton(pageIndex === index);\n    }\n    const renderRoute = (page : Page) => {\n        if (!page.isLocal()) console.error(\"Rendering external route.\")\n        return page.getRoute();\n    }\n\n    const routes = pages.filter((page : Page) => page.isLocal()).map(renderRoute);\n    if (pages[pageIndex].isIndependent()) {\n        return (<Switch>{ routes }</Switch>);\n    }\n\n    const accentColour = pages[pageIndex].getColour();\n    const navbarButtons = pages.filter((page : Page) => page.isOnNavbar()).map(renderNavbarButton);\n    return (\n        <AppContainer>\n            <GlobalStyling bgColour={ accentColour } />\n            <Title page={ pages[pageIndex] } />\n            <Navbar>\n                { navbarButtons }\n            </Navbar>\n            <MainContainer accentColour={ accentColour }>\n                <Switch>\n                    { routes }\n                </Switch>\n            </MainContainer> \n            <Spacer />\n            <Footer />\n        </AppContainer>\n    );\n}\nexport default withRouter(App);\n\nconst AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100vw;\n`;\n\nconst Navbar = styled.nav`\n    ${mainContainerSizeSettings}\n    ${ifLarge} {\n        width: 90%;\n    }\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    \n    div {\n        flex: 1 0 0;\n    }\n\n    ${ifLarge} {\n        flex-direction: row;\n    }\n`;\n\nconst MainContainer = styled.div<{ accentColour : string }>`\n    ${containerStyling}\n    ${mainContainerSizeSettings}\n\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n\n    padding: ${spacing3};\n    margin-top: ${spacing2};\n    margin-bottom: ${spacing2};\n\n    a, .a, .accent {\n        color: ${props => props.accentColour};\n        transition: color ${bgTransitionTime};\n    }\n`;\n\nconst Spacer = styled.div`\n    flex-grow: 1;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}